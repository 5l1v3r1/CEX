Versions 0.01 - 0.07: Jan 24 to June 04, 2016
* Initial translation from CEX-NET
* Updates to format and code
* First review

Version 0.08: June 04, 2016
* AES-NI added (512 key and HKDF key expansion capable).

Version 0.09: July 08, 2016
* Blake2 added; 2B, 2BP, 2S, and 2SP, sequential and parallel, integrated Mac and Drbg, optional intrinsics.
* Added intrinsics to the parallelized ChaCha implementation
* Work on CpuDetect, (all intrinsics are now runtime enabled automatically).
* Set default SSE support to AVX /arch:AVX
* Work begun on intrinsics symmetric mode chain

Version 0.10: July 18, 2016
* Added SIMD wrappers UInt128 and UInt256
* Added intrinsics support to Twofish and Serpent (Encrypt64 and Decrypt64)
* Added intrinsics block process (mm128 -4 block) intrinsics to parallel CTR block cipher mode
* Expanded intrinsic support in AES-NI (AHX) to 4 block (Encrypt64 and Decrypt64)
* Serpent changed from outputting big endian to little endian (breaking change)
* Added intrinsics integrity tests to ParallelModeTest.
* SIMD intrinsics supported added to Serpent (SHX), Twofish (THX) and extended in Rijndael (AHX)
* Block cipher CTR mode runtime switched (cpu check) to use 128 (SSE3) and 256 (AVX) intrinsics if available
* 128 and 256 SIMD support added to ChaCha and Salsa implementations
* C++ exceptions support now optional via the ENABLE_CPPEXCEPTIONS flag in Config.h
* Added various intrinsics tests to ParallelModeTest class

Version 0.11: August 12, 2016
* Fixed bug in SIMD counter staggered offsets in Salsa and ChaCha implementations
* Fixed bug in symmetric cipher Initialize() where disabling exceptions caused digest initialization to throw
* Parallel mode and CipherStream tests extended and adjusted

Version 0.12: September 21, 2016
Added little endian counter mode ICM, updated and rewrote all block cipher modes.
Added Wide Block Vectorization (WBV) to CBC and ECB modes, (see header files for description). 
ECB and CBC-Decrypt parallelized and pipelined, CFB-Decrypt parallelized.
Updates to Salsa and ChaCha, updates to documentation, and some reorganization of code base.
Speeds are now absolutely insane; (ECB/ICM/CBC-Decrypt modes using AESNI-256, all regularly clock over 9GB per second on my 'modest' HP desktop). The block/stream cipher portion of this release is stable; (aside from bug fixes or enhancements, existing cipher modes should be constant, but new modes will soon be added).

Version 0.13: December 18, 2016
Added pipelined and parallelized SHA-2 implementations. 
Kdfs and Drbgs seperated and rewritten. 
Salsa and block cipher CTR mode Drbgs written with SIMD extensions.
XORShift+, ISAAC and VMPC MAC implementations removed, (primitives may not be secure enough or tested enough for this library).
MACs rewritten, MacParams and RngParams class containers added. 
Some things shifted around in the namespace, and a lot of small optimizations throughout.
Documentation expanded and rewritten, now each class (brevity permitting), contains a mathematical description of the main function, a usage example, a technical overview, external links, and implementation details.
Published the libraries html help documentation and updated the links.

Version 0.14: February 26, 2017
Added pipelind and parallelized EAX, GCM, and OCB authenticated cipher modes
Global integration of the ParallelOptions class for auto-calculating and independant SIMD and multi-threading controls
Addition of the GMAC message authentication generator
Implementation of cache management and constant-time timing attack counter-measures

Version 1.0: March 28, 2017
First official release of the library, (ciphers and protocols are now tested, documented, and ready for deployment).
Completed Code and Help review cycles.
Added Tree Hashing to all Skein and Keccak digest implementations.
Added SIMD parallelization to Skein512.
Rewrote SHA-2 tree hashing and added support for the SHA-NI SIMD to SHA-256.
Added a multi-threaded and SIMD parallel implementation of the SCRYPT key derivation function.

Version 1.0.0.3, June 30, 2017

Added asymmetric cipher interfaces and framework

Added RingLWE asymmetric cipher

Added the Auto Collection seed Provider (ACP)
Addition of the HCR prng

Renaming of the drbgs to xCG format: BCG, DCG, and HCG; Block cipher Counter Generator, Digest and HMAC Counter Generators

Overhaul of SecureRandom and prng classes