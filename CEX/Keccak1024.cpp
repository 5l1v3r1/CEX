#include "Keccak1024.h"
#include "Keccak.h"
#include "IntUtils.h"
#include "MemUtils.h"
#include "ParallelUtils.h"

NAMESPACE_DIGEST

const std::string Keccak1024::CLASS_NAME("Keccak1024");

//~~~Properties~~~//

size_t Keccak1024::BlockSize()
{
	return BLOCK_SIZE;
}

size_t Keccak1024::DigestSize()
{
	return DIGEST_SIZE;
}

const Digests Keccak1024::Enumeral()
{
	return Digests::Keccak1024;
}

const bool Keccak1024::IsParallel()
{
	return m_parallelProfile.IsParallel();
}

const std::string Keccak1024::Name()
{
	if (m_parallelProfile.IsParallel())
		return CLASS_NAME + "-P" + Utility::IntUtils::ToString(m_parallelProfile.ParallelMaxDegree());
	else
		return CLASS_NAME;
}

const size_t Keccak1024::ParallelBlockSize()
{
	return m_parallelProfile.ParallelBlockSize();
}

ParallelOptions &Keccak1024::ParallelProfile()
{
	return m_parallelProfile;
}

//~~~Constructor~~~//

Keccak1024::Keccak1024(bool Parallel)
	:
	m_treeParams(DIGEST_SIZE, static_cast<uint>(BLOCK_SIZE), DEF_PRLDEGREE),
	m_dgtState(Parallel ? DEF_PRLDEGREE : 1),
	m_isDestroyed(false),
	m_msgBuffer(Parallel ? DEF_PRLDEGREE * BLOCK_SIZE : BLOCK_SIZE),
	m_msgLength(0),
	m_parallelProfile(BLOCK_SIZE, false, STATE_PRECACHED, false, DEF_PRLDEGREE)
{
	if (m_parallelProfile.IsParallel())
		m_parallelProfile.IsParallel() = Parallel;

	Reset();
}

Keccak1024::Keccak1024(KeccakParams &Params)
	:
	m_treeParams(Params),
	m_dgtState(1),
	m_isDestroyed(false),
	m_msgBuffer(BLOCK_SIZE),
	m_msgLength(0),
	m_parallelProfile(BLOCK_SIZE, false, STATE_PRECACHED, false, m_treeParams.FanOut())
{
	if (m_treeParams.FanOut() > 1)
	{
		m_dgtState.resize(m_treeParams.FanOut());
		m_msgBuffer.resize(m_treeParams.FanOut() * BLOCK_SIZE);
	}
	else if (m_parallelProfile.IsParallel())
	{
		m_parallelProfile.IsParallel() = false;
	}

	Reset();
}

Keccak1024::~Keccak1024()
{
	Destroy();
}

//~~~Public Functions~~~//

void Keccak1024::Compute(const std::vector<byte> &Input, std::vector<byte> &Output)
{
	Output.resize(DIGEST_SIZE);
	Update(Input, 0, Input.size());
	Finalize(Output, 0);
}

void Keccak1024::Destroy()
{
	if (!m_isDestroyed)
	{
		m_isDestroyed = true;
		m_msgLength = 0;

		for (size_t i = 0; i < m_dgtState.size(); ++i)
			m_dgtState[i].Reset();

		Utility::IntUtils::ClearVector(m_dgtState);
		Utility::IntUtils::ClearVector(m_msgBuffer);
	}
}

size_t Keccak1024::Finalize(std::vector<byte> &Output, const size_t OutOffset)
{
	const size_t OUTLEN = Output.size() - OutOffset;

	if (m_parallelProfile.IsParallel())
	{
		// pad buffer with zeros
		if (m_msgLength < m_msgBuffer.size())
			Utility::MemUtils::Clear(m_msgBuffer, m_msgLength, m_msgBuffer.size() - m_msgLength);

		// process buffer
		if (m_msgLength != 0)
		{
			size_t blkCtr = 0;

			while (m_msgLength != 0)
			{
				const size_t MSGRMD = (m_msgLength >= BLOCK_SIZE) ? BLOCK_SIZE : m_msgLength;
				HashFinal(m_msgBuffer, blkCtr * BLOCK_SIZE, MSGRMD, m_dgtState[blkCtr]);
				m_msgLength -= MSGRMD;
				++blkCtr;
			}
		}

		// initialize root state
		Keccak1024State rootState;
		m_msgBuffer.resize(m_dgtState.size() * DIGEST_SIZE, (byte)0);

		// add state blocks as contiguous message input
		for (size_t i = 0; i < m_dgtState.size(); ++i)
		{
			Utility::IntUtils::LeULL1024ToBlock(m_dgtState[i].H, 0, m_msgBuffer, i * DIGEST_SIZE);
			m_msgLength += DIGEST_SIZE;
		}

		// compress full blocks
		size_t blkOff = 0;
		if (m_msgLength > BLOCK_SIZE)
		{
			const size_t BLKRMD = m_msgLength - (m_msgLength % BLOCK_SIZE);

			for (size_t i = 0; i < BLKRMD / BLOCK_SIZE; ++i)
				Permute(m_msgBuffer, i * BLOCK_SIZE, BLOCK_SIZE, rootState.H);

			m_msgLength -= BLKRMD;
			blkOff = BLKRMD;
		}

		// finalize and store
		HashFinal(m_msgBuffer, blkOff, m_msgLength, rootState);

		if (OUTLEN >= DIGEST_SIZE)
		{
			Utility::IntUtils::LeULL1024ToBlock(rootState.H, 0, Output, OutOffset);
		}
		else
		{
			for (size_t i = 0; i < OUTLEN / sizeof(ulong); ++i)
				Utility::IntUtils::Le64ToBytes(rootState.H[i], Output, OutOffset + i * sizeof(ulong));
		}
	}
	else
	{

		if (m_msgLength != m_msgBuffer.size())
			Utility::MemUtils::Clear(m_msgBuffer, m_msgLength, m_msgBuffer.size() - m_msgLength);

		HashFinal(m_msgBuffer, 0, m_msgLength, m_dgtState[0]);

		if (OUTLEN >= DIGEST_SIZE)
		{
			Utility::IntUtils::LeULL1024ToBlock(m_dgtState[0].H, 0, Output, OutOffset);
		}
		else
		{
			for (size_t i = 0; i < OUTLEN / sizeof(ulong); ++i)
				Utility::IntUtils::Le64ToBytes(m_dgtState[0].H[i], Output, OutOffset + i * sizeof(ulong));
		}
	}

	Reset();

	return (OUTLEN >= DIGEST_SIZE) ? DIGEST_SIZE : OUTLEN;
}

void Keccak1024::ParallelMaxDegree(size_t Degree)
{
	if (Degree == 0)
		throw CryptoDigestException("Keccak1024:ParallelMaxDegree", "Parallel degree can not be zero!");
	if (Degree > 254)
		throw CryptoDigestException("Keccak1024:ParallelMaxDegree", "Parallel degree can not exceed 254!");
	if (Degree % 2 != 0)
		throw CryptoDigestException("Keccak1024:ParallelMaxDegree", "Parallel degree must be an even number!");

	m_parallelProfile.SetMaxDegree(Degree);
	Reset();
}

void Keccak1024::Reset()
{
	Utility::MemUtils::Clear(m_msgBuffer, 0, m_msgBuffer.size());
	m_msgLength = 0;

	for (size_t i = 0; i < m_dgtState.size(); ++i)
	{
		m_dgtState[i].Reset();

		if (m_parallelProfile.IsParallel())
		{
			m_treeParams.NodeOffset() = static_cast<uint>(i);
			Permute(m_treeParams.ToBytes(), 0, BLOCK_SIZE, m_dgtState[i].H);
		}
	}
}
//0: 0x0000000000000001
//1: 8082
//2: 800000000000808a
//3: 8000000080008000
//4: 808b
//5: 80000001
//6: 8000000080008081
//7: 8000000000008009
//8: 8a
//9: 88
//10: 80008009
//11: 8000000a
//12: 8000808b
//13: 800000000000008b
//14: 8000000000008089
//15: 8000000000008003
//16: 8000000000008002
//17: 8000000000000080
//18: 800a
//19: 800000008000000a
//20: 8000000080008081
//21: 8000000000008080
//22: 80000001
//23: 8000000080008008


//24: 0x8000000080008082
//25: 0x800000008000800a
//26: 0x8000000000000003
//27: 0x8000000080000009
//28: 0x8000000000008082
//29: 0x0000000000008009
//30: 0x8000000000000080
//31: 0x0000000000008083
//32: 0x8000000000000081
//33: 0x0000000000000001
//34: 0x000000000000800b
//35: 0x8000000080008001
//36: 0x0000000000000080
//37: 0x8000000000008000
//38: 0x8000000080008001
//39: 0x0000000000000009
//40: 0x800000008000808b
//41: 0x0000000000000081
//42: 0x8000000000000082
//43: 0x000000008000008b
//44: 0x8000000080008009
//45: 0x8000000080000000
//46: 0x0000000080000080
//47: 0x0000000080008003

void Keccak1024::Update(byte Input)
{
	std::vector<byte> one(1, Input);
	Update(one, 0, 1);
}

void Keccak1024::Update(const std::vector<byte> &Input, size_t InOffset, size_t Length)
{
	CEXASSERT(Input.size() - InOffset >= Length, "The Output buffer is too short!");

	if (Length == 0)
		return;

	if (m_parallelProfile.IsParallel())
	{
		if (m_msgLength != 0 && Length + m_msgLength >= m_msgBuffer.size())
		{
			// fill buffer
			const size_t RMDLEN = m_msgBuffer.size() - m_msgLength;
			if (RMDLEN != 0)
				Utility::MemUtils::Copy(Input, InOffset, m_msgBuffer, m_msgLength, RMDLEN);

			// empty the message buffer
			Utility::ParallelUtils::ParallelFor(0, m_parallelProfile.ParallelMaxDegree(), [this, &Input, InOffset](size_t i)
			{
				Permute(m_msgBuffer, i * BLOCK_SIZE, BLOCK_SIZE, m_dgtState[i].H);
			});

			m_msgLength = 0;
			Length -= RMDLEN;
			InOffset += RMDLEN;
		}

		if (Length >= m_parallelProfile.ParallelBlockSize())
		{
			// calculate working set size
			const size_t PRCLEN = Length - (Length % m_parallelProfile.ParallelBlockSize());

			// process large blocks
			Utility::ParallelUtils::ParallelFor(0, m_parallelProfile.ParallelMaxDegree(), [this, &Input, InOffset, PRCLEN](size_t i)
			{
				ProcessLeaf(Input, InOffset + (i * BLOCK_SIZE), m_dgtState[i], PRCLEN);
			});

			Length -= PRCLEN;
			InOffset += PRCLEN;
		}

		if (Length >= m_parallelProfile.ParallelMinimumSize())
		{
			const size_t PRMLEN = Length - (Length % m_parallelProfile.ParallelMinimumSize());

			Utility::ParallelUtils::ParallelFor(0, m_parallelProfile.ParallelMaxDegree(), [this, &Input, InOffset, PRMLEN](size_t i)
			{
				ProcessLeaf(Input, InOffset + (i * BLOCK_SIZE), m_dgtState[i], PRMLEN);
			});

			Length -= PRMLEN;
			InOffset += PRMLEN;
		}
	}
	else
	{
		if (m_msgLength != 0 && (m_msgLength + Length >= BLOCK_SIZE))
		{
			const size_t RMDLEN = BLOCK_SIZE - m_msgLength;
			if (RMDLEN != 0)
				Utility::MemUtils::Copy(Input, InOffset, m_msgBuffer, m_msgLength, RMDLEN);

			Permute(m_msgBuffer, 0, BLOCK_SIZE, m_dgtState[0].H);
			m_msgLength = 0;
			InOffset += RMDLEN;
			Length -= RMDLEN;
		}

		// sequential loop through blocks
		while (Length >= BLOCK_SIZE)
		{
			Permute(Input, InOffset, BLOCK_SIZE, m_dgtState[0].H);
			InOffset += BLOCK_SIZE;
			Length -= BLOCK_SIZE;
		}
	}

	// store unaligned bytes
	if (Length != 0)
	{
		Utility::MemUtils::Copy(Input, InOffset, m_msgBuffer, m_msgLength, Length);
		m_msgLength += Length;
	}
}

//~~~Private Functions~~~//

void Keccak1024::HashFinal(std::vector<byte> &Input, size_t InOffset, size_t Length, Keccak1024State &State)
{
	Input[InOffset + Length] = 1;
	Input[InOffset + BLOCK_SIZE - 1] |= 128;
	Permute(Input, InOffset, BLOCK_SIZE, State.H);
	State.H[1] = ~State.H[1];
	State.H[2] = ~State.H[2];
	State.H[8] = ~State.H[8];
	State.H[12] = ~State.H[12];
	State.H[17] = ~State.H[17];
}

void Keccak1024::Permute(const std::vector<byte> &Input, size_t InOffset, size_t Length, std::vector<ulong> &State)
{
	for (size_t i = 0; i < Length / sizeof(ulong); ++i)
		State[i] ^= IntUtils::LeBytesTo64(Input, InOffset + (i * sizeof(ulong)));

	ulong Aba, Abe, Abi, Abo, Abu;
	ulong Aga, Age, Agi, Ago, Agu;
	ulong Aka, Ake, Aki, Ako, Aku;
	ulong Ama, Ame, Ami, Amo, Amu;
	ulong Asa, Ase, Asi, Aso, Asu;
	ulong Bba, Bbe, Bbi, Bbo, Bbu;
	ulong Bga, Bge, Bgi, Bgo, Bgu;
	ulong Bka, Bke, Bki, Bko, Bku;
	ulong Bma, Bme, Bmi, Bmo, Bmu;
	ulong Bsa, Bse, Bsi, Bso, Bsu;
	ulong Ca, Ce, Ci, Co, Cu;
	ulong Da, De, Di, Do, Du;
	ulong Eba, Ebe, Ebi, Ebo, Ebu;
	ulong Ega, Ege, Egi, Ego, Egu;
	ulong Eka, Eke, Eki, Eko, Eku;
	ulong Ema, Eme, Emi, Emo, Emu;
	ulong Esa, Ese, Esi, Eso, Esu;

	Aba = State[0];
	Abe = State[1];
	Abi = State[2];
	Abo = State[3];
	Abu = State[4];
	Aga = State[5];
	Age = State[6];
	Agi = State[7];
	Ago = State[8];
	Agu = State[9];
	Aka = State[10];
	Ake = State[11];
	Aki = State[12];
	Ako = State[13];
	Aku = State[14];
	Ama = State[15];
	Ame = State[16];
	Ami = State[17];
	Amo = State[18];
	Amu = State[19];
	Asa = State[20];
	Ase = State[21];
	Asi = State[22];
	Aso = State[23];
	Asu = State[24];

	// theta
	Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
	Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
	Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
	Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
	Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;

	// round 1
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x0000000000000001;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 2
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000000008082;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 3
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x800000000000808a;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 4
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000080008000;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 5
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x000000000000808b;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 6
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000080000001;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 7
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000080008081;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 8
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000000008009;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 9
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x000000000000008a;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 10
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000000000088;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 11
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x0000000080008009;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 12
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x000000008000000a;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 13
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x000000008000808b;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 14
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x800000000000008b;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 15
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000000008089;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 16
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000000008003;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 17
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000000008002;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 18
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000000000080;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 19
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x000000000000800a;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 20
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x800000008000000a;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 21
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000080008081;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 22
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000000008080;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 23
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x0000000080000001;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 24
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000080008008;
	Abe = Bbe ^ (~Bbi | Bbo);
	Abi = Bbi ^ (Bbo & Bbu);
	Abo = Bbo ^ (Bbu | Bba);
	Abu = Bbu ^ (Bba & Bbe);
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Age = Bge ^ (Bgi & Bgo);
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ago = Bgo ^ (Bgu | Bga);
	Agu = Bgu ^ (Bga & Bge);
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ake = Bke ^ (Bki & Bko);
	Aki = Bki ^ (~Bko & Bku);
	Ako = ~Bko ^ (Bku | Bka);
	Aku = Bku ^ (Bka & Bke);
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ame = Bme ^ (Bmi | Bmo);
	Ami = Bmi ^ (~Bmo | Bmu);
	Amo = ~Bmo ^ (Bmu & Bma);
	Amu = Bmu ^ (Bma | Bme);
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ase = ~Bse ^ (Bsi | Bso);
	Asi = Bsi ^ (Bso & Bsu);
	Aso = Bso ^ (Bsu | Bsa);
	Asu = Bsu ^ (Bsa & Bse);

	// round 25
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000080008082;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 26
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x800000008000800a;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 27
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000000000003;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 28
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000080000009;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 29
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000000008082;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 30
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000000008009;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 31
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000000000080;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 32
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000000008083;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 33
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000000000081;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 34
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000000000001;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 35
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x000000000000800b;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 36
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000080008001;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 37
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x0000000000000080;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 38
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000000008000;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 39
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000080008001;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 40
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000000000009;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 41
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x800000008000808b;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 42
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000000000081;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 43
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000000000082;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 44
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x000000008000008b;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 45
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x8000000080008009;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 46
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x8000000080000000;
	Ca = Aba;
	Abe = Bbe ^ (~Bbi | Bbo);
	Ce = Abe;
	Abi = Bbi ^ (Bbo & Bbu);
	Ci = Abi;
	Abo = Bbo ^ (Bbu | Bba);
	Co = Abo;
	Abu = Bbu ^ (Bba & Bbe);
	Cu = Abu;
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Ca ^= Aga;
	Age = Bge ^ (Bgi & Bgo);
	Ce ^= Age;
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Agi;
	Ago = Bgo ^ (Bgu | Bga);
	Co ^= Ago;
	Agu = Bgu ^ (Bga & Bge);
	Cu ^= Agu;
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ca ^= Aka;
	Ake = Bke ^ (Bki & Bko);
	Ce ^= Ake;
	Aki = Bki ^ (~Bko & Bku);
	Ci ^= Aki;
	Ako = (~Bko) ^ (Bku | Bka);
	Co ^= Ako;
	Aku = Bku ^ (Bka & Bke);
	Cu ^= Aku;
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ca ^= Ama;
	Ame = Bme ^ (Bmi | Bmo);
	Ce ^= Ame;
	Ami = Bmi ^ (~Bmo | Bmu);
	Ci ^= Ami;
	Amo = ~Bmo ^ (Bmu & Bma);
	Co ^= Amo;
	Amu = Bmu ^ (Bma | Bme);
	Cu ^= Amu;
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ca ^= Asa;
	Ase = ~Bse ^ (Bsi | Bso);
	Ce ^= Ase;
	Asi = Bsi ^ (Bso & Bsu);
	Ci ^= Asi;
	Aso = Bso ^ (Bsu | Bsa);
	Co ^= Aso;
	Asu = Bsu ^ (Bsa & Bse);
	Cu ^= Asu;

	// round 47
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Aba ^= Da;
	Bba = Aba;
	Age ^= De;
	Bbe = IntUtils::RotFL64(Age, 44);
	Aki ^= Di;
	Bbi = IntUtils::RotFL64(Aki, 43);
	Amo ^= Do;
	Bbo = IntUtils::RotFL64(Amo, 21);
	Asu ^= Du;
	Bbu = IntUtils::RotFL64(Asu, 14);
	Eba = Bba ^ (Bbe | Bbi);
	Eba ^= 0x0000000080000080;
	Ca = Eba;
	Ebe = Bbe ^ (~Bbi | Bbo);
	Ce = Ebe;
	Ebi = Bbi ^ (Bbo & Bbu);
	Ci = Ebi;
	Ebo = Bbo ^ (Bbu | Bba);
	Co = Ebo;
	Ebu = Bbu ^ (Bba & Bbe);
	Cu = Ebu;
	Abo ^= Do;
	Bga = IntUtils::RotFL64(Abo, 28);
	Agu ^= Du;
	Bge = IntUtils::RotFL64(Agu, 20);
	Aka ^= Da;
	Bgi = IntUtils::RotFL64(Aka, 3);
	Ame ^= De;
	Bgo = IntUtils::RotFL64(Ame, 45);
	Asi ^= Di;
	Bgu = IntUtils::RotFL64(Asi, 61);
	Ega = Bga ^ (Bge | Bgi);
	Ca ^= Ega;
	Ege = Bge ^ (Bgi & Bgo);
	Ce ^= Ege;
	Egi = Bgi ^ (Bgo | ~Bgu);
	Ci ^= Egi;
	Ego = Bgo ^ (Bgu | Bga);
	Co ^= Ego;
	Egu = Bgu ^ (Bga & Bge);
	Cu ^= Egu;
	Abe ^= De;
	Bka = IntUtils::RotFL64(Abe, 1);
	Agi ^= Di;
	Bke = IntUtils::RotFL64(Agi, 6);
	Ako ^= Do;
	Bki = IntUtils::RotFL64(Ako, 25);
	Amu ^= Du;
	Bko = IntUtils::RotFL64(Amu, 8);
	Asa ^= Da;
	Bku = IntUtils::RotFL64(Asa, 18);
	Eka = Bka ^ (Bke | Bki);
	Ca ^= Eka;
	Eke = Bke ^ (Bki & Bko);
	Ce ^= Eke;
	Eki = Bki ^ (~Bko & Bku);
	Ci ^= Eki;
	Eko = (~Bko) ^ (Bku | Bka);
	Co ^= Eko;
	Eku = Bku ^ (Bka & Bke);
	Cu ^= Eku;
	Abu ^= Du;
	Bma = IntUtils::RotFL64(Abu, 27);
	Aga ^= Da;
	Bme = IntUtils::RotFL64(Aga, 36);
	Ake ^= De;
	Bmi = IntUtils::RotFL64(Ake, 10);
	Ami ^= Di;
	Bmo = IntUtils::RotFL64(Ami, 15);
	Aso ^= Do;
	Bmu = IntUtils::RotFL64(Aso, 56);
	Ema = Bma ^ (Bme & Bmi);
	Ca ^= Ema;
	Eme = Bme ^ (Bmi | Bmo);
	Ce ^= Eme;
	Emi = Bmi ^ (~Bmo | Bmu);
	Ci ^= Emi;
	Emo = ~Bmo ^ (Bmu & Bma);
	Co ^= Emo;
	Emu = Bmu ^ (Bma | Bme);
	Cu ^= Emu;
	Abi ^= Di;
	Bsa = IntUtils::RotFL64(Abi, 62);
	Ago ^= Do;
	Bse = IntUtils::RotFL64(Ago, 55);
	Aku ^= Du;
	Bsi = IntUtils::RotFL64(Aku, 39);
	Ama ^= Da;
	Bso = IntUtils::RotFL64(Ama, 41);
	Ase ^= De;
	Bsu = IntUtils::RotFL64(Ase, 2);
	Esa = Bsa ^ (~Bse & Bsi);
	Ca ^= Esa;
	Ese = ~Bse ^ (Bsi | Bso);
	Ce ^= Ese;
	Esi = Bsi ^ (Bso & Bsu);
	Ci ^= Esi;
	Eso = Bso ^ (Bsu | Bsa);
	Co ^= Eso;
	Esu = Bsu ^ (Bsa & Bse);
	Cu ^= Esu;

	// round 48
	Da = Cu ^ IntUtils::RotFL64(Ce, 1);
	De = Ca ^ IntUtils::RotFL64(Ci, 1);
	Di = Ce ^ IntUtils::RotFL64(Co, 1);
	Do = Ci ^ IntUtils::RotFL64(Cu, 1);
	Du = Co ^ IntUtils::RotFL64(Ca, 1);
	Eba ^= Da;
	Bba = Eba;
	Ege ^= De;
	Bbe = IntUtils::RotFL64(Ege, 44);
	Eki ^= Di;
	Bbi = IntUtils::RotFL64(Eki, 43);
	Emo ^= Do;
	Bbo = IntUtils::RotFL64(Emo, 21);
	Esu ^= Du;
	Bbu = IntUtils::RotFL64(Esu, 14);
	Aba = Bba ^ (Bbe | Bbi);
	Aba ^= 0x0000000080008003;
	Abe = Bbe ^ (~Bbi | Bbo);
	Abi = Bbi ^ (Bbo & Bbu);
	Abo = Bbo ^ (Bbu | Bba);
	Abu = Bbu ^ (Bba & Bbe);
	Ebo ^= Do;
	Bga = IntUtils::RotFL64(Ebo, 28);
	Egu ^= Du;
	Bge = IntUtils::RotFL64(Egu, 20);
	Eka ^= Da;
	Bgi = IntUtils::RotFL64(Eka, 3);
	Eme ^= De;
	Bgo = IntUtils::RotFL64(Eme, 45);
	Esi ^= Di;
	Bgu = IntUtils::RotFL64(Esi, 61);
	Aga = Bga ^ (Bge | Bgi);
	Age = Bge ^ (Bgi & Bgo);
	Agi = Bgi ^ (Bgo | ~Bgu);
	Ago = Bgo ^ (Bgu | Bga);
	Agu = Bgu ^ (Bga & Bge);
	Ebe ^= De;
	Bka = IntUtils::RotFL64(Ebe, 1);
	Egi ^= Di;
	Bke = IntUtils::RotFL64(Egi, 6);
	Eko ^= Do;
	Bki = IntUtils::RotFL64(Eko, 25);
	Emu ^= Du;
	Bko = IntUtils::RotFL64(Emu, 8);
	Esa ^= Da;
	Bku = IntUtils::RotFL64(Esa, 18);
	Aka = Bka ^ (Bke | Bki);
	Ake = Bke ^ (Bki & Bko);
	Aki = Bki ^ (~Bko & Bku);
	Ako = ~Bko ^ (Bku | Bka);
	Aku = Bku ^ (Bka & Bke);
	Ebu ^= Du;
	Bma = IntUtils::RotFL64(Ebu, 27);
	Ega ^= Da;
	Bme = IntUtils::RotFL64(Ega, 36);
	Eke ^= De;
	Bmi = IntUtils::RotFL64(Eke, 10);
	Emi ^= Di;
	Bmo = IntUtils::RotFL64(Emi, 15);
	Eso ^= Do;
	Bmu = IntUtils::RotFL64(Eso, 56);
	Ama = Bma ^ (Bme & Bmi);
	Ame = Bme ^ (Bmi | Bmo);
	Ami = Bmi ^ (~Bmo | Bmu);
	Amo = ~Bmo ^ (Bmu & Bma);
	Amu = Bmu ^ (Bma | Bme);
	Ebi ^= Di;
	Bsa = IntUtils::RotFL64(Ebi, 62);
	Ego ^= Do;
	Bse = IntUtils::RotFL64(Ego, 55);
	Eku ^= Du;
	Bsi = IntUtils::RotFL64(Eku, 39);
	Ema ^= Da;
	Bso = IntUtils::RotFL64(Ema, 41);
	Ese ^= De;
	Bsu = IntUtils::RotFL64(Ese, 2);
	Asa = Bsa ^ (~Bse & Bsi);
	Ase = ~Bse ^ (Bsi | Bso);
	Asi = Bsi ^ (Bso & Bsu);
	Aso = Bso ^ (Bsu | Bsa);
	Asu = Bsu ^ (Bsa & Bse);

	State[0] = Aba;
	State[1] = Abe;
	State[2] = Abi;
	State[3] = Abo;
	State[4] = Abu;
	State[5] = Aga;
	State[6] = Age;
	State[7] = Agi;
	State[8] = Ago;
	State[9] = Agu;
	State[10] = Aka;
	State[11] = Ake;
	State[12] = Aki;
	State[13] = Ako;
	State[14] = Aku;
	State[15] = Ama;
	State[16] = Ame;
	State[17] = Ami;
	State[18] = Amo;
	State[19] = Amu;
	State[20] = Asa;
	State[21] = Ase;
	State[22] = Asi;
	State[23] = Aso;
	State[24] = Asu;
}

void Keccak1024::ProcessLeaf(const std::vector<byte> &Input, size_t InOffset, Keccak1024State &State, ulong Length)
{
	do
	{
		Permute(Input, InOffset, BLOCK_SIZE, State.H);
		InOffset += m_parallelProfile.ParallelMinimumSize();
		Length -= m_parallelProfile.ParallelMinimumSize();
	} 
	while (Length > 0);
}

NAMESPACE_DIGESTEND