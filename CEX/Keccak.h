// The GPL version 3 License (GPLv3)
// 
// Copyright (c) 2017 vtdev.com
// This file is part of the CEX Cryptographic library.
// 
// This program is free software : you can redistribute it and / or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITStateOUT ANY WARRANTY; without even the implied warranty of
// MERCStateANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

#ifndef CEX_KECCAK_State
#define CEX_KECCAK_State

#include "CexDomain.h"
#include "IntUtils.h"

NAMESPACE_DIGEST

using Utility::IntUtils;

/**
* \internal
*/

/// <summary>
/// Internal static class containing the 24 and 48 round Keccak permutation functions.
/// <para>Note: The Permute48 is an extended permutation function that uses 48 rounds, rather than the 24 rounds used by the SStateA3 implementation of Keccak.
/// The additional 24 rounds constants were generated using the LFSR from the Keccak code package, with the additional 24 constants being
/// the next in sequence generated by that LFSR.</para>
/// </summary>
class Keccak
{
// Keccak 1024 round constants enum (hard coded, not used)
// Generated using the InitializeRoundConstants/LFSR86540 function from the keccak code package:
// https://github.com/gvanas/KeccakCodePackage/blob/aa3cded0ae844dbff0dbecfb6d42d50c7bdb9d9b/SnP/KeccakP-1600/Reference/KeccakP-1600-reference.c
// The first 24 are the standard constants, the second set was generated by extending the LFSR to generate 48 round constants
//const ulong RC2[48] =
//{
//	0x0000000000000001, 0x0000000000008082, 0x800000000000808A, 0x8000000080008000,
//	0x000000000000808B, 0x0000000080000001, 0x8000000080008081, 0x8000000000008009,
//	0x000000000000008A, 0x0000000000000088, 0x0000000080008009, 0x000000008000000A,
//	0x000000008000808B, 0x800000000000008B, 0x8000000000008089, 0x8000000000008003,
//	0x8000000000008002, 0x8000000000000080, 0x000000000000800A, 0x800000008000000A,
//	0x8000000080008081, 0x8000000000008080, 0x0000000080000001, 0x8000000080008008,
//  // next sequence generated using LFSR86540
//	0x8000000080008082, 0x800000008000800A, 0x8000000000000003, 0x8000000080000009,
//	0x8000000000008082, 0x0000000000008009, 0x8000000000000080, 0x0000000000008083,
//	0x8000000000000081, 0x0000000000000001, 0x000000000000800B, 0x8000000080008001,
//	0x0000000000000080, 0x8000000000008000, 0x8000000080008001, 0x0000000000000009,
//	0x800000008000808B, 0x0000000000000081, 0x8000000000000082, 0x000000008000008B,
//	0x8000000080008009, 0x8000000080000000, 0x0000000080000080, 0x0000000080008003
//};

public:

	inline static void Permute24(std::array<ulong, 25> &State)
	{
		uint64_t Aba = State[0];
		uint64_t Abe = State[1];
		uint64_t Abi = State[2];
		uint64_t Abo = State[3];
		uint64_t Abu = State[4];
		uint64_t Aga = State[5];
		uint64_t Age = State[6];
		uint64_t Agi = State[7];
		uint64_t Ago = State[8];
		uint64_t Agu = State[9];
		uint64_t Aka = State[10];
		uint64_t Ake = State[11];
		uint64_t Aki = State[12];
		uint64_t Ako = State[13];
		uint64_t Aku = State[14];
		uint64_t Ama = State[15];
		uint64_t Ame = State[16];
		uint64_t Ami = State[17];
		uint64_t Amo = State[18];
		uint64_t Amu = State[19];
		uint64_t Asa = State[20];
		uint64_t Ase = State[21];
		uint64_t Asi = State[22];
		uint64_t Aso = State[23];
		uint64_t Asu = State[24];

		// round 1
		uint64_t Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		uint64_t Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		uint64_t Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		uint64_t Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		uint64_t Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		uint64_t Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		uint64_t De = Ca ^ IntUtils::RotFL64(Ci, 1);
		uint64_t Di = Ce ^ IntUtils::RotFL64(Co, 1);
		uint64_t Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		uint64_t Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		uint64_t Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000000000001ULL;
		uint64_t Ebe = Ce ^ ((~Ci) & Co);
		uint64_t Ebi = Ci ^ ((~Co) & Cu);
		uint64_t Ebo = Co ^ ((~Cu) & Ca);
		uint64_t Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		uint64_t Ega = Ca ^ ((~Ce) & Ci);
		uint64_t Ege = Ce ^ ((~Ci) & Co);
		uint64_t Egi = Ci ^ ((~Co) & Cu);
		uint64_t Ego = Co ^ ((~Cu) & Ca);
		uint64_t Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		uint64_t Eka = Ca ^ ((~Ce) & Ci);
		uint64_t Eke = Ce ^ ((~Ci) & Co);
		uint64_t Eki = Ci ^ ((~Co) & Cu);
		uint64_t Eko = Co ^ ((~Cu) & Ca);
		uint64_t Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		uint64_t Ema = Ca ^ ((~Ce) & Ci);
		uint64_t Eme = Ce ^ ((~Ci) & Co);
		uint64_t Emi = Ci ^ ((~Co) & Cu);
		uint64_t Emo = Co ^ ((~Cu) & Ca);
		uint64_t Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		uint64_t Esa = Ca ^ ((~Ce) & Ci);
		uint64_t Ese = Ce ^ ((~Ci) & Co);
		uint64_t Esi = Ci ^ ((~Co) & Cu);
		uint64_t Eso = Co ^ ((~Cu) & Ca);
		uint64_t Esu = Cu ^ ((~Ca) & Ce);
		// round 2
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000008082ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 3
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x800000000000808AULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 4
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000080008000ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 5
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000000000808BULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 6
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000080000001ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 7
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000080008081ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 8
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000008009ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 9
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000000000008AULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 10
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000000088ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 11
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000080008009ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 12
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x000000008000000AULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 13
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000008000808BULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 14
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x800000000000008BULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 15
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000008089ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 16
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000008003ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 17
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000008002ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 18
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000000080ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 19
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000000000800AULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 20
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x800000008000000AULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 21
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000080008081ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 22
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000008080ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 23
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000080000001ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 24
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000080008008ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);

		State[0] = Aba;
		State[1] = Abe;
		State[2] = Abi;
		State[3] = Abo;
		State[4] = Abu;
		State[5] = Aga;
		State[6] = Age;
		State[7] = Agi;
		State[8] = Ago;
		State[9] = Agu;
		State[10] = Aka;
		State[11] = Ake;
		State[12] = Aki;
		State[13] = Ako;
		State[14] = Aku;
		State[15] = Ama;
		State[16] = Ame;
		State[17] = Ami;
		State[18] = Amo;
		State[19] = Amu;
		State[20] = Asa;
		State[21] = Ase;
		State[22] = Asi;
		State[23] = Aso;
		State[24] = Asu;
	}

	inline static void Permute48(std::array<ulong, 25> &State)
	{
		uint64_t Aba = State[0];
		uint64_t Abe = State[1];
		uint64_t Abi = State[2];
		uint64_t Abo = State[3];
		uint64_t Abu = State[4];
		uint64_t Aga = State[5];
		uint64_t Age = State[6];
		uint64_t Agi = State[7];
		uint64_t Ago = State[8];
		uint64_t Agu = State[9];
		uint64_t Aka = State[10];
		uint64_t Ake = State[11];
		uint64_t Aki = State[12];
		uint64_t Ako = State[13];
		uint64_t Aku = State[14];
		uint64_t Ama = State[15];
		uint64_t Ame = State[16];
		uint64_t Ami = State[17];
		uint64_t Amo = State[18];
		uint64_t Amu = State[19];
		uint64_t Asa = State[20];
		uint64_t Ase = State[21];
		uint64_t Asi = State[22];
		uint64_t Aso = State[23];
		uint64_t Asu = State[24];

		// round 1
		uint64_t Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		uint64_t Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		uint64_t Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		uint64_t Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		uint64_t Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		uint64_t Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		uint64_t De = Ca ^ IntUtils::RotFL64(Ci, 1);
		uint64_t Di = Ce ^ IntUtils::RotFL64(Co, 1);
		uint64_t Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		uint64_t Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		uint64_t Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000000000001ULL;
		uint64_t Ebe = Ce ^ ((~Ci) & Co);
		uint64_t Ebi = Ci ^ ((~Co) & Cu);
		uint64_t Ebo = Co ^ ((~Cu) & Ca);
		uint64_t Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		uint64_t Ega = Ca ^ ((~Ce) & Ci);
		uint64_t Ege = Ce ^ ((~Ci) & Co);
		uint64_t Egi = Ci ^ ((~Co) & Cu);
		uint64_t Ego = Co ^ ((~Cu) & Ca);
		uint64_t Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		uint64_t Eka = Ca ^ ((~Ce) & Ci);
		uint64_t Eke = Ce ^ ((~Ci) & Co);
		uint64_t Eki = Ci ^ ((~Co) & Cu);
		uint64_t Eko = Co ^ ((~Cu) & Ca);
		uint64_t Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		uint64_t Ema = Ca ^ ((~Ce) & Ci);
		uint64_t Eme = Ce ^ ((~Ci) & Co);
		uint64_t Emi = Ci ^ ((~Co) & Cu);
		uint64_t Emo = Co ^ ((~Cu) & Ca);
		uint64_t Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		uint64_t Esa = Ca ^ ((~Ce) & Ci);
		uint64_t Ese = Ce ^ ((~Ci) & Co);
		uint64_t Esi = Ci ^ ((~Co) & Cu);
		uint64_t Eso = Co ^ ((~Cu) & Ca);
		uint64_t Esu = Cu ^ ((~Ca) & Ce);
		// round 2
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000008082ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 3
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x800000000000808AULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 4
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000080008000ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 5
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000000000808BULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 6
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000080000001ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 7
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000080008081ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 8
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000008009ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 9
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000000000008AULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 10
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000000088ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 11
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000080008009ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 12
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x000000008000000AULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 13
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000008000808BULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 14
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x800000000000008BULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 15
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000008089ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 16
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000008003ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 17
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000008002ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 18
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000000080ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 19
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000000000800AULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 20
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x800000008000000AULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 21
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000080008081ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 22
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000008080ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 23
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000080000001ULL;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 24
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000080008008ULL;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 25
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000080008082;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 26
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x800000008000800A;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 27
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000000003;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 28
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000080000009;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 29
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000008082;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 30
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000008009;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 31
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000000080;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 32
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000008083;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 33
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000000081;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 34
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000000001;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 35
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x000000000000800B;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 36
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000080008001;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 37
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000000000080;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 38
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000000008000;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 39
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000080008001;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 40
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000000009;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 41
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x800000008000808B;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 42
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000000000081;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 43
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000000000082;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 44
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x000000008000008B;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 45
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x8000000080008009;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 46
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x8000000080000000;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);
		// round 47
		Ca = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
		Ce = Abe ^ Age ^ Ake ^ Ame ^ Ase;
		Ci = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
		Co = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
		Cu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Aba ^= Da;
		Ca = Aba;
		Age ^= De;
		Ce = IntUtils::RotFL64(Age, 44);
		Aki ^= Di;
		Ci = IntUtils::RotFL64(Aki, 43);
		Amo ^= Do;
		Co = IntUtils::RotFL64(Amo, 21);
		Asu ^= Du;
		Cu = IntUtils::RotFL64(Asu, 14);
		Eba = Ca ^ ((~Ce) & Ci);
		Eba ^= 0x0000000080000080;
		Ebe = Ce ^ ((~Ci) & Co);
		Ebi = Ci ^ ((~Co) & Cu);
		Ebo = Co ^ ((~Cu) & Ca);
		Ebu = Cu ^ ((~Ca) & Ce);
		Abo ^= Do;
		Ca = IntUtils::RotFL64(Abo, 28);
		Agu ^= Du;
		Ce = IntUtils::RotFL64(Agu, 20);
		Aka ^= Da;
		Ci = IntUtils::RotFL64(Aka, 3);
		Ame ^= De;
		Co = IntUtils::RotFL64(Ame, 45);
		Asi ^= Di;
		Cu = IntUtils::RotFL64(Asi, 61);
		Ega = Ca ^ ((~Ce) & Ci);
		Ege = Ce ^ ((~Ci) & Co);
		Egi = Ci ^ ((~Co) & Cu);
		Ego = Co ^ ((~Cu) & Ca);
		Egu = Cu ^ ((~Ca) & Ce);
		Abe ^= De;
		Ca = IntUtils::RotFL64(Abe, 1);
		Agi ^= Di;
		Ce = IntUtils::RotFL64(Agi, 6);
		Ako ^= Do;
		Ci = IntUtils::RotFL64(Ako, 25);
		Amu ^= Du;
		Co = IntUtils::RotFL64(Amu, 8);
		Asa ^= Da;
		Cu = IntUtils::RotFL64(Asa, 18);
		Eka = Ca ^ ((~Ce) & Ci);
		Eke = Ce ^ ((~Ci) & Co);
		Eki = Ci ^ ((~Co) & Cu);
		Eko = Co ^ ((~Cu) & Ca);
		Eku = Cu ^ ((~Ca) & Ce);
		Abu ^= Du;
		Ca = IntUtils::RotFL64(Abu, 27);
		Aga ^= Da;
		Ce = IntUtils::RotFL64(Aga, 36);
		Ake ^= De;
		Ci = IntUtils::RotFL64(Ake, 10);
		Ami ^= Di;
		Co = IntUtils::RotFL64(Ami, 15);
		Aso ^= Do;
		Cu = IntUtils::RotFL64(Aso, 56);
		Ema = Ca ^ ((~Ce) & Ci);
		Eme = Ce ^ ((~Ci) & Co);
		Emi = Ci ^ ((~Co) & Cu);
		Emo = Co ^ ((~Cu) & Ca);
		Emu = Cu ^ ((~Ca) & Ce);
		Abi ^= Di;
		Ca = IntUtils::RotFL64(Abi, 62);
		Ago ^= Do;
		Ce = IntUtils::RotFL64(Ago, 55);
		Aku ^= Du;
		Ci = IntUtils::RotFL64(Aku, 39);
		Ama ^= Da;
		Co = IntUtils::RotFL64(Ama, 41);
		Ase ^= De;
		Cu = IntUtils::RotFL64(Ase, 2);
		Esa = Ca ^ ((~Ce) & Ci);
		Ese = Ce ^ ((~Ci) & Co);
		Esi = Ci ^ ((~Co) & Cu);
		Eso = Co ^ ((~Cu) & Ca);
		Esu = Cu ^ ((~Ca) & Ce);
		// round 48
		Ca = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
		Ce = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
		Ci = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
		Co = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
		Cu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
		Da = Cu ^ IntUtils::RotFL64(Ce, 1);
		De = Ca ^ IntUtils::RotFL64(Ci, 1);
		Di = Ce ^ IntUtils::RotFL64(Co, 1);
		Do = Ci ^ IntUtils::RotFL64(Cu, 1);
		Du = Co ^ IntUtils::RotFL64(Ca, 1);
		Eba ^= Da;
		Ca = Eba;
		Ege ^= De;
		Ce = IntUtils::RotFL64(Ege, 44);
		Eki ^= Di;
		Ci = IntUtils::RotFL64(Eki, 43);
		Emo ^= Do;
		Co = IntUtils::RotFL64(Emo, 21);
		Esu ^= Du;
		Cu = IntUtils::RotFL64(Esu, 14);
		Aba = Ca ^ ((~Ce) & Ci);
		Aba ^= 0x0000000080008003;
		Abe = Ce ^ ((~Ci) & Co);
		Abi = Ci ^ ((~Co) & Cu);
		Abo = Co ^ ((~Cu) & Ca);
		Abu = Cu ^ ((~Ca) & Ce);
		Ebo ^= Do;
		Ca = IntUtils::RotFL64(Ebo, 28);
		Egu ^= Du;
		Ce = IntUtils::RotFL64(Egu, 20);
		Eka ^= Da;
		Ci = IntUtils::RotFL64(Eka, 3);
		Eme ^= De;
		Co = IntUtils::RotFL64(Eme, 45);
		Esi ^= Di;
		Cu = IntUtils::RotFL64(Esi, 61);
		Aga = Ca ^ ((~Ce) & Ci);
		Age = Ce ^ ((~Ci) & Co);
		Agi = Ci ^ ((~Co) & Cu);
		Ago = Co ^ ((~Cu) & Ca);
		Agu = Cu ^ ((~Ca) & Ce);
		Ebe ^= De;
		Ca = IntUtils::RotFL64(Ebe, 1);
		Egi ^= Di;
		Ce = IntUtils::RotFL64(Egi, 6);
		Eko ^= Do;
		Ci = IntUtils::RotFL64(Eko, 25);
		Emu ^= Du;
		Co = IntUtils::RotFL64(Emu, 8);
		Esa ^= Da;
		Cu = IntUtils::RotFL64(Esa, 18);
		Aka = Ca ^ ((~Ce) & Ci);
		Ake = Ce ^ ((~Ci) & Co);
		Aki = Ci ^ ((~Co) & Cu);
		Ako = Co ^ ((~Cu) & Ca);
		Aku = Cu ^ ((~Ca) & Ce);
		Ebu ^= Du;
		Ca = IntUtils::RotFL64(Ebu, 27);
		Ega ^= Da;
		Ce = IntUtils::RotFL64(Ega, 36);
		Eke ^= De;
		Ci = IntUtils::RotFL64(Eke, 10);
		Emi ^= Di;
		Co = IntUtils::RotFL64(Emi, 15);
		Eso ^= Do;
		Cu = IntUtils::RotFL64(Eso, 56);
		Ama = Ca ^ ((~Ce) & Ci);
		Ame = Ce ^ ((~Ci) & Co);
		Ami = Ci ^ ((~Co) & Cu);
		Amo = Co ^ ((~Cu) & Ca);
		Amu = Cu ^ ((~Ca) & Ce);
		Ebi ^= Di;
		Ca = IntUtils::RotFL64(Ebi, 62);
		Ego ^= Do;
		Ce = IntUtils::RotFL64(Ego, 55);
		Eku ^= Du;
		Ci = IntUtils::RotFL64(Eku, 39);
		Ema ^= Da;
		Co = IntUtils::RotFL64(Ema, 41);
		Ese ^= De;
		Cu = IntUtils::RotFL64(Ese, 2);
		Asa = Ca ^ ((~Ce) & Ci);
		Ase = Ce ^ ((~Ci) & Co);
		Asi = Ci ^ ((~Co) & Cu);
		Aso = Co ^ ((~Cu) & Ca);
		Asu = Cu ^ ((~Ca) & Ce);

		State[0] = Aba;
		State[1] = Abe;
		State[2] = Abi;
		State[3] = Abo;
		State[4] = Abu;
		State[5] = Aga;
		State[6] = Age;
		State[7] = Agi;
		State[8] = Ago;
		State[9] = Agu;
		State[10] = Aka;
		State[11] = Ake;
		State[12] = Aki;
		State[13] = Ako;
		State[14] = Aku;
		State[15] = Ama;
		State[16] = Ame;
		State[17] = Ami;
		State[18] = Amo;
		State[19] = Amu;
		State[20] = Asa;
		State[21] = Ase;
		State[22] = Asi;
		State[23] = Aso;
		State[24] = Asu;
	}
};

NAMESPACE_DIGESTEND
#endif
