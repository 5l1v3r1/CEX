#ifndef _CEX_FFT3_H
#define _CEX_FFT3_H

#include "CexDomain.h"
#include "GfVector.h"

NAMESPACE_MCELIECE

/// <summary>
/// 
/// </summary>
class fft3
{
public:
	static void radix_conversions(std::vector<ulong> &in, size_t Dimension)
	{
		int i, j, k;

		const std::vector<std::vector<ulong>> mask =
		{
			{ 0x8888888888888888, 0x4444444444444444 },
			{ 0xC0C0C0C0C0C0C0C0, 0x3030303030303030 },
			{ 0xF000F000F000F000, 0x0F000F000F000F00 },
			{ 0xFF000000FF000000, 0x00FF000000FF0000 },
			{ 0xFFFF000000000000, 0x0000FFFF00000000 }
		};

		const std::vector<std::vector<ulong>> s =
		{
			{
				0XF3CFC030FC30F003,
				0X3FCF0F003C00C00C,
				0X30033CC300C0C03C,
				0XCCFF0F3C0F30F0C0,
				0X0300C03FF303C3F0,
				0X3FFF3C0FF0CCCCC0,
				0XF3FFF0C00F3C3CC0,
				0X3003333FFFC3C000,
				0X0FF30FFFC3FFF300,
				0XFFC0F300F0F0CC00,
				0XC0CFF3FCCC3CFC00,
				0XFC3C03F0F330C000,
			},
			{
				0X000F00000000F00F,
				0X00000F00F00000F0,
				0X0F00000F00000F00,
				0XF00F00F00F000000,
				0X00F00000000000F0,
				0X0000000F00000000,
				0XF00000000F00F000,
				0X00F00F00000F0000,
				0X0000F00000F00F00,
				0X000F00F00F00F000,
				0X00F00F0000000000,
				0X0000000000F00000,
			},
			{
				0X0000FF00FF0000FF,
				0X0000FF000000FF00,
				0XFF0000FF00FF0000,
				0XFFFF0000FF000000,
				0X00FF00FF00FF0000,
				0X0000FFFFFF000000,
				0X00FFFF00FF000000,
				0XFFFFFF0000FF0000,
				0XFFFF00FFFF00FF00,
				0X0000FF0000000000,
				0XFFFFFF00FF000000,
				0X00FF000000000000,
			},
			{
				0X000000000000FFFF,
				0X00000000FFFF0000,
				0X0000000000000000,
				0XFFFF000000000000,
				0X00000000FFFF0000,
				0X0000FFFF00000000,
				0X0000000000000000,
				0X00000000FFFF0000,
				0X0000FFFF00000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
			},
			{
				0X00000000FFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFFFFFF00000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
			}

		};

		//

		for (j = 0; j <= 4; j++)
		{
			for (i = 0; i < Dimension; i++)
			{
				for (k = 4; k >= j; k--)
				{
					in[i] ^= (in[i] & mask[k][0]) >> (1 << k);
					in[i] ^= (in[i] & mask[k][1]) >> (1 << k);
				}
			}
			GfVector::vec_mul(in, 0, in, 0, s[j], 0, Dimension); // scaling
		}
	}

	static void butterflies(std::vector<std::vector<ulong>> &out, std::vector<ulong> &in, size_t Dimension)
	{
		int i, j, k, s, b;

		std::vector<ulong> tmp(Dimension);
		std::vector<std::vector<ulong>> consts =
		{
			//64
			{
				0XF00F0FF0F00F0FF0,
				0XF0F00F0F0F0FF0F0,
				0X0FF00FF00FF00FF0,
				0XAA5555AAAA5555AA,
				0XF00F0FF0F00F0FF0,
				0X33CCCC33CC3333CC,
				0XFFFF0000FFFF0000,
				0XCC33CC3333CC33CC,
				0X33CC33CC33CC33CC,
				0X5A5A5A5A5A5A5A5A,
				0XFF00FF00FF00FF00,
				0XF00F0FF0F00F0FF0,
			},
			//128
			{
				0X3C3C3C3C3C3C3C3C,
				0XF0F0F0F0F0F0F0F0,
				0X5555AAAA5555AAAA,
				0XCC3333CCCC3333CC,
				0XC33CC33CC33CC33C,
				0X55555555AAAAAAAA,
				0X33333333CCCCCCCC,
				0X00FF00FFFF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0X0000000000000000,
				0X0000FFFFFFFF0000,
				0XF0F00F0F0F0FF0F0,
			},
			{
				0X3C3C3C3C3C3C3C3C,
				0X0F0F0F0F0F0F0F0F,
				0XAAAA5555AAAA5555,
				0XCC3333CCCC3333CC,
				0XC33CC33CC33CC33C,
				0X55555555AAAAAAAA,
				0X33333333CCCCCCCC,
				0XFF00FF0000FF00FF,
				0X0F0F0F0F0F0F0F0F,
				0X0000000000000000,
				0X0000FFFFFFFF0000,
				0XF0F00F0F0F0FF0F0,
			},
			//256
			{
				0XAA55AA5555AA55AA,
				0XCC33CC3333CC33CC,
				0X33CCCC33CC3333CC,
				0X55555555AAAAAAAA,
				0XFF0000FF00FFFF00,
				0X3CC33CC3C33CC33C,
				0X5555AAAA5555AAAA,
				0X0FF00FF00FF00FF0,
				0XCCCC33333333CCCC,
				0XF0F0F0F0F0F0F0F0,
				0X00FFFF0000FFFF00,
				0XC33CC33CC33CC33C,
			},
			{
				0X55AA55AAAA55AA55,
				0XCC33CC3333CC33CC,
				0XCC3333CC33CCCC33,
				0X55555555AAAAAAAA,
				0XFF0000FF00FFFF00,
				0XC33CC33C3CC33CC3,
				0XAAAA5555AAAA5555,
				0XF00FF00FF00FF00F,
				0X3333CCCCCCCC3333,
				0X0F0F0F0F0F0F0F0F,
				0XFF0000FFFF0000FF,
				0XC33CC33CC33CC33C,
			},
			{
				0XAA55AA5555AA55AA,
				0X33CC33CCCC33CC33,
				0XCC3333CC33CCCC33,
				0X55555555AAAAAAAA,
				0X00FFFF00FF0000FF,
				0X3CC33CC3C33CC33C,
				0X5555AAAA5555AAAA,
				0X0FF00FF00FF00FF0,
				0X3333CCCCCCCC3333,
				0XF0F0F0F0F0F0F0F0,
				0X00FFFF0000FFFF00,
				0XC33CC33CC33CC33C,
			},
			{
				0X55AA55AAAA55AA55,
				0X33CC33CCCC33CC33,
				0X33CCCC33CC3333CC,
				0X55555555AAAAAAAA,
				0X00FFFF00FF0000FF,
				0XC33CC33C3CC33CC3,
				0XAAAA5555AAAA5555,
				0XF00FF00FF00FF00F,
				0XCCCC33333333CCCC,
				0X0F0F0F0F0F0F0F0F,
				0XFF0000FFFF0000FF,
				0XC33CC33CC33CC33C,
			},
			//512
			{
				0X6699669999669966,
				0X33CCCC33CC3333CC,
				0XA5A5A5A55A5A5A5A,
				0X3C3CC3C3C3C33C3C,
				0XF00FF00F0FF00FF0,
				0X55AA55AA55AA55AA,
				0X3C3CC3C3C3C33C3C,
				0X0F0F0F0FF0F0F0F0,
				0X55AA55AA55AA55AA,
				0X33CCCC33CC3333CC,
				0XF0F0F0F0F0F0F0F0,
				0XA55A5AA55AA5A55A,
			},
			{
				0X9966996666996699,
				0X33CCCC33CC3333CC,
				0XA5A5A5A55A5A5A5A,
				0X3C3CC3C3C3C33C3C,
				0X0FF00FF0F00FF00F,
				0XAA55AA55AA55AA55,
				0X3C3CC3C3C3C33C3C,
				0XF0F0F0F00F0F0F0F,
				0XAA55AA55AA55AA55,
				0XCC3333CC33CCCC33,
				0X0F0F0F0F0F0F0F0F,
				0XA55A5AA55AA5A55A,
			},
			{
				0X6699669999669966,
				0X33CCCC33CC3333CC,
				0X5A5A5A5AA5A5A5A5,
				0XC3C33C3C3C3CC3C3,
				0X0FF00FF0F00FF00F,
				0XAA55AA55AA55AA55,
				0XC3C33C3C3C3CC3C3,
				0X0F0F0F0FF0F0F0F0,
				0XAA55AA55AA55AA55,
				0X33CCCC33CC3333CC,
				0XF0F0F0F0F0F0F0F0,
				0XA55A5AA55AA5A55A,
			},
			{
				0X9966996666996699,
				0X33CCCC33CC3333CC,
				0X5A5A5A5AA5A5A5A5,
				0XC3C33C3C3C3CC3C3,
				0XF00FF00F0FF00FF0,
				0X55AA55AA55AA55AA,
				0XC3C33C3C3C3CC3C3,
				0XF0F0F0F00F0F0F0F,
				0X55AA55AA55AA55AA,
				0XCC3333CC33CCCC33,
				0X0F0F0F0F0F0F0F0F,
				0XA55A5AA55AA5A55A,
			},
			{
				0X6699669999669966,
				0XCC3333CC33CCCC33,
				0X5A5A5A5AA5A5A5A5,
				0X3C3CC3C3C3C33C3C,
				0X0FF00FF0F00FF00F,
				0X55AA55AA55AA55AA,
				0X3C3CC3C3C3C33C3C,
				0X0F0F0F0FF0F0F0F0,
				0X55AA55AA55AA55AA,
				0X33CCCC33CC3333CC,
				0XF0F0F0F0F0F0F0F0,
				0XA55A5AA55AA5A55A,
			},
			{
				0X9966996666996699,
				0XCC3333CC33CCCC33,
				0X5A5A5A5AA5A5A5A5,
				0X3C3CC3C3C3C33C3C,
				0XF00FF00F0FF00FF0,
				0XAA55AA55AA55AA55,
				0X3C3CC3C3C3C33C3C,
				0XF0F0F0F00F0F0F0F,
				0XAA55AA55AA55AA55,
				0XCC3333CC33CCCC33,
				0X0F0F0F0F0F0F0F0F,
				0XA55A5AA55AA5A55A,
			},
			{
				0X6699669999669966,
				0XCC3333CC33CCCC33,
				0XA5A5A5A55A5A5A5A,
				0XC3C33C3C3C3CC3C3,
				0XF00FF00F0FF00FF0,
				0XAA55AA55AA55AA55,
				0XC3C33C3C3C3CC3C3,
				0X0F0F0F0FF0F0F0F0,
				0XAA55AA55AA55AA55,
				0X33CCCC33CC3333CC,
				0XF0F0F0F0F0F0F0F0,
				0XA55A5AA55AA5A55A,
			},
			{
				0X9966996666996699,
				0XCC3333CC33CCCC33,
				0XA5A5A5A55A5A5A5A,
				0XC3C33C3C3C3CC3C3,
				0X0FF00FF0F00FF00F,
				0X55AA55AA55AA55AA,
				0XC3C33C3C3C3CC3C3,
				0XF0F0F0F00F0F0F0F,
				0X55AA55AA55AA55AA,
				0XCC3333CC33CCCC33,
				0X0F0F0F0F0F0F0F0F,
				0XA55A5AA55AA5A55A,
			},
			//1024
			{
				0X9669699696696996,
				0X6996699669966996,
				0X6996699669966996,
				0X00FFFF0000FFFF00,
				0XFF00FF00FF00FF00,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X6996699669966996,
				0X6996699669966996,
				0X00FFFF0000FFFF00,
				0X00FF00FF00FF00FF,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X6996699669966996,
				0X6996699669966996,
				0XFF0000FFFF0000FF,
				0X00FF00FF00FF00FF,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X6996699669966996,
				0X6996699669966996,
				0XFF0000FFFF0000FF,
				0XFF00FF00FF00FF00,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X6996699669966996,
				0X9669966996699669,
				0XFF0000FFFF0000FF,
				0X00FF00FF00FF00FF,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X6996699669966996,
				0X9669966996699669,
				0XFF0000FFFF0000FF,
				0XFF00FF00FF00FF00,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X6996699669966996,
				0X9669966996699669,
				0X00FFFF0000FFFF00,
				0XFF00FF00FF00FF00,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X6996699669966996,
				0X9669966996699669,
				0X00FFFF0000FFFF00,
				0X00FF00FF00FF00FF,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X9669966996699669,
				0X00FFFF0000FFFF00,
				0XFF00FF00FF00FF00,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X9669966996699669,
				0X00FFFF0000FFFF00,
				0X00FF00FF00FF00FF,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X9669966996699669,
				0XFF0000FFFF0000FF,
				0X00FF00FF00FF00FF,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X9669966996699669,
				0XFF0000FFFF0000FF,
				0XFF00FF00FF00FF00,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X6996699669966996,
				0XFF0000FFFF0000FF,
				0X00FF00FF00FF00FF,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X6996699669966996,
				0XFF0000FFFF0000FF,
				0XFF00FF00FF00FF00,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X6996699669966996,
				0X00FFFF0000FFFF00,
				0XFF00FF00FF00FF00,
				0X0FF00FF0F00FF00F,
				0X0F0FF0F0F0F00F0F,
				0XC33C3CC33CC3C33C,
				0XC33C3CC33CC3C33C,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			{
				0X9669699696696996,
				0X9669966996699669,
				0X6996699669966996,
				0X00FFFF0000FFFF00,
				0X00FF00FF00FF00FF,
				0XF00FF00F0FF00FF0,
				0XF0F00F0F0F0FF0F0,
				0X3CC3C33CC33C3CC3,
				0X3CC3C33CC33C3CC3,
				0XA55A5AA55AA5A55A,
				0XC33C3CC33CC3C33C,
				0X3CC3C33C3CC3C33C,
			},
			//2048
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0X0000000000000000,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			},
			{
				0X0000000000000000,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFFFFFFFFFF,
				0XFFFFFFFF00000000,
				0XFFFF0000FFFF0000,
				0XFF00FF00FF00FF00,
				0XF0F0F0F0F0F0F0F0,
				0XCCCCCCCCCCCCCCCC,
				0XAAAAAAAAAAAAAAAA,
			}
		};

		ulong consts_ptr = 0;

		const std::vector<byte> reversal =
		{
			0, 32, 16, 48, 8, 40, 24, 56,
			4, 36, 20, 52, 12, 44, 28, 60,
			2, 34, 18, 50, 10, 42, 26, 58,
			6, 38, 22, 54, 14, 46, 30, 62,
			1, 33, 17, 49, 9, 41, 25, 57,
			5, 37, 21, 53, 13, 45, 29, 61,
			3, 35, 19, 51, 11, 43, 27, 59,
			7, 39, 23, 55, 15, 47, 31, 63 };

		// broadcast
		for (j = 0; j < 64; j++)
		{
			for (i = 0; i < Dimension; i++)
			{
				out[j][i] = (in[i] >> reversal[j]) & 1;
				out[j][i] = ~out[j][i] + 1;
			}
		}

		// butterflies

		for (i = 0; i <= 5; i++)
		{
			s = 1 << i;

			for (j = 0; j < 64; j += 2 * s)
			{
				for (k = j; k < j + s; k++)
				{
					GfVector::vec_mul(tmp, 0, out[k + s], 0, consts[consts_ptr + (k - j)], 0, Dimension);

					for (b = 0; b < Dimension; b++)
						out[k][b] ^= tmp[b];
					for (b = 0; b < Dimension; b++)
						out[k + s][b] ^= out[k][b];
				}
			}

			consts_ptr += (1 << i);
		}
	}

	static void fft(std::vector<std::vector<ulong>> &out, std::vector<ulong> &in, size_t Dimension)
	{
		radix_conversions(in, Dimension);
		butterflies(out, in, Dimension);
	}
};

NAMESPACE_MCELIECEEND
#endif