       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. NextUInt32, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for ecp_10mb.txt   
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  1 to 24   2.104
  duplicate       number       number 
  spacings       observed     expected
        0          55.       67.668
        1         127.      135.335
        2         128.      135.335
        3         121.       90.224
        4          47.       45.112
        5          15.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =    14.57 p-value=  .976138
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  2 to 25   2.064
  duplicate       number       number 
  spacings       observed     expected
        0          56.       67.668
        1         132.      135.335
        2         146.      135.335
        3          96.       90.224
        4          41.       45.112
        5          21.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     4.17 p-value=  .346669
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  3 to 26   2.078
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         136.      135.335
        2         136.      135.335
        3          90.       90.224
        4          46.       45.112
        5          23.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     2.85 p-value=  .172829
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  4 to 27   1.948
  duplicate       number       number 
  spacings       observed     expected
        0          66.       67.668
        1         147.      135.335
        2         139.      135.335
        3          81.       90.224
        4          41.       45.112
        5          18.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     2.47 p-value=  .128536
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  5 to 28   2.102
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         130.      135.335
        2         142.      135.335
        3          86.       90.224
        4          48.       45.112
        5          26.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     5.60 p-value=  .530656
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  6 to 29   1.956
  duplicate       number       number 
  spacings       observed     expected
        0          72.       67.668
        1         137.      135.335
        2         123.      135.335
        3         104.       90.224
        4          44.       45.112
        5          15.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     5.37 p-value=  .502367
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  7 to 30   1.978
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         147.      135.335
        2         129.      135.335
        3          90.       90.224
        4          53.       45.112
        5          10.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     6.60 p-value=  .640564
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  8 to 31   1.900
  duplicate       number       number 
  spacings       observed     expected
        0          73.       67.668
        1         144.      135.335
        2         136.      135.335
        3          87.       90.224
        4          38.       45.112
        5          13.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.69 p-value=  .281074
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           ecp_10mb.txt    using bits  9 to 32   2.060
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         124.      135.335
        2         152.      135.335
        3          93.       90.224
        4          44.       45.112
        5          24.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     8.40 p-value=  .790008
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .976138   .346669   .172829   .128536   .530656
        .502367   .640564   .281074   .790008
  A KSTEST for the 9 p-values yields  .029532

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file ecp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=128.270; p-value= .974455
           OPERM5 test for file ecp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 89.331; p-value= .253532
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for ecp_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       194     211.4  1.435011    1.435
        29      5253    5134.0  2.757797    4.193
        30     23026   23103.0   .256945    4.450
        31     11527   11551.5   .052066    4.502
  chisquare= 4.502 for 3 d. of f.; p-value= .804802
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for ecp_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       206     211.4   .138848     .139
        30      5214    5134.0  1.246269    1.385
        31     23029   23103.0   .237325    1.622
        32     11551   11551.5   .000024    1.622
  chisquare= 1.622 for 3 d. of f.; p-value= .447068
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for ecp_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          917       944.3        .789        .789
          r =5        21750     21743.9        .002        .791
          r =6        77333     77311.8        .006        .797
                        p=1-exp(-SUM/2)= .32862
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          853       944.3       8.828       8.828
          r =5        21755     21743.9        .006       8.833
          r =6        77392     77311.8        .083       8.916
                        p=1-exp(-SUM/2)= .98842
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21673     21743.9        .231        .419
          r =6        77396     77311.8        .092        .510
                        p=1-exp(-SUM/2)= .22518
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21939     21743.9       1.751       1.895
          r =6        77105     77311.8        .553       2.449
                        p=1-exp(-SUM/2)= .70605
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21874     21743.9        .778        .923
          r =6        77170     77311.8        .260       1.183
                        p=1-exp(-SUM/2)= .44663
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          982       944.3       1.505       1.505
          r =5        21509     21743.9       2.538       4.043
          r =6        77509     77311.8        .503       4.546
                        p=1-exp(-SUM/2)= .89698
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          902       944.3       1.895       1.895
          r =5        21842     21743.9        .443       2.338
          r =6        77256     77311.8        .040       2.378
                        p=1-exp(-SUM/2)= .69545
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          933       944.3        .135        .135
          r =5        21785     21743.9        .078        .213
          r =6        77282     77311.8        .011        .224
                        p=1-exp(-SUM/2)= .10615
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          991       944.3       2.309       2.309
          r =5        21746     21743.9        .000       2.310
          r =6        77263     77311.8        .031       2.340
                        p=1-exp(-SUM/2)= .68970
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21736     21743.9        .003        .102
          r =6        77310     77311.8        .000        .103
                        p=1-exp(-SUM/2)= .04997
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          915       944.3        .909        .909
          r =5        21678     21743.9        .200       1.109
          r =6        77407     77311.8        .117       1.226
                        p=1-exp(-SUM/2)= .45832
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21956     21743.9       2.069       2.268
          r =6        77086     77311.8        .660       2.927
                        p=1-exp(-SUM/2)= .76859
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1003       944.3       3.649       3.649
          r =5        21907     21743.9       1.223       4.872
          r =6        77090     77311.8        .636       5.509
                        p=1-exp(-SUM/2)= .93634
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          977       944.3       1.132       1.132
          r =5        21894     21743.9       1.036       2.168
          r =6        77129     77311.8        .432       2.601
                        p=1-exp(-SUM/2)= .72756
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          960       944.3        .261        .261
          r =5        21879     21743.9        .839       1.100
          r =6        77161     77311.8        .294       1.395
                        p=1-exp(-SUM/2)= .50206
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          903       944.3       1.806       1.806
          r =5        21951     21743.9       1.973       3.779
          r =6        77146     77311.8        .356       4.135
                        p=1-exp(-SUM/2)= .87347
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          930       944.3        .217        .217
          r =5        21879     21743.9        .839       1.056
          r =6        77191     77311.8        .189       1.245
                        p=1-exp(-SUM/2)= .46333
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          965       944.3        .454        .454
          r =5        21821     21743.9        .273        .727
          r =6        77214     77311.8        .124        .851
                        p=1-exp(-SUM/2)= .34650
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          960       944.3        .261        .261
          r =5        21599     21743.9        .966       1.227
          r =6        77441     77311.8        .216       1.442
                        p=1-exp(-SUM/2)= .51385
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          895       944.3       2.574       2.574
          r =5        21721     21743.9        .024       2.598
          r =6        77384     77311.8        .067       2.666
                        p=1-exp(-SUM/2)= .73625
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          872       944.3       5.536       5.536
          r =5        21555     21743.9       1.641       7.177
          r =6        77573     77311.8        .882       8.059
                        p=1-exp(-SUM/2)= .98222
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          920       944.3        .625        .625
          r =5        21712     21743.9        .047        .672
          r =6        77368     77311.8        .041        .713
                        p=1-exp(-SUM/2)= .29989
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21710     21743.9        .053        .240
          r =6        77359     77311.8        .029        .269
                        p=1-exp(-SUM/2)= .12586
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          910       944.3       1.246       1.246
          r =5        21828     21743.9        .325       1.571
          r =6        77262     77311.8        .032       1.603
                        p=1-exp(-SUM/2)= .55142
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG ecp_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          906       944.3       1.554       1.554
          r =5        21825     21743.9        .302       1.856
          r =6        77269     77311.8        .024       1.880
                        p=1-exp(-SUM/2)= .60931
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .328622     .988417     .225175     .706048     .446628
     .896979     .695445     .106147     .689697     .049971
     .458317     .768592     .936344     .727559     .502060
     .873468     .463334     .346498     .513854     .736251
     .982220     .299889     .125857     .551420     .609313
   brank test summary for ecp_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .497497

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141630 missing words,    -.65 sigmas from mean, p-value= .25700
 tst no  2:  141953 missing words,     .10 sigmas from mean, p-value= .54064
 tst no  3:  142560 missing words,    1.52 sigmas from mean, p-value= .93578
 tst no  4:  141962 missing words,     .12 sigmas from mean, p-value= .54897
 tst no  5:  141754 missing words,    -.36 sigmas from mean, p-value= .35833
 tst no  6:  142193 missing words,     .66 sigmas from mean, p-value= .74627
 tst no  7:  142395 missing words,    1.13 sigmas from mean, p-value= .87176
 tst no  8:  142374 missing words,    1.09 sigmas from mean, p-value= .86119
 tst no  9:  141624 missing words,    -.67 sigmas from mean, p-value= .25250
 tst no 10:  141462 missing words,   -1.05 sigmas from mean, p-value= .14797
 tst no 11:  141964 missing words,     .13 sigmas from mean, p-value= .55082
 tst no 12:  141869 missing words,    -.09 sigmas from mean, p-value= .46247
 tst no 13:  141772 missing words,    -.32 sigmas from mean, p-value= .37416
 tst no 14:  142460 missing words,    1.29 sigmas from mean, p-value= .90089
 tst no 15:  141563 missing words,    -.81 sigmas from mean, p-value= .20921
 tst no 16:  141595 missing words,    -.73 sigmas from mean, p-value= .23135
 tst no 17:  141196 missing words,   -1.67 sigmas from mean, p-value= .04779
 tst no 18:  142288 missing words,     .88 sigmas from mean, p-value= .81185
 tst no 19:  141890 missing words,    -.05 sigmas from mean, p-value= .48199
 tst no 20:  141641 missing words,    -.63 sigmas from mean, p-value= .26535

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator ecp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for ecp_10mb.txt    using bits 23 to 32        142251  1.178  .8806
    OPSO for ecp_10mb.txt    using bits 22 to 31        141847  -.215  .4149
    OPSO for ecp_10mb.txt    using bits 21 to 30        141623  -.987  .1617
    OPSO for ecp_10mb.txt    using bits 20 to 29        141961   .178  .5707
    OPSO for ecp_10mb.txt    using bits 19 to 28        141722  -.646  .2592
    OPSO for ecp_10mb.txt    using bits 18 to 27        142111   .695  .7566
    OPSO for ecp_10mb.txt    using bits 17 to 26        141953   .151  .5599
    OPSO for ecp_10mb.txt    using bits 16 to 25        141974   .223  .5882
    OPSO for ecp_10mb.txt    using bits 15 to 24        141732  -.611  .2704
    OPSO for ecp_10mb.txt    using bits 14 to 23        141775  -.463  .3216
    OPSO for ecp_10mb.txt    using bits 13 to 22        142006   .333  .6306
    OPSO for ecp_10mb.txt    using bits 12 to 21        141843  -.229  .4095
    OPSO for ecp_10mb.txt    using bits 11 to 20        142003   .323  .6267
    OPSO for ecp_10mb.txt    using bits 10 to 19        141845  -.222  .4122
    OPSO for ecp_10mb.txt    using bits  9 to 18        142202  1.009  .8436
    OPSO for ecp_10mb.txt    using bits  8 to 17        142046   .471  .6813
    OPSO for ecp_10mb.txt    using bits  7 to 16        141814  -.329  .3712
    OPSO for ecp_10mb.txt    using bits  6 to 15        142281  1.282  .9000
    OPSO for ecp_10mb.txt    using bits  5 to 14        142251  1.178  .8806
    OPSO for ecp_10mb.txt    using bits  4 to 13        142018   .375  .6461
    OPSO for ecp_10mb.txt    using bits  3 to 12        142113   .702  .7588
    OPSO for ecp_10mb.txt    using bits  2 to 11        141861  -.167  .4338
    OPSO for ecp_10mb.txt    using bits  1 to 10        142567  2.268  .9883
 OQSO test for generator ecp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for ecp_10mb.txt    using bits 28 to 32        141855  -.184  .4269
    OQSO for ecp_10mb.txt    using bits 27 to 31        141526 -1.299  .0969
    OQSO for ecp_10mb.txt    using bits 26 to 30        141785  -.421  .3367
    OQSO for ecp_10mb.txt    using bits 25 to 29        141895  -.049  .4806
    OQSO for ecp_10mb.txt    using bits 24 to 28        142102   .653  .7432
    OQSO for ecp_10mb.txt    using bits 23 to 27        141750  -.540  .2946
    OQSO for ecp_10mb.txt    using bits 22 to 26        141920   .036  .5144
    OQSO for ecp_10mb.txt    using bits 21 to 25        141976   .226  .5894
    OQSO for ecp_10mb.txt    using bits 20 to 24        142395  1.646  .9502
    OQSO for ecp_10mb.txt    using bits 19 to 23        142058   .504  .6929
    OQSO for ecp_10mb.txt    using bits 18 to 22        142318  1.385  .9170
    OQSO for ecp_10mb.txt    using bits 17 to 21        142182   .924  .8223
    OQSO for ecp_10mb.txt    using bits 16 to 20        141848  -.208  .4177
    OQSO for ecp_10mb.txt    using bits 15 to 19        142223  1.063  .8562
    OQSO for ecp_10mb.txt    using bits 14 to 18        141794  -.391  .3479
    OQSO for ecp_10mb.txt    using bits 13 to 17        141943   .114  .5454
    OQSO for ecp_10mb.txt    using bits 12 to 16        142410  1.697  .9552
    OQSO for ecp_10mb.txt    using bits 11 to 15        142228  1.080  .8600
    OQSO for ecp_10mb.txt    using bits 10 to 14        141482 -1.449  .0737
    OQSO for ecp_10mb.txt    using bits  9 to 13        141884  -.086  .4658
    OQSO for ecp_10mb.txt    using bits  8 to 12        142176   .904  .8170
    OQSO for ecp_10mb.txt    using bits  7 to 11        141828  -.276  .3914
    OQSO for ecp_10mb.txt    using bits  6 to 10        142193   .962  .8319
    OQSO for ecp_10mb.txt    using bits  5 to  9        141441 -1.588  .0562
    OQSO for ecp_10mb.txt    using bits  4 to  8        141947   .128  .5508
    OQSO for ecp_10mb.txt    using bits  3 to  7        142540  2.138  .9837
    OQSO for ecp_10mb.txt    using bits  2 to  6        142075   .562  .7128
    OQSO for ecp_10mb.txt    using bits  1 to  5        141598 -1.055  .1456
  DNA test for generator ecp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for ecp_10mb.txt    using bits 31 to 32        142376  1.377  .9157
     DNA for ecp_10mb.txt    using bits 30 to 31        141524 -1.137  .1278
     DNA for ecp_10mb.txt    using bits 29 to 30        141675  -.691  .2447
     DNA for ecp_10mb.txt    using bits 28 to 29        142170   .769  .7790
     DNA for ecp_10mb.txt    using bits 27 to 28        141912   .008  .5031
     DNA for ecp_10mb.txt    using bits 26 to 27        141836  -.216  .4144
     DNA for ecp_10mb.txt    using bits 25 to 26        141733  -.520  .3015
     DNA for ecp_10mb.txt    using bits 24 to 25        141570 -1.001  .1584
     DNA for ecp_10mb.txt    using bits 23 to 24        142563  1.928  .9731
     DNA for ecp_10mb.txt    using bits 22 to 23        141741  -.497  .3098
     DNA for ecp_10mb.txt    using bits 21 to 22        141781  -.379  .3525
     DNA for ecp_10mb.txt    using bits 20 to 21        142407  1.468  .9290
     DNA for ecp_10mb.txt    using bits 19 to 20        141640  -.794  .2135
     DNA for ecp_10mb.txt    using bits 18 to 19        142323  1.220  .8888
     DNA for ecp_10mb.txt    using bits 17 to 18        141816  -.275  .3915
     DNA for ecp_10mb.txt    using bits 16 to 17        141623  -.845  .1992
     DNA for ecp_10mb.txt    using bits 15 to 16        142017   .318  .6246
     DNA for ecp_10mb.txt    using bits 14 to 15        142398  1.442  .9253
     DNA for ecp_10mb.txt    using bits 13 to 14        141441 -1.381  .0836
     DNA for ecp_10mb.txt    using bits 12 to 13        141787  -.361  .3591
     DNA for ecp_10mb.txt    using bits 11 to 12        141600  -.912  .1808
     DNA for ecp_10mb.txt    using bits 10 to 11        142219   .913  .8195
     DNA for ecp_10mb.txt    using bits  9 to 10        141508 -1.184  .1182
     DNA for ecp_10mb.txt    using bits  8 to  9        141850  -.175  .4305
     DNA for ecp_10mb.txt    using bits  7 to  8        141907  -.007  .4973
     DNA for ecp_10mb.txt    using bits  6 to  7        141703  -.609  .2714
     DNA for ecp_10mb.txt    using bits  5 to  6        142378  1.383  .9166
     DNA for ecp_10mb.txt    using bits  4 to  5        142155   .725  .7657
     DNA for ecp_10mb.txt    using bits  3 to  4        141871  -.113  .4550
     DNA for ecp_10mb.txt    using bits  2 to  3        141938   .085  .5337
     DNA for ecp_10mb.txt    using bits  1 to  2        141911   .005  .5020

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for ecp_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for ecp_10mb.txt     2506.90       .098      .538849
 byte stream for ecp_10mb.txt     2596.43      1.364      .913684

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2519.50       .276      .608623
           bits  2 to  9  2440.63      -.840      .200568
           bits  3 to 10  2518.61       .263      .603802
           bits  4 to 11  2482.71      -.245      .403390
           bits  5 to 12  2427.18     -1.030      .151551
           bits  6 to 13  2533.11       .468      .680196
           bits  7 to 14  2520.62       .292      .614697
           bits  8 to 15  2586.99      1.230      .890700
           bits  9 to 16  2295.01     -2.899      .001871
           bits 10 to 17  2462.51      -.530      .297970
           bits 11 to 18  2469.49      -.431      .333080
           bits 12 to 19  2398.61     -1.434      .075813
           bits 13 to 20  2534.41       .487      .686745
           bits 14 to 21  2641.27      1.998      .977136
           bits 15 to 22  2418.48     -1.153      .124485
           bits 16 to 23  2561.07       .864      .806116
           bits 17 to 24  2523.00       .325      .627536
           bits 18 to 25  2499.97       .000      .499847
           bits 19 to 26  2525.71       .364      .641909
           bits 20 to 27  2395.62     -1.476      .069948
           bits 21 to 28  2548.90       .692      .755405
           bits 22 to 29  2463.70      -.513      .303864
           bits 23 to 30  2505.82       .082      .532779
           bits 24 to 31  2545.44       .643      .739777
           bits 25 to 32  2517.13       .242      .595700

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file ecp_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3531    z-score:   .365 p-value: .642555
            Successes: 3542    z-score:   .868 p-value: .807188
            Successes: 3542    z-score:   .868 p-value: .807188
            Successes: 3510    z-score:  -.594 p-value: .276387
            Successes: 3501    z-score: -1.005 p-value: .157553
            Successes: 3503    z-score:  -.913 p-value: .180558
            Successes: 3502    z-score:  -.959 p-value: .168804
            Successes: 3543    z-score:   .913 p-value: .819442
            Successes: 3527    z-score:   .183 p-value: .572463
            Successes: 3506    z-score:  -.776 p-value: .218799
 
           square size   avg. no.  parked   sample sigma
             100.            3520.700       17.097
            KSTEST for the above 10: p=  .385702

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file ecp_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5    1.0367    .9667     .647211
          10     .4857   1.2173     .386203
          15     .1090   1.0204     .103779
          20     .3654    .9485     .307379
          25    1.3119    .9536     .732472
          30    2.1204    .9733     .881289
          35     .0967    .8883     .092587
          40     .6932    .8929     .501790
          45     .5673    .8986     .434559
          50     .2413    .8718     .215312
          55     .1589    .8404     .147618
          60    1.6114    .8309     .802011
          65     .1834    .8276     .168311
          70    1.4041    .8492     .756134
          75     .3884    .8188     .323208
          80     .0368    .8160     .036314
          85     .3913    .8735     .325128
          90     .5762    .8479     .439604
          95    1.7303    .8410     .824307
         100    1.2470    .8489     .714428
     MINIMUM DISTANCE TEST for ecp_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .762161

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file ecp_10mb.txt   
 sample no:  1     r^3=  22.519     p-value= .52794
 sample no:  2     r^3=   1.148     p-value= .03754
 sample no:  3     r^3=  14.020     p-value= .37334
 sample no:  4     r^3=  82.433     p-value= .93593
 sample no:  5     r^3=  26.734     p-value= .58981
 sample no:  6     r^3=  11.308     p-value= .31405
 sample no:  7     r^3=   1.366     p-value= .04451
 sample no:  8     r^3=  14.576     p-value= .38483
 sample no:  9     r^3=  49.115     p-value= .80547
 sample no: 10     r^3=  73.723     p-value= .91434
 sample no: 11     r^3=  12.739     p-value= .34599
 sample no: 12     r^3=   1.079     p-value= .03532
 sample no: 13     r^3=   7.992     p-value= .23387
 sample no: 14     r^3=  23.247     p-value= .53925
 sample no: 15     r^3=  13.163     p-value= .35517
 sample no: 16     r^3=  11.644     p-value= .32168
 sample no: 17     r^3=   7.317     p-value= .21642
 sample no: 18     r^3=  37.031     p-value= .70898
 sample no: 19     r^3=  34.009     p-value= .67814
 sample no: 20     r^3=   3.364     p-value= .10609
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file ecp_10mb.txt         p-value= .619550
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR ecp_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.1      .5      .3      .8    -2.4      .2
    -2.7     1.3      .3      .4      .9     -.3
     2.3      .0     1.0      .6    -1.1    -2.6
     -.2      .3      .2      .3      .9    -1.6
      .3     1.1     -.9    -1.2     -.6     -.7
      .6     -.4     1.6     1.4      .8     -.3
      .3     1.5      .1     -.7     -.6      .0
     1.8
           Chi-square with 42 degrees of freedom: 51.824
              z-score=  1.072  p-value= .857785
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .101136
                Test no.  2      p-value  .420087
                Test no.  3      p-value  .124170
                Test no.  4      p-value  .021996
                Test no.  5      p-value  .431735
                Test no.  6      p-value  .012411
                Test no.  7      p-value  .627943
                Test no.  8      p-value  .086864
                Test no.  9      p-value  .698400
                Test no. 10      p-value  .097526
   Results of the OSUM test for ecp_10mb.txt   
        KSTEST on the above 10 p-values:  .993771

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file ecp_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for ecp_10mb.txt   :
       runs up; ks test for 10 p's: .288547
     runs down; ks test for 10 p's: .852149
                 Run test for ecp_10mb.txt   :
       runs up; ks test for 10 p's: .546129
     runs down; ks test for 10 p's: .641976

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for ecp_10mb.txt   
  No. of wins:  Observed Expected
                                98542    98585.86
                  98542= No. of wins, z-score= -.196 pvalue= .42224
   Analysis of Throws-per-Game:
 Chisq=  22.96 for 20 degrees of freedom, p=  .70926
               Throws Observed Expected  Chisq     Sum
                  1    66494    66666.7    .447     .447
                  2    37713    37654.3    .091     .539
                  3    26890    26954.7    .155     .694
                  4    19425    19313.5    .644    1.338
                  5    13819    13851.4    .076    1.414
                  6    10099     9943.5   2.430    3.845
                  7     7163     7145.0    .045    3.890
                  8     5102     5139.1    .267    4.157
                  9     3672     3699.9    .210    4.367
                 10     2688     2666.3    .177    4.544
                 11     1853     1923.3   2.572    7.115
                 12     1461     1388.7   3.760   10.875
                 13      979     1003.7    .609   11.484
                 14      715      726.1    .171   11.655
                 15      529      525.8    .019   11.674
                 16      389      381.2    .162   11.835
                 17      258      276.5   1.243   13.078
                 18      190      200.8    .584   13.662
                 19      146      146.0    .000   13.662
                 20       87      106.2   3.476   17.139
                 21      328      287.1   5.822   22.960
            SUMMARY  FOR ecp_10mb.txt   
                p-value for no. of wins: .422241
                p-value for throws/game: .709255

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file ecp10.txt      
