       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. NextUInt32, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for hmg_10mb.txt   
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  1 to 24   2.026
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         136.      135.335
        2         129.      135.335
        3          89.       90.224
        4          43.       45.112
        5          20.       18.045
  6 to INF         12.        8.282
 Chisquare with  6 d.o.f. =     2.46 p-value=  .127146
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  2 to 25   1.988
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         143.      135.335
        2         141.      135.335
        3          88.       90.224
        4          35.       45.112
        5          21.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     4.31 p-value=  .364889
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  3 to 26   1.942
  duplicate       number       number 
  spacings       observed     expected
        0          75.       67.668
        1         134.      135.335
        2         132.      135.335
        3          96.       90.224
        4          42.       45.112
        5          11.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     4.58 p-value=  .401455
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  4 to 27   1.952
  duplicate       number       number 
  spacings       observed     expected
        0          72.       67.668
        1         133.      135.335
        2         147.      135.335
        3          82.       90.224
        4          37.       45.112
        5          20.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.81 p-value=  .297006
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  5 to 28   1.942
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         125.      135.335
        2         142.      135.335
        3          96.       90.224
        4          31.       45.112
        5          22.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     8.98 p-value=  .825015
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  6 to 29   2.030
  duplicate       number       number 
  spacings       observed     expected
        0          66.       67.668
        1         129.      135.335
        2         141.      135.335
        3          96.       90.224
        4          37.       45.112
        5          19.       18.045
  6 to INF         12.        8.282
 Chisquare with  6 d.o.f. =     4.12 p-value=  .339979
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  7 to 30   1.954
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         146.      135.335
        2         136.      135.335
        3          76.       90.224
        4          43.       45.112
        5          23.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     4.77 p-value=  .426398
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  8 to 31   1.976
  duplicate       number       number 
  spacings       observed     expected
        0          74.       67.668
        1         126.      135.335
        2         138.      135.335
        3          89.       90.224
        4          50.       45.112
        5          19.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     4.10 p-value=  .336799
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hmg_10mb.txt    using bits  9 to 32   2.054
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         129.      135.335
        2         127.      135.335
        3         104.       90.224
        4          44.       45.112
        5          22.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     4.01 p-value=  .325064
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .127146   .364889   .401455   .297006   .825015
        .339979   .426398   .336799   .325064
  A KSTEST for the 9 p-values yields  .891067

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file hmg_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 87.895; p-value= .219678
           OPERM5 test for file hmg_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 91.406; p-value= .306182
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for hmg_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       169     211.4  8.510571    8.511
        29      5088    5134.0   .412337    8.923
        30     23128   23103.0   .026951    8.950
        31     11615   11551.5   .348798    9.299
  chisquare= 9.299 for 3 d. of f.; p-value= .975574
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for hmg_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       226     211.4  1.005753    1.006
        30      5140    5134.0   .006988    1.013
        31     23145   23103.0   .076183    1.089
        32     11489   11551.5   .338423    1.427
  chisquare= 1.427 for 3 d. of f.; p-value= .416962
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for hmg_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          976       944.3       1.064       1.064
          r =5        21620     21743.9        .706       1.770
          r =6        77404     77311.8        .110       1.880
                        p=1-exp(-SUM/2)= .60938
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          921       944.3        .575        .575
          r =5        21743     21743.9        .000        .575
          r =6        77336     77311.8        .008        .583
                        p=1-exp(-SUM/2)= .25270
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21623     21743.9        .672        .684
          r =6        77436     77311.8        .200        .883
                        p=1-exp(-SUM/2)= .35702
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1012       944.3       4.853       4.853
          r =5        21699     21743.9        .093       4.946
          r =6        77289     77311.8        .007       4.953
                        p=1-exp(-SUM/2)= .91596
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          951       944.3        .048        .048
          r =5        21934     21743.9       1.662       1.709
          r =6        77115     77311.8        .501       2.210
                        p=1-exp(-SUM/2)= .66887
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          919       944.3        .678        .678
          r =5        21717     21743.9        .033        .711
          r =6        77364     77311.8        .035        .746
                        p=1-exp(-SUM/2)= .31148
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          935       944.3        .092        .092
          r =5        21592     21743.9       1.061       1.153
          r =6        77473     77311.8        .336       1.489
                        p=1-exp(-SUM/2)= .52500
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          949       944.3        .023        .023
          r =5        21874     21743.9        .778        .802
          r =6        77177     77311.8        .235       1.037
                        p=1-exp(-SUM/2)= .40454
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21588     21743.9       1.118       1.764
          r =6        77443     77311.8        .223       1.986
                        p=1-exp(-SUM/2)= .62962
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        22006     21743.9       3.159       3.347
          r =6        77063     77311.8        .801       4.147
                        p=1-exp(-SUM/2)= .87428
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          913       944.3       1.038       1.038
          r =5        21903     21743.9       1.164       2.202
          r =6        77184     77311.8        .211       2.413
                        p=1-exp(-SUM/2)= .70075
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          912       944.3       1.105       1.105
          r =5        21934     21743.9       1.662       2.767
          r =6        77154     77311.8        .322       3.089
                        p=1-exp(-SUM/2)= .78658
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          932       944.3        .160        .160
          r =5        21768     21743.9        .027        .187
          r =6        77300     77311.8        .002        .189
                        p=1-exp(-SUM/2)= .09006
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          907       944.3       1.473       1.473
          r =5        21682     21743.9        .176       1.650
          r =6        77411     77311.8        .127       1.777
                        p=1-exp(-SUM/2)= .58872
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          920       944.3        .625        .625
          r =5        21653     21743.9        .380       1.005
          r =6        77427     77311.8        .172       1.177
                        p=1-exp(-SUM/2)= .44485
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          943       944.3        .002        .002
          r =5        21510     21743.9       2.516       2.518
          r =6        77547     77311.8        .716       3.233
                        p=1-exp(-SUM/2)= .80144
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21816     21743.9        .239        .296
          r =6        77247     77311.8        .054        .350
                        p=1-exp(-SUM/2)= .16048
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          970       944.3        .699        .699
          r =5        21736     21743.9        .003        .702
          r =6        77294     77311.8        .004        .706
                        p=1-exp(-SUM/2)= .29755
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21767     21743.9        .025        .081
          r =6        77296     77311.8        .003        .084
                        p=1-exp(-SUM/2)= .04124
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          945       944.3        .001        .001
          r =5        21709     21743.9        .056        .057
          r =6        77346     77311.8        .015        .072
                        p=1-exp(-SUM/2)= .03520
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          955       944.3        .121        .121
          r =5        21611     21743.9        .812        .934
          r =6        77434     77311.8        .193       1.127
                        p=1-exp(-SUM/2)= .43069
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          949       944.3        .023        .023
          r =5        21803     21743.9        .161        .184
          r =6        77248     77311.8        .053        .237
                        p=1-exp(-SUM/2)= .11160
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21789     21743.9        .094        .123
          r =6        77272     77311.8        .020        .144
                        p=1-exp(-SUM/2)= .06937
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          967       944.3        .546        .546
          r =5        21568     21743.9       1.423       1.969
          r =6        77465     77311.8        .304       2.272
                        p=1-exp(-SUM/2)= .67892
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hmg_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          902       944.3       1.895       1.895
          r =5        21760     21743.9        .012       1.907
          r =6        77338     77311.8        .009       1.916
                        p=1-exp(-SUM/2)= .61629
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .609377     .252703     .357019     .915959     .668869
     .311483     .524997     .404543     .629615     .874280
     .700752     .786581     .090063     .588717     .444851
     .801445     .160478     .297546     .041237     .035195
     .430686     .111601     .069375     .678924     .616291
   brank test summary for hmg_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .342390

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141833 missing words,    -.18 sigmas from mean, p-value= .42923
 tst no  2:  142239 missing words,     .77 sigmas from mean, p-value= .77943
 tst no  3:  142132 missing words,     .52 sigmas from mean, p-value= .69856
 tst no  4:  143034 missing words,    2.63 sigmas from mean, p-value= .99570
 tst no  5:  142488 missing words,    1.35 sigmas from mean, p-value= .91182
 tst no  6:  142264 missing words,     .83 sigmas from mean, p-value= .79636
 tst no  7:  141906 missing words,    -.01 sigmas from mean, p-value= .49690
 tst no  8:  141915 missing words,     .01 sigmas from mean, p-value= .50529
 tst no  9:  141300 missing words,   -1.42 sigmas from mean, p-value= .07727
 tst no 10:  142450 missing words,    1.26 sigmas from mean, p-value= .89675
 tst no 11:  142270 missing words,     .84 sigmas from mean, p-value= .80030
 tst no 12:  141454 missing words,   -1.06 sigmas from mean, p-value= .14370
 tst no 13:  141946 missing words,     .09 sigmas from mean, p-value= .53414
 tst no 14:  142032 missing words,     .29 sigmas from mean, p-value= .61280
 tst no 15:  141737 missing words,    -.40 sigmas from mean, p-value= .34361
 tst no 16:  141816 missing words,    -.22 sigmas from mean, p-value= .41369
 tst no 17:  142064 missing words,     .36 sigmas from mean, p-value= .64109
 tst no 18:  141502 missing words,    -.95 sigmas from mean, p-value= .17062
 tst no 19:  142101 missing words,     .45 sigmas from mean, p-value= .67286
 tst no 20:  141737 missing words,    -.40 sigmas from mean, p-value= .34361

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator hmg_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for hmg_10mb.txt    using bits 23 to 32        142766  2.954  .9984
    OPSO for hmg_10mb.txt    using bits 22 to 31        141874  -.122  .4515
    OPSO for hmg_10mb.txt    using bits 21 to 30        141945   .123  .5489
    OPSO for hmg_10mb.txt    using bits 20 to 29        142401  1.695  .9550
    OPSO for hmg_10mb.txt    using bits 19 to 28        141402 -1.749  .0401
    OPSO for hmg_10mb.txt    using bits 18 to 27        142018   .375  .6461
    OPSO for hmg_10mb.txt    using bits 17 to 26        141891  -.063  .4748
    OPSO for hmg_10mb.txt    using bits 16 to 25        141644  -.915  .1801
    OPSO for hmg_10mb.txt    using bits 15 to 24        141260 -2.239  .0126
    OPSO for hmg_10mb.txt    using bits 14 to 23        141750  -.549  .2914
    OPSO for hmg_10mb.txt    using bits 13 to 22        141968   .202  .5802
    OPSO for hmg_10mb.txt    using bits 12 to 21        141664  -.846  .1988
    OPSO for hmg_10mb.txt    using bits 11 to 20        141980   .244  .5963
    OPSO for hmg_10mb.txt    using bits 10 to 19        141560 -1.205  .1142
    OPSO for hmg_10mb.txt    using bits  9 to 18        141504 -1.398  .0811
    OPSO for hmg_10mb.txt    using bits  8 to 17        141882  -.094  .4625
    OPSO for hmg_10mb.txt    using bits  7 to 16        142416  1.747  .9597
    OPSO for hmg_10mb.txt    using bits  6 to 15        142191   .971  .8343
    OPSO for hmg_10mb.txt    using bits  5 to 14        141819  -.311  .3777
    OPSO for hmg_10mb.txt    using bits  4 to 13        142177   .923  .8220
    OPSO for hmg_10mb.txt    using bits  3 to 12        142014   .361  .6409
    OPSO for hmg_10mb.txt    using bits  2 to 11        142350  1.520  .9357
    OPSO for hmg_10mb.txt    using bits  1 to 10        142141   .799  .7878
 OQSO test for generator hmg_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for hmg_10mb.txt    using bits 28 to 32        142020   .375  .6462
    OQSO for hmg_10mb.txt    using bits 27 to 31        141664  -.832  .2028
    OQSO for hmg_10mb.txt    using bits 26 to 30        141716  -.655  .2561
    OQSO for hmg_10mb.txt    using bits 25 to 29        141799  -.374  .3542
    OQSO for hmg_10mb.txt    using bits 24 to 28        141938   .097  .5387
    OQSO for hmg_10mb.txt    using bits 23 to 27        142239  1.118  .8681
    OQSO for hmg_10mb.txt    using bits 22 to 26        141693  -.733  .2317
    OQSO for hmg_10mb.txt    using bits 21 to 25        141918   .029  .5117
    OQSO for hmg_10mb.txt    using bits 20 to 24        141726  -.621  .2672
    OQSO for hmg_10mb.txt    using bits 19 to 23        141733  -.598  .2750
    OQSO for hmg_10mb.txt    using bits 18 to 22        141413 -1.682  .0462
    OQSO for hmg_10mb.txt    using bits 17 to 21        141848  -.208  .4177
    OQSO for hmg_10mb.txt    using bits 16 to 20        141977   .229  .5907
    OQSO for hmg_10mb.txt    using bits 15 to 19        142108   .673  .7497
    OQSO for hmg_10mb.txt    using bits 14 to 18        142098   .640  .7388
    OQSO for hmg_10mb.txt    using bits 13 to 17        142430  1.765  .9612
    OQSO for hmg_10mb.txt    using bits 12 to 16        142247  1.145  .8738
    OQSO for hmg_10mb.txt    using bits 11 to 15        141856  -.181  .4283
    OQSO for hmg_10mb.txt    using bits 10 to 14        141315 -2.015  .0220
    OQSO for hmg_10mb.txt    using bits  9 to 13        141394 -1.747  .0403
    OQSO for hmg_10mb.txt    using bits  8 to 12        142021   .379  .6475
    OQSO for hmg_10mb.txt    using bits  7 to 11        141988   .267  .6051
    OQSO for hmg_10mb.txt    using bits  6 to 10        141470 -1.489  .0682
    OQSO for hmg_10mb.txt    using bits  5 to  9        141746  -.554  .2899
    OQSO for hmg_10mb.txt    using bits  4 to  8        141490 -1.421  .0776
    OQSO for hmg_10mb.txt    using bits  3 to  7        141954   .151  .5602
    OQSO for hmg_10mb.txt    using bits  2 to  6        142126   .734  .7687
    OQSO for hmg_10mb.txt    using bits  1 to  5        141606 -1.028  .1519
  DNA test for generator hmg_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for hmg_10mb.txt    using bits 31 to 32        142776  2.557  .9947
     DNA for hmg_10mb.txt    using bits 30 to 31        141782  -.376  .3536
     DNA for hmg_10mb.txt    using bits 29 to 30        142226   .934  .8249
     DNA for hmg_10mb.txt    using bits 28 to 29        142106   .580  .7191
     DNA for hmg_10mb.txt    using bits 27 to 28        141332 -1.703  .0443
     DNA for hmg_10mb.txt    using bits 26 to 27        142266  1.052  .8536
     DNA for hmg_10mb.txt    using bits 25 to 26        141634  -.812  .2083
     DNA for hmg_10mb.txt    using bits 24 to 25        141973   .188  .5745
     DNA for hmg_10mb.txt    using bits 23 to 24        141971   .182  .5722
     DNA for hmg_10mb.txt    using bits 22 to 23        141609  -.886  .1878
     DNA for hmg_10mb.txt    using bits 21 to 22        141995   .253  .5998
     DNA for hmg_10mb.txt    using bits 20 to 21        141687  -.656  .2560
     DNA for hmg_10mb.txt    using bits 19 to 20        141983   .217  .5860
     DNA for hmg_10mb.txt    using bits 18 to 19        141707  -.597  .2753
     DNA for hmg_10mb.txt    using bits 17 to 18        141651  -.762  .2230
     DNA for hmg_10mb.txt    using bits 16 to 17        141656  -.747  .2274
     DNA for hmg_10mb.txt    using bits 15 to 16        141608  -.889  .1870
     DNA for hmg_10mb.txt    using bits 14 to 15        142541  1.863  .9688
     DNA for hmg_10mb.txt    using bits 13 to 14        141755  -.455  .3245
     DNA for hmg_10mb.txt    using bits 12 to 13        142007   .288  .6134
     DNA for hmg_10mb.txt    using bits 11 to 12        142084   .515  .6968
     DNA for hmg_10mb.txt    using bits 10 to 11        141734  -.517  .3025
     DNA for hmg_10mb.txt    using bits  9 to 10        141609  -.886  .1878
     DNA for hmg_10mb.txt    using bits  8 to  9        142072   .480  .6843
     DNA for hmg_10mb.txt    using bits  7 to  8        141681  -.674  .2503
     DNA for hmg_10mb.txt    using bits  6 to  7        142490  1.713  .9566
     DNA for hmg_10mb.txt    using bits  5 to  6        142320  1.211  .8871
     DNA for hmg_10mb.txt    using bits  4 to  5        142169   .766  .7782
     DNA for hmg_10mb.txt    using bits  3 to  4        141357 -1.629  .0516
     DNA for hmg_10mb.txt    using bits  2 to  3        142149   .707  .7602
     DNA for hmg_10mb.txt    using bits  1 to  2        141558 -1.036  .1500

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for hmg_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for hmg_10mb.txt     2506.93       .098      .539052
 byte stream for hmg_10mb.txt     2495.80      -.059      .476294

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2534.74       .491      .688387
           bits  2 to  9  2398.62     -1.434      .075829
           bits  3 to 10  2585.84      1.214      .887607
           bits  4 to 11  2476.93      -.326      .372114
           bits  5 to 12  2503.34       .047      .518855
           bits  6 to 13  2462.77      -.526      .299281
           bits  7 to 14  2465.35      -.490      .312043
           bits  8 to 15  2622.06      1.726      .957844
           bits  9 to 16  2393.90     -1.501      .066739
           bits 10 to 17  2426.02     -1.046      .147716
           bits 11 to 18  2468.91      -.440      .330074
           bits 12 to 19  2559.41       .840      .799612
           bits 13 to 20  2459.44      -.574      .283132
           bits 14 to 21  2560.18       .851      .802631
           bits 15 to 22  2494.47      -.078      .468812
           bits 16 to 23  2439.60      -.854      .196516
           bits 17 to 24  2627.30      1.800      .964098
           bits 18 to 25  2503.44       .049      .519412
           bits 19 to 26  2469.32      -.434      .332203
           bits 20 to 27  2488.21      -.167      .433803
           bits 21 to 28  2475.54      -.346      .364707
           bits 22 to 29  2419.72     -1.135      .128123
           bits 23 to 30  2519.22       .272      .607117
           bits 24 to 31  2545.91       .649      .741907
           bits 25 to 32  2471.64      -.401      .344173

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file hmg_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3510    z-score:  -.594 p-value: .276387
            Successes: 3537    z-score:   .639 p-value: .738676
            Successes: 3540    z-score:   .776 p-value: .781201
            Successes: 3480    z-score: -1.963 p-value: .024796
            Successes: 3526    z-score:   .137 p-value: .554479
            Successes: 3530    z-score:   .320 p-value: .625377
            Successes: 3499    z-score: -1.096 p-value: .136563
            Successes: 3542    z-score:   .868 p-value: .807188
            Successes: 3514    z-score:  -.411 p-value: .340551
            Successes: 3541    z-score:   .822 p-value: .794438
 
           square size   avg. no.  parked   sample sigma
             100.            3521.900       19.728
            KSTEST for the above 10: p=  .159946

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file hmg_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5     .2509    .7965     .222899
          10     .9655    .8804     .621054
          15    1.2519    .8891     .715835
          20    1.0566    .8732     .654218
          25    5.1594   1.0759     .994402
          30     .1953    .9440     .178220
          35     .4537    .8586     .366164
          40     .2004    .9196     .182388
          45     .3918    .9446     .325478
          50    2.2520    .9447     .895996
          55     .0618    .9623     .060204
          60     .8991    .9926     .594900
          65     .3168    .9627     .272673
          70    2.3006    .9609     .900958
          75     .4370   1.0523     .355420
          80    1.5154   1.0155     .781945
          85     .1745    .9994     .160889
          90    2.4249    .9841     .912582
          95     .3268   1.0134     .279989
         100     .6112    .9908     .458944
     MINIMUM DISTANCE TEST for hmg_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .762333

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file hmg_10mb.txt   
 sample no:  1     r^3=  28.319     p-value= .61091
 sample no:  2     r^3=  28.253     p-value= .61006
 sample no:  3     r^3=  79.608     p-value= .92960
 sample no:  4     r^3=  76.093     p-value= .92085
 sample no:  5     r^3=   4.360     p-value= .13527
 sample no:  6     r^3=  85.855     p-value= .94284
 sample no:  7     r^3=   1.095     p-value= .03585
 sample no:  8     r^3=  11.977     p-value= .32916
 sample no:  9     r^3=  13.535     p-value= .36311
 sample no: 10     r^3=  37.785     p-value= .71621
 sample no: 11     r^3=   6.114     p-value= .18438
 sample no: 12     r^3=  11.124     p-value= .30982
 sample no: 13     r^3=  26.970     p-value= .59302
 sample no: 14     r^3= 147.674     p-value= .99272
 sample no: 15     r^3=    .213     p-value= .00706
 sample no: 16     r^3=   2.750     p-value= .08760
 sample no: 17     r^3=  80.970     p-value= .93273
 sample no: 18     r^3=  72.043     p-value= .90941
 sample no: 19     r^3=  26.051     p-value= .58036
 sample no: 20     r^3=   5.557     p-value= .16910
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file hmg_10mb.txt         p-value= .637449
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR hmg_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.1    -1.2     -.8    -1.6     1.0      .7
     -.2     -.3      .3      .3      .5     -.2
     -.3      .0     -.4     1.3      .4     -.9
     -.1      .0      .1    -1.6      .5      .1
     -.1     1.1     -.7      .2      .5      .6
     -.3     -.3     -.7      .1     -.6      .1
    -1.4     1.1     -.4     -.7     1.6     1.0
     1.8
           Chi-square with 42 degrees of freedom: 26.558
              z-score= -1.685  p-value= .030396
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .936266
                Test no.  2      p-value  .606516
                Test no.  3      p-value  .652334
                Test no.  4      p-value  .493332
                Test no.  5      p-value  .577995
                Test no.  6      p-value  .594275
                Test no.  7      p-value  .215583
                Test no.  8      p-value  .049244
                Test no.  9      p-value  .936879
                Test no. 10      p-value  .469458
   Results of the OSUM test for hmg_10mb.txt   
        KSTEST on the above 10 p-values:  .365395

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file hmg_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for hmg_10mb.txt   :
       runs up; ks test for 10 p's: .152393
     runs down; ks test for 10 p's: .194618
                 Run test for hmg_10mb.txt   :
       runs up; ks test for 10 p's: .213613
     runs down; ks test for 10 p's: .476641

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for hmg_10mb.txt   
  No. of wins:  Observed Expected
                                98611    98585.86
                  98611= No. of wins, z-score=  .112 pvalue= .54476
   Analysis of Throws-per-Game:
 Chisq=  32.20 for 20 degrees of freedom, p=  .95883
               Throws Observed Expected  Chisq     Sum
                  1    66431    66666.7    .833     .833
                  2    37938    37654.3   2.137    2.970
                  3    26939    26954.7    .009    2.979
                  4    19509    19313.5   1.980    4.959
                  5    13680    13851.4   2.121    7.081
                  6     9854     9943.5    .806    7.887
                  7     7102     7145.0    .259    8.146
                  8     5322     5139.1   6.511   14.657
                  9     3786     3699.9   2.005   16.663
                 10     2662     2666.3    .007   16.670
                 11     1866     1923.3   1.709   18.378
                 12     1316     1388.7   3.810   22.188
                 13     1003     1003.7    .001   22.189
                 14      720      726.1    .052   22.241
                 15      509      525.8    .539   22.780
                 16      394      381.2    .433   23.213
                 17      244      276.5   3.829   27.042
                 18      206      200.8    .133   27.175
                 19      129      146.0   1.976   29.151
                 20       90      106.2   2.475   31.627
                 21      300      287.1    .578   32.205
            SUMMARY  FOR hmg_10mb.txt   
                p-value for no. of wins: .544764
                p-value for throws/game: .958835

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file hmg10.txt      
