       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. NextUInt32, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for csp_10mb.txt   
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  1 to 24   1.940
  duplicate       number       number 
  spacings       observed     expected
        0          73.       67.668
        1         131.      135.335
        2         155.      135.335
        3          70.       90.224
        4          43.       45.112
        5          22.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     9.54 p-value=  .854786
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  2 to 25   2.050
  duplicate       number       number 
  spacings       observed     expected
        0          74.       67.668
        1         116.      135.335
        2         130.      135.335
        3         100.       90.224
        4          58.       45.112
        5          16.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     9.17 p-value=  .835609
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  3 to 26   2.050
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         140.      135.335
        2         127.      135.335
        3          83.       90.224
        4          50.       45.112
        5          29.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     9.17 p-value=  .835609
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  4 to 27   2.038
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         134.      135.335
        2         143.      135.335
        3          85.       90.224
        4          50.       45.112
        5          15.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =     3.16 p-value=  .211480
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  5 to 28   1.986
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         134.      135.335
        2         140.      135.335
        3          89.       90.224
        4          51.       45.112
        5          18.       18.045
  6 to INF          3.        8.282
 Chisquare with  6 d.o.f. =     4.43 p-value=  .381697
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  6 to 29   1.846
  duplicate       number       number 
  spacings       observed     expected
        0          82.       67.668
        1         144.      135.335
        2         127.      135.335
        3          88.       90.224
        4          39.       45.112
        5          17.       18.045
  6 to INF          3.        8.282
 Chisquare with  6 d.o.f. =     8.42 p-value=  .790793
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  7 to 30   2.048
  duplicate       number       number 
  spacings       observed     expected
        0          61.       67.668
        1         141.      135.335
        2         142.      135.335
        3          84.       90.224
        4          35.       45.112
        5          24.       18.045
  6 to INF         13.        8.282
 Chisquare with  6 d.o.f. =     8.57 p-value=  .800854
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  8 to 31   1.930
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         132.      135.335
        2         145.      135.335
        3          89.       90.224
        4          45.       45.112
        5          13.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     3.66 p-value=  .277985
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  9 to 32   2.104
  duplicate       number       number 
  spacings       observed     expected
        0          58.       67.668
        1         136.      135.335
        2         127.      135.335
        3          99.       90.224
        4          51.       45.112
        5          18.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =     4.41 p-value=  .378948
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .854786   .835609   .835609   .211480   .381697
        .790793   .800854   .277985   .378948
  A KSTEST for the 9 p-values yields  .714767

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file csp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=105.149; p-value= .682827
           OPERM5 test for file csp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 90.925; p-value= .293624
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csp_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       207     211.4   .092324     .092
        29      5215    5134.0  1.277625    1.370
        30     22876   23103.0  2.231320    3.601
        31     11702   11551.5  1.960166    5.561
  chisquare= 5.561 for 3 d. of f.; p-value= .874170
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csp_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       229     211.4  1.462156    1.462
        30      5145    5134.0   .023524    1.486
        31     23135   23103.0   .044193    1.530
        32     11491   11551.5   .317119    1.847
  chisquare= 1.847 for 3 d. of f.; p-value= .482305
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for csp_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          913       944.3       1.038       1.038
          r =5        21718     21743.9        .031       1.068
          r =6        77369     77311.8        .042       1.111
                        p=1-exp(-SUM/2)= .42614
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21772     21743.9        .036        .136
          r =6        77274     77311.8        .018        .154
                        p=1-exp(-SUM/2)= .07430
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          974       944.3        .934        .934
          r =5        21773     21743.9        .039        .973
          r =6        77253     77311.8        .045       1.018
                        p=1-exp(-SUM/2)= .39882
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          987       944.3       1.931       1.931
          r =5        21835     21743.9        .382       2.312
          r =6        77178     77311.8        .232       2.544
                        p=1-exp(-SUM/2)= .71973
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21796     21743.9        .125        .324
          r =6        77246     77311.8        .056        .380
                        p=1-exp(-SUM/2)= .17286
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          933       944.3        .135        .135
          r =5        21788     21743.9        .089        .225
          r =6        77279     77311.8        .014        .239
                        p=1-exp(-SUM/2)= .11246
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          966       944.3        .499        .499
          r =5        21747     21743.9        .000        .499
          r =6        77287     77311.8        .008        .507
                        p=1-exp(-SUM/2)= .22392
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21560     21743.9       1.555       1.612
          r =6        77503     77311.8        .473       2.085
                        p=1-exp(-SUM/2)= .64736
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          902       944.3       1.895       1.895
          r =5        21684     21743.9        .165       2.060
          r =6        77414     77311.8        .135       2.195
                        p=1-exp(-SUM/2)= .66630
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21488     21743.9       3.012       3.017
          r =6        77570     77311.8        .862       3.880
                        p=1-exp(-SUM/2)= .85626
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          950       944.3        .034        .034
          r =5        21666     21743.9        .279        .313
          r =6        77384     77311.8        .067        .381
                        p=1-exp(-SUM/2)= .17341
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          916       944.3        .848        .848
          r =5        21681     21743.9        .182       1.030
          r =6        77403     77311.8        .108       1.138
                        p=1-exp(-SUM/2)= .43383
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          903       944.3       1.806       1.806
          r =5        21598     21743.9        .979       2.785
          r =6        77499     77311.8        .453       3.239
                        p=1-exp(-SUM/2)= .80197
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          919       944.3        .678        .678
          r =5        21622     21743.9        .683       1.361
          r =6        77459     77311.8        .280       1.642
                        p=1-exp(-SUM/2)= .55991
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          909       944.3       1.320       1.320
          r =5        21568     21743.9       1.423       2.743
          r =6        77523     77311.8        .577       3.320
                        p=1-exp(-SUM/2)= .80982
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21885     21743.9        .916        .972
          r =6        77178     77311.8        .232       1.204
                        p=1-exp(-SUM/2)= .45219
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          955       944.3        .121        .121
          r =5        21984     21743.9       2.651       2.772
          r =6        77061     77311.8        .814       3.586
                        p=1-exp(-SUM/2)= .83354
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          928       944.3        .281        .281
          r =5        21759     21743.9        .010        .292
          r =6        77313     77311.8        .000        .292
                        p=1-exp(-SUM/2)= .13580
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          940       944.3        .020        .020
          r =5        21778     21743.9        .053        .073
          r =6        77282     77311.8        .011        .085
                        p=1-exp(-SUM/2)= .04140
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          971       944.3        .755        .755
          r =5        21775     21743.9        .044        .799
          r =6        77254     77311.8        .043        .843
                        p=1-exp(-SUM/2)= .34380
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          971       944.3        .755        .755
          r =5        21729     21743.9        .010        .765
          r =6        77300     77311.8        .002        .767
                        p=1-exp(-SUM/2)= .31849
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          933       944.3        .135        .135
          r =5        21737     21743.9        .002        .137
          r =6        77330     77311.8        .004        .142
                        p=1-exp(-SUM/2)= .06841
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          962       944.3        .332        .332
          r =5        21562     21743.9       1.522       1.853
          r =6        77476     77311.8        .349       2.202
                        p=1-exp(-SUM/2)= .66749
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          952       944.3        .063        .063
          r =5        21817     21743.9        .246        .309
          r =6        77231     77311.8        .084        .393
                        p=1-exp(-SUM/2)= .17839
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          914       944.3        .972        .972
          r =5        21857     21743.9        .588       1.561
          r =6        77229     77311.8        .089       1.649
                        p=1-exp(-SUM/2)= .56161
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .426136     .074301     .398817     .719726     .172862
     .112464     .223923     .647364     .666303     .856263
     .173412     .433834     .801968     .559911     .809822
     .452189     .833545     .135803     .041398     .343796
     .318487     .068410     .667485     .178387     .561610
   brank test summary for csp_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .680003

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141617 missing words,    -.68 sigmas from mean, p-value= .24730
 tst no  2:  142123 missing words,     .50 sigmas from mean, p-value= .69119
 tst no  3:  141452 missing words,   -1.07 sigmas from mean, p-value= .14264
 tst no  4:  141787 missing words,    -.29 sigmas from mean, p-value= .38751
 tst no  5:  142670 missing words,    1.78 sigmas from mean, p-value= .96224
 tst no  6:  141828 missing words,    -.19 sigmas from mean, p-value= .42465
 tst no  7:  141787 missing words,    -.29 sigmas from mean, p-value= .38751
 tst no  8:  141919 missing words,     .02 sigmas from mean, p-value= .50901
 tst no  9:  141550 missing words,    -.84 sigmas from mean, p-value= .20058
 tst no 10:  141902 missing words,    -.02 sigmas from mean, p-value= .49317
 tst no 11:  141563 missing words,    -.81 sigmas from mean, p-value= .20921
 tst no 12:  141854 missing words,    -.13 sigmas from mean, p-value= .44857
 tst no 13:  141885 missing words,    -.06 sigmas from mean, p-value= .47734
 tst no 14:  141670 missing words,    -.56 sigmas from mean, p-value= .28802
 tst no 15:  142412 missing words,    1.17 sigmas from mean, p-value= .87990
 tst no 16:  141784 missing words,    -.29 sigmas from mean, p-value= .38483
 tst no 17:  141320 missing words,   -1.38 sigmas from mean, p-value= .08427
 tst no 18:  142173 missing words,     .62 sigmas from mean, p-value= .73107
 tst no 19:  142237 missing words,     .77 sigmas from mean, p-value= .77804
 tst no 20:  142361 missing words,    1.06 sigmas from mean, p-value= .85436

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator csp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for csp_10mb.txt    using bits 23 to 32        142099   .654  .7435
    OPSO for csp_10mb.txt    using bits 22 to 31        142175   .916  .8202
    OPSO for csp_10mb.txt    using bits 21 to 30        141673  -.815  .2076
    OPSO for csp_10mb.txt    using bits 20 to 29        142017   .371  .6448
    OPSO for csp_10mb.txt    using bits 19 to 28        142039   .447  .6726
    OPSO for csp_10mb.txt    using bits 18 to 27        142450  1.864  .9689
    OPSO for csp_10mb.txt    using bits 17 to 26        142034   .430  .6664
    OPSO for csp_10mb.txt    using bits 16 to 25        141974   .223  .5882
    OPSO for csp_10mb.txt    using bits 15 to 24        141908  -.005  .4982
    OPSO for csp_10mb.txt    using bits 14 to 23        141970   .209  .5829
    OPSO for csp_10mb.txt    using bits 13 to 22        142530  2.140  .9838
    OPSO for csp_10mb.txt    using bits 12 to 21        142138   .789  .7848
    OPSO for csp_10mb.txt    using bits 11 to 20        141677  -.801  .2115
    OPSO for csp_10mb.txt    using bits 10 to 19        142344  1.499  .9330
    OPSO for csp_10mb.txt    using bits  9 to 18        142184   .947  .8282
    OPSO for csp_10mb.txt    using bits  8 to 17        141766  -.494  .3106
    OPSO for csp_10mb.txt    using bits  7 to 16        142123   .737  .7694
    OPSO for csp_10mb.txt    using bits  6 to 15        141822  -.301  .3817
    OPSO for csp_10mb.txt    using bits  5 to 14        141730  -.618  .2682
    OPSO for csp_10mb.txt    using bits  4 to 13        142379  1.620  .9473
    OPSO for csp_10mb.txt    using bits  3 to 12        141753  -.539  .2949
    OPSO for csp_10mb.txt    using bits  2 to 11        142221  1.075  .8588
    OPSO for csp_10mb.txt    using bits  1 to 10        141132 -2.680  .0037
 OQSO test for generator csp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for csp_10mb.txt    using bits 28 to 32        141864  -.154  .4389
    OQSO for csp_10mb.txt    using bits 27 to 31        142071   .548  .7082
    OQSO for csp_10mb.txt    using bits 26 to 30        141599 -1.052  .1464
    OQSO for csp_10mb.txt    using bits 25 to 29        141668  -.818  .2067
    OQSO for csp_10mb.txt    using bits 24 to 28        141899  -.035  .4860
    OQSO for csp_10mb.txt    using bits 23 to 27        141773  -.462  .3220
    OQSO for csp_10mb.txt    using bits 22 to 26        142134   .762  .7769
    OQSO for csp_10mb.txt    using bits 21 to 25        142089   .609  .7288
    OQSO for csp_10mb.txt    using bits 20 to 24        141921   .040  .5158
    OQSO for csp_10mb.txt    using bits 19 to 23        141747  -.550  .2911
    OQSO for csp_10mb.txt    using bits 18 to 22        142045   .460  .6772
    OQSO for csp_10mb.txt    using bits 17 to 21        141973   .216  .5854
    OQSO for csp_10mb.txt    using bits 16 to 20        141936   .090  .5360
    OQSO for csp_10mb.txt    using bits 15 to 19        141956   .158  .5629
    OQSO for csp_10mb.txt    using bits 14 to 18        142508  2.029  .9788
    OQSO for csp_10mb.txt    using bits 13 to 17        141718  -.649  .2583
    OQSO for csp_10mb.txt    using bits 12 to 16        141899  -.035  .4860
    OQSO for csp_10mb.txt    using bits 11 to 15        141799  -.374  .3542
    OQSO for csp_10mb.txt    using bits 10 to 14        142057   .501  .6917
    OQSO for csp_10mb.txt    using bits  9 to 13        141962   .179  .5709
    OQSO for csp_10mb.txt    using bits  8 to 12        142079   .575  .7174
    OQSO for csp_10mb.txt    using bits  7 to 11        141916   .023  .5090
    OQSO for csp_10mb.txt    using bits  6 to 10        142146   .802  .7888
    OQSO for csp_10mb.txt    using bits  5 to  9        141994   .287  .6130
    OQSO for csp_10mb.txt    using bits  4 to  8        141880  -.099  .4604
    OQSO for csp_10mb.txt    using bits  3 to  7        142443  1.809  .9648
    OQSO for csp_10mb.txt    using bits  2 to  6        142077   .568  .7151
    OQSO for csp_10mb.txt    using bits  1 to  5        142279  1.253  .8949
  DNA test for generator csp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for csp_10mb.txt    using bits 31 to 32        141758  -.446  .3277
     DNA for csp_10mb.txt    using bits 30 to 31        141048 -2.541  .0055
     DNA for csp_10mb.txt    using bits 29 to 30        141780  -.381  .3514
     DNA for csp_10mb.txt    using bits 28 to 29        141723  -.550  .2913
     DNA for csp_10mb.txt    using bits 27 to 28        141780  -.381  .3514
     DNA for csp_10mb.txt    using bits 26 to 27        141451 -1.352  .0882
     DNA for csp_10mb.txt    using bits 25 to 26        141740  -.499  .3087
     DNA for csp_10mb.txt    using bits 24 to 25        142016   .315  .6235
     DNA for csp_10mb.txt    using bits 23 to 24        141715  -.573  .2832
     DNA for csp_10mb.txt    using bits 22 to 23        142068   .468  .6801
     DNA for csp_10mb.txt    using bits 21 to 22        141977   .200  .5791
     DNA for csp_10mb.txt    using bits 20 to 21        141739  -.502  .3077
     DNA for csp_10mb.txt    using bits 19 to 20        141992   .244  .5963
     DNA for csp_10mb.txt    using bits 18 to 19        141617  -.862  .1943
     DNA for csp_10mb.txt    using bits 17 to 18        142093   .542  .7060
     DNA for csp_10mb.txt    using bits 16 to 17        142737  2.442  .9927
     DNA for csp_10mb.txt    using bits 15 to 16        141622  -.848  .1983
     DNA for csp_10mb.txt    using bits 14 to 15        141783  -.373  .3547
     DNA for csp_10mb.txt    using bits 13 to 14        141341 -1.676  .0468
     DNA for csp_10mb.txt    using bits 12 to 13        141790  -.352  .3624
     DNA for csp_10mb.txt    using bits 11 to 12        141678  -.682  .2475
     DNA for csp_10mb.txt    using bits 10 to 11        142403  1.456  .9273
     DNA for csp_10mb.txt    using bits  9 to 10        141509 -1.181  .1188
     DNA for csp_10mb.txt    using bits  8 to  9        142417  1.498  .9329
     DNA for csp_10mb.txt    using bits  7 to  8        142098   .557  .7111
     DNA for csp_10mb.txt    using bits  6 to  7        142191   .831  .7970
     DNA for csp_10mb.txt    using bits  5 to  6        141135 -2.284  .0112
     DNA for csp_10mb.txt    using bits  4 to  5        142680  2.273  .9885
     DNA for csp_10mb.txt    using bits  3 to  4        141933   .070  .5278
     DNA for csp_10mb.txt    using bits  2 to  3        141955   .135  .5536
     DNA for csp_10mb.txt    using bits  1 to  2        141196 -2.104  .0177

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for csp_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for csp_10mb.txt     2676.04      2.490      .993605
 byte stream for csp_10mb.txt     2497.18      -.040      .484090

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2254.26     -3.475      .000255
           bits  2 to  9  2445.59      -.769      .220803
           bits  3 to 10  2613.72      1.608      .946102
           bits  4 to 11  2493.91      -.086      .465677
           bits  5 to 12  2513.35       .189      .574879
           bits  6 to 13  2414.38     -1.211      .112979
           bits  7 to 14  2548.99       .693      .755783
           bits  8 to 15  2457.43      -.602      .273568
           bits  9 to 16  2364.82     -1.912      .027957
           bits 10 to 17  2486.31      -.194      .423240
           bits 11 to 18  2449.68      -.712      .238335
           bits 12 to 19  2425.41     -1.055      .145730
           bits 13 to 20  2635.19      1.912      .972054
           bits 14 to 21  2432.18      -.959      .168758
           bits 15 to 22  2394.59     -1.491      .068020
           bits 16 to 23  2639.60      1.974      .975825
           bits 17 to 24  2482.26      -.251      .400948
           bits 18 to 25  2512.26       .173      .568850
           bits 19 to 26  2529.40       .416      .661214
           bits 20 to 27  2596.23      1.361      .913238
           bits 21 to 28  2554.28       .768      .778660
           bits 22 to 29  2465.35      -.490      .312062
           bits 23 to 30  2472.44      -.390      .348340
           bits 24 to 31  2409.09     -1.286      .099278
           bits 25 to 32  2440.41      -.843      .199702

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file csp_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3503    z-score:  -.913 p-value: .180558
            Successes: 3494    z-score: -1.324 p-value: .092718
            Successes: 3491    z-score: -1.461 p-value: .071982
            Successes: 3505    z-score:  -.822 p-value: .205562
            Successes: 3556    z-score:  1.507 p-value: .934075
            Successes: 3534    z-score:   .502 p-value: .692266
            Successes: 3539    z-score:   .731 p-value: .767486
            Successes: 3522    z-score:  -.046 p-value: .481790
            Successes: 3546    z-score:  1.050 p-value: .853193
            Successes: 3518    z-score:  -.228 p-value: .409702
 
           square size   avg. no.  parked   sample sigma
             100.            3520.800       21.339
            KSTEST for the above 10: p=  .061352

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file csp_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5     .6040    .4535     .455014
          10     .2787    .7038     .244317
          15     .6175   1.0066     .462406
          20     .4499    .9069     .363739
          25     .2407    .8567     .214892
          30    4.4688    .9043     .988793
          35     .8104    .9893     .557118
          40    1.0651   1.0180     .657148
          45     .1099    .9852     .104588
          50    1.0913    .9550     .666064
          55    1.1224    .9668     .676322
          60    2.5453    .9975     .922547
          65     .9606   1.0128     .619189
          70    1.1128    .9839     .673192
          75    3.7122   1.0421     .976028
          80    2.3314   1.0508     .903977
          85    1.4841   1.0665     .774989
          90     .4436   1.0788     .359735
          95    1.1341   1.0680     .680121
         100    2.1972   1.0565     .890106
     MINIMUM DISTANCE TEST for csp_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .400313

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file csp_10mb.txt   
 sample no:  1     r^3=  62.824     p-value= .87682
 sample no:  2     r^3=  70.952     p-value= .90606
 sample no:  3     r^3=  17.772     p-value= .44700
 sample no:  4     r^3=  87.928     p-value= .94665
 sample no:  5     r^3=  35.514     p-value= .69389
 sample no:  6     r^3=  48.924     p-value= .80423
 sample no:  7     r^3=  29.285     p-value= .62325
 sample no:  8     r^3=   5.795     p-value= .17565
 sample no:  9     r^3=  94.070     p-value= .95653
 sample no: 10     r^3=  31.377     p-value= .64863
 sample no: 11     r^3=  38.793     p-value= .72558
 sample no: 12     r^3=  25.832     p-value= .57729
 sample no: 13     r^3=   9.052     p-value= .26047
 sample no: 14     r^3=   5.105     p-value= .15648
 sample no: 15     r^3=   3.141     p-value= .09941
 sample no: 16     r^3=  64.097     p-value= .88194
 sample no: 17     r^3=  74.451     p-value= .91640
 sample no: 18     r^3=  22.015     p-value= .51994
 sample no: 19     r^3=  29.753     p-value= .62907
 sample no: 20     r^3=  17.717     p-value= .44599
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file csp_10mb.txt         p-value= .880250
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR csp_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     1.3     1.8     -.8      .0     1.3    -1.0
      .0    -2.1      .1      .2     -.5     1.2
     -.3     1.4     1.5      .1    -1.1     -.9
      .2     -.1     -.4      .2      .6      .3
    -1.6      .3     1.0      .2    -1.6      .4
    -2.2      .1     -.1      .3      .1     -.3
     1.2     -.7      .5      .4     -.6      .0
    -1.1
           Chi-square with 42 degrees of freedom: 35.906
              z-score=  -.665  p-value= .265259
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .851775
                Test no.  2      p-value  .970407
                Test no.  3      p-value  .690465
                Test no.  4      p-value  .509460
                Test no.  5      p-value  .688426
                Test no.  6      p-value  .807658
                Test no.  7      p-value  .297011
                Test no.  8      p-value  .574060
                Test no.  9      p-value  .973679
                Test no. 10      p-value  .383900
   Results of the OSUM test for csp_10mb.txt   
        KSTEST on the above 10 p-values:  .912139

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file csp_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for csp_10mb.txt   :
       runs up; ks test for 10 p's: .909980
     runs down; ks test for 10 p's: .942857
                 Run test for csp_10mb.txt   :
       runs up; ks test for 10 p's: .132293
     runs down; ks test for 10 p's: .375826

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for csp_10mb.txt   
  No. of wins:  Observed Expected
                                98512    98585.86
                  98512= No. of wins, z-score= -.330 pvalue= .37057
   Analysis of Throws-per-Game:
 Chisq=  15.39 for 20 degrees of freedom, p=  .24629
               Throws Observed Expected  Chisq     Sum
                  1    66839    66666.7    .445     .445
                  2    37485    37654.3    .761    1.207
                  3    26899    26954.7    .115    1.322
                  4    19399    19313.5    .379    1.701
                  5    13972    13851.4   1.050    2.751
                  6     9932     9943.5    .013    2.764
                  7     6975     7145.0   4.046    6.810
                  8     5104     5139.1    .239    7.049
                  9     3765     3699.9   1.147    8.196
                 10     2665     2666.3    .001    8.197
                 11     1899     1923.3    .308    8.504
                 12     1323     1388.7   3.112   11.616
                 13     1031     1003.7    .742   12.358
                 14      756      726.1   1.228   13.586
                 15      521      525.8    .044   13.630
                 16      386      381.2    .062   13.692
                 17      277      276.5    .001   13.693
                 18      213      200.8    .738   14.430
                 19      147      146.0    .007   14.438
                 20      109      106.2    .073   14.511
                 21      303      287.1    .879   15.389
            SUMMARY  FOR csp_10mb.txt   
                p-value for no. of wins: .370571
                p-value for throws/game: .246285

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file csp10.txt      
