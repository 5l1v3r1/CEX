       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. NextUInt32, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for cjp_10mb.txt   
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  1 to 24   2.054
  duplicate       number       number 
  spacings       observed     expected
        0          55.       67.668
        1         130.      135.335
        2         151.      135.335
        3          99.       90.224
        4          39.       45.112
        5          20.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     6.92 p-value=  .671430
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  2 to 25   1.964
  duplicate       number       number 
  spacings       observed     expected
        0          77.       67.668
        1         126.      135.335
        2         137.      135.335
        3          96.       90.224
        4          34.       45.112
        5          25.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     9.04 p-value=  .828642
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  3 to 26   1.968
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         138.      135.335
        2         143.      135.335
        3          84.       90.224
        4          41.       45.112
        5          20.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     1.71 p-value=  .055457
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  4 to 27   2.066
  duplicate       number       number 
  spacings       observed     expected
        0          61.       67.668
        1         127.      135.335
        2         145.      135.335
        3          91.       90.224
        4          51.       45.112
        5          17.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     2.71 p-value=  .155247
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  5 to 28   1.978
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         140.      135.335
        2         118.      135.335
        3          82.       90.224
        4          56.       45.112
        5          19.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     7.59 p-value=  .729928
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  6 to 29   1.896
  duplicate       number       number 
  spacings       observed     expected
        0          85.       67.668
        1         124.      135.335
        2         146.      135.335
        3          81.       90.224
        4          42.       45.112
        5          16.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     8.25 p-value=  .779457
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  7 to 30   1.908
  duplicate       number       number 
  spacings       observed     expected
        0          60.       67.668
        1         159.      135.335
        2         129.      135.335
        3          99.       90.224
        4          32.       45.112
        5          14.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =    11.07 p-value=  .913857
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  8 to 31   2.014
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         140.      135.335
        2         114.      135.335
        3          93.       90.224
        4          40.       45.112
        5          22.       18.045
  6 to INF         13.        8.282
 Chisquare with  6 d.o.f. =     9.32 p-value=  .843714
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_10mb.txt    using bits  9 to 32   2.016
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         145.      135.335
        2         150.      135.335
        3          76.       90.224
        4          32.       45.112
        5          25.       18.045
  6 to INF         13.        8.282
 Chisquare with  6 d.o.f. =    14.81 p-value=  .978226
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .671430   .828642   .055457   .155247   .729928
        .779457   .913857   .843714   .978226
  A KSTEST for the 9 p-values yields  .916788

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file cjp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 88.973; p-value= .244870
           OPERM5 test for file cjp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=159.756; p-value= .999891
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for cjp_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       191     211.4  1.971901    1.972
        29      5072    5134.0   .748980    2.721
        30     23051   23103.0   .117252    2.838
        31     11686   11551.5  1.565480    4.404
  chisquare= 4.404 for 3 d. of f.; p-value= .796881
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for cjp_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       195     211.4  1.274968    1.275
        30      5250    5134.0  2.620490    3.895
        31     23027   23103.0   .250319    4.146
        32     11528   11551.5   .047907    4.194
  chisquare= 4.194 for 3 d. of f.; p-value= .778993
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for cjp_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          925       944.3        .395        .395
          r =5        21812     21743.9        .213        .608
          r =6        77263     77311.8        .031        .639
                        p=1-exp(-SUM/2)= .27334
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          959       944.3        .229        .229
          r =5        21879     21743.9        .839       1.068
          r =6        77162     77311.8        .290       1.358
                        p=1-exp(-SUM/2)= .49300
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          970       944.3        .699        .699
          r =5        21693     21743.9        .119        .819
          r =6        77337     77311.8        .008        .827
                        p=1-exp(-SUM/2)= .33858
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          990       944.3       2.212       2.212
          r =5        21789     21743.9        .094       2.305
          r =6        77221     77311.8        .107       2.412
                        p=1-exp(-SUM/2)= .70057
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          963       944.3        .370        .370
          r =5        21785     21743.9        .078        .448
          r =6        77252     77311.8        .046        .494
                        p=1-exp(-SUM/2)= .21894
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          952       944.3        .063        .063
          r =5        21851     21743.9        .528        .590
          r =6        77197     77311.8        .170        .761
                        p=1-exp(-SUM/2)= .31640
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21823     21743.9        .288        .583
          r =6        77216     77311.8        .119        .702
                        p=1-exp(-SUM/2)= .29593
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21692     21743.9        .124        .651
          r =6        77386     77311.8        .071        .722
                        p=1-exp(-SUM/2)= .30294
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          925       944.3        .395        .395
          r =5        21923     21743.9       1.475       1.870
          r =6        77152     77311.8        .330       2.200
                        p=1-exp(-SUM/2)= .66713
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21662     21743.9        .308        .408
          r =6        77384     77311.8        .067        .476
                        p=1-exp(-SUM/2)= .21161
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          935       944.3        .092        .092
          r =5        21806     21743.9        .177        .269
          r =6        77259     77311.8        .036        .305
                        p=1-exp(-SUM/2)= .14146
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21740     21743.9        .001        .188
          r =6        77329     77311.8        .004        .192
                        p=1-exp(-SUM/2)= .09148
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          925       944.3        .395        .395
          r =5        21679     21743.9        .194        .588
          r =6        77396     77311.8        .092        .680
                        p=1-exp(-SUM/2)= .28820
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          951       944.3        .048        .048
          r =5        21623     21743.9        .672        .720
          r =6        77426     77311.8        .169        .888
                        p=1-exp(-SUM/2)= .35867
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          912       944.3       1.105       1.105
          r =5        21622     21743.9        .683       1.788
          r =6        77466     77311.8        .308       2.096
                        p=1-exp(-SUM/2)= .64933
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          911       944.3       1.174       1.174
          r =5        21756     21743.9        .007       1.181
          r =6        77333     77311.8        .006       1.187
                        p=1-exp(-SUM/2)= .44759
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          900       944.3       2.078       2.078
          r =5        21947     21743.9       1.897       3.975
          r =6        77153     77311.8        .326       4.302
                        p=1-exp(-SUM/2)= .88361
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          916       944.3        .848        .848
          r =5        21865     21743.9        .674       1.523
          r =6        77219     77311.8        .111       1.634
                        p=1-exp(-SUM/2)= .55826
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        21949     21743.9       1.935       2.008
          r =6        77115     77311.8        .501       2.509
                        p=1-exp(-SUM/2)= .71472
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          950       944.3        .034        .034
          r =5        21699     21743.9        .093        .127
          r =6        77351     77311.8        .020        .147
                        p=1-exp(-SUM/2)= .07085
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          901       944.3       1.986       1.986
          r =5        21693     21743.9        .119       2.105
          r =6        77406     77311.8        .115       2.220
                        p=1-exp(-SUM/2)= .67036
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          910       944.3       1.246       1.246
          r =5        21815     21743.9        .232       1.478
          r =6        77275     77311.8        .018       1.496
                        p=1-exp(-SUM/2)= .52668
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21663     21743.9        .301        .313
          r =6        77396     77311.8        .092        .404
                        p=1-exp(-SUM/2)= .18300
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          964       944.3        .411        .411
          r =5        21755     21743.9        .006        .417
          r =6        77281     77311.8        .012        .429
                        p=1-exp(-SUM/2)= .19300
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21809     21743.9        .195        .225
          r =6        77252     77311.8        .046        .271
                        p=1-exp(-SUM/2)= .12669
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .273343     .492996     .338584     .700570     .218943
     .316400     .295933     .302940     .667135     .211607
     .141457     .091483     .288200     .358671     .649335
     .447590     .883610     .558257     .714720     .070855
     .670361     .526684     .182999     .193002     .126689
   brank test summary for cjp_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .950292

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  142444 missing words,    1.25 sigmas from mean, p-value= .89421
 tst no  2:  142227 missing words,     .74 sigmas from mean, p-value= .77102
 tst no  3:  142053 missing words,     .34 sigmas from mean, p-value= .63144
 tst no  4:  142300 missing words,     .91 sigmas from mean, p-value= .81932
 tst no  5:  141913 missing words,     .01 sigmas from mean, p-value= .50342
 tst no  6:  142348 missing words,    1.02 sigmas from mean, p-value= .84730
 tst no  7:  141594 missing words,    -.74 sigmas from mean, p-value= .23064
 tst no  8:  141944 missing words,     .08 sigmas from mean, p-value= .53228
 tst no  9:  141832 missing words,    -.18 sigmas from mean, p-value= .42831
 tst no 10:  141809 missing words,    -.23 sigmas from mean, p-value= .40733
 tst no 11:  142465 missing words,    1.30 sigmas from mean, p-value= .90291
 tst no 12:  142165 missing words,     .60 sigmas from mean, p-value= .72487
 tst no 13:  141212 missing words,   -1.63 sigmas from mean, p-value= .05163
 tst no 14:  142067 missing words,     .37 sigmas from mean, p-value= .64371
 tst no 15:  142366 missing words,    1.07 sigmas from mean, p-value= .85701
 tst no 16:  142271 missing words,     .85 sigmas from mean, p-value= .80095
 tst no 17:  141577 missing words,    -.78 sigmas from mean, p-value= .21874
 tst no 18:  141522 missing words,    -.90 sigmas from mean, p-value= .18274
 tst no 19:  141289 missing words,   -1.45 sigmas from mean, p-value= .07362
 tst no 20:  142220 missing words,     .73 sigmas from mean, p-value= .76604

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator cjp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for cjp_10mb.txt    using bits 23 to 32        141959   .171  .5680
    OPSO for cjp_10mb.txt    using bits 22 to 31        141806  -.356  .3608
    OPSO for cjp_10mb.txt    using bits 21 to 30        141741  -.580  .2808
    OPSO for cjp_10mb.txt    using bits 20 to 29        141637  -.939  .1738
    OPSO for cjp_10mb.txt    using bits 19 to 28        142053   .495  .6898
    OPSO for cjp_10mb.txt    using bits 18 to 27        142006   .333  .6306
    OPSO for cjp_10mb.txt    using bits 17 to 26        141238 -2.315  .0103
    OPSO for cjp_10mb.txt    using bits 16 to 25        141810  -.343  .3660
    OPSO for cjp_10mb.txt    using bits 15 to 24        141832  -.267  .3949
    OPSO for cjp_10mb.txt    using bits 14 to 23        142115   .709  .7609
    OPSO for cjp_10mb.txt    using bits 13 to 22        142026   .402  .6563
    OPSO for cjp_10mb.txt    using bits 12 to 21        141602 -1.060  .1446
    OPSO for cjp_10mb.txt    using bits 11 to 20        142019   .378  .6474
    OPSO for cjp_10mb.txt    using bits 10 to 19        141649  -.898  .1847
    OPSO for cjp_10mb.txt    using bits  9 to 18        141951   .144  .5571
    OPSO for cjp_10mb.txt    using bits  8 to 17        141513 -1.367  .0859
    OPSO for cjp_10mb.txt    using bits  7 to 16        142249  1.171  .8793
    OPSO for cjp_10mb.txt    using bits  6 to 15        141912   .009  .5037
    OPSO for cjp_10mb.txt    using bits  5 to 14        142160   .864  .8063
    OPSO for cjp_10mb.txt    using bits  4 to 13        141767  -.491  .3118
    OPSO for cjp_10mb.txt    using bits  3 to 12        141938   .099  .5394
    OPSO for cjp_10mb.txt    using bits  2 to 11        141841  -.236  .4069
    OPSO for cjp_10mb.txt    using bits  1 to 10        141964   .189  .5748
 OQSO test for generator cjp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for cjp_10mb.txt    using bits 28 to 32        141595 -1.066  .1433
    OQSO for cjp_10mb.txt    using bits 27 to 31        141674  -.798  .2125
    OQSO for cjp_10mb.txt    using bits 26 to 30        141892  -.059  .4766
    OQSO for cjp_10mb.txt    using bits 25 to 29        142088   .606  .7276
    OQSO for cjp_10mb.txt    using bits 24 to 28        142356  1.514  .9350
    OQSO for cjp_10mb.txt    using bits 23 to 27        141305 -2.049  .0203
    OQSO for cjp_10mb.txt    using bits 22 to 26        142259  1.185  .8821
    OQSO for cjp_10mb.txt    using bits 21 to 25        141906  -.011  .4955
    OQSO for cjp_10mb.txt    using bits 20 to 24        141940   .104  .5414
    OQSO for cjp_10mb.txt    using bits 19 to 23        142106   .667  .7475
    OQSO for cjp_10mb.txt    using bits 18 to 22        141556 -1.198  .1155
    OQSO for cjp_10mb.txt    using bits 17 to 21        142078   .572  .7163
    OQSO for cjp_10mb.txt    using bits 16 to 20        142144   .795  .7868
    OQSO for cjp_10mb.txt    using bits 15 to 19        141843  -.225  .4111
    OQSO for cjp_10mb.txt    using bits 14 to 18        142039   .440  .6699
    OQSO for cjp_10mb.txt    using bits 13 to 17        141977   .229  .5907
    OQSO for cjp_10mb.txt    using bits 12 to 16        141844  -.221  .4124
    OQSO for cjp_10mb.txt    using bits 11 to 15        141979   .236  .5934
    OQSO for cjp_10mb.txt    using bits 10 to 14        142188   .945  .8276
    OQSO for cjp_10mb.txt    using bits  9 to 13        141786  -.418  .3380
    OQSO for cjp_10mb.txt    using bits  8 to 12        141694  -.730  .2327
    OQSO for cjp_10mb.txt    using bits  7 to 11        141634  -.933  .1753
    OQSO for cjp_10mb.txt    using bits  6 to 10        141088 -2.784  .0027
    OQSO for cjp_10mb.txt    using bits  5 to  9        142431  1.768  .9615
    OQSO for cjp_10mb.txt    using bits  4 to  8        141950   .138  .5548
    OQSO for cjp_10mb.txt    using bits  3 to  7        141782  -.432  .3330
    OQSO for cjp_10mb.txt    using bits  2 to  6        141824  -.289  .3862
    OQSO for cjp_10mb.txt    using bits  1 to  5        141651  -.876  .1906
  DNA test for generator cjp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for cjp_10mb.txt    using bits 31 to 32        142331  1.244  .8932
     DNA for cjp_10mb.txt    using bits 30 to 31        142297  1.144  .8736
     DNA for cjp_10mb.txt    using bits 29 to 30        142824  2.698  .9965
     DNA for cjp_10mb.txt    using bits 28 to 29        141678  -.682  .2475
     DNA for cjp_10mb.txt    using bits 27 to 28        142030   .356  .6391
     DNA for cjp_10mb.txt    using bits 26 to 27        142511  1.775  .9620
     DNA for cjp_10mb.txt    using bits 25 to 26        142022   .332  .6302
     DNA for cjp_10mb.txt    using bits 24 to 25        141441 -1.381  .0836
     DNA for cjp_10mb.txt    using bits 23 to 24        141936   .079  .5314
     DNA for cjp_10mb.txt    using bits 22 to 23        141783  -.373  .3547
     DNA for cjp_10mb.txt    using bits 21 to 22        141761  -.438  .3309
     DNA for cjp_10mb.txt    using bits 20 to 21        141802  -.317  .3758
     DNA for cjp_10mb.txt    using bits 19 to 20        141621  -.851  .1975
     DNA for cjp_10mb.txt    using bits 18 to 19        142008   .291  .6145
     DNA for cjp_10mb.txt    using bits 17 to 18        141816  -.275  .3915
     DNA for cjp_10mb.txt    using bits 16 to 17        141998   .262  .6032
     DNA for cjp_10mb.txt    using bits 15 to 16        141810  -.293  .3848
     DNA for cjp_10mb.txt    using bits 14 to 15        141864  -.134  .4468
     DNA for cjp_10mb.txt    using bits 13 to 14        142471  1.657  .9512
     DNA for cjp_10mb.txt    using bits 12 to 13        141708  -.594  .2763
     DNA for cjp_10mb.txt    using bits 11 to 12        141837  -.213  .4155
     DNA for cjp_10mb.txt    using bits 10 to 11        141686  -.659  .2550
     DNA for cjp_10mb.txt    using bits  9 to 10        142439  1.562  .9409
     DNA for cjp_10mb.txt    using bits  8 to  9        141798  -.328  .3713
     DNA for cjp_10mb.txt    using bits  7 to  8        141298 -1.803  .0357
     DNA for cjp_10mb.txt    using bits  6 to  7        141304 -1.786  .0371
     DNA for cjp_10mb.txt    using bits  5 to  6        141376 -1.573  .0578
     DNA for cjp_10mb.txt    using bits  4 to  5        141657  -.744  .2283
     DNA for cjp_10mb.txt    using bits  3 to  4        141506 -1.190  .1171
     DNA for cjp_10mb.txt    using bits  2 to  3        141503 -1.199  .1153
     DNA for cjp_10mb.txt    using bits  1 to  2        142481  1.686  .9541

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for cjp_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for cjp_10mb.txt     2567.69       .957      .830777
 byte stream for cjp_10mb.txt     2573.17      1.035      .849626

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2346.07     -2.177      .014745
           bits  2 to  9  2574.76      1.057      .854814
           bits  3 to 10  2544.48       .629      .735327
           bits  4 to 11  2477.64      -.316      .375902
           bits  5 to 12  2493.23      -.096      .461868
           bits  6 to 13  2435.61      -.911      .181258
           bits  7 to 14  2543.38       .613      .730216
           bits  8 to 15  2437.88      -.879      .189833
           bits  9 to 16  2451.69      -.683      .247234
           bits 10 to 17  2408.27     -1.297      .097275
           bits 11 to 18  2458.14      -.592      .276911
           bits 12 to 19  2481.74      -.258      .398107
           bits 13 to 20  2478.16      -.309      .378701
           bits 14 to 21  2516.68       .236      .593244
           bits 15 to 22  2376.52     -1.746      .040376
           bits 16 to 23  2534.81       .492      .688726
           bits 17 to 24  2471.28      -.406      .342306
           bits 18 to 25  2519.85       .281      .610537
           bits 19 to 26  2459.05      -.579      .281250
           bits 20 to 27  2584.30      1.192      .883413
           bits 21 to 28  2516.00       .226      .589499
           bits 22 to 29  2531.47       .445      .671866
           bits 23 to 30  2613.13      1.600      .945185
           bits 24 to 31  2396.41     -1.465      .071461
           bits 25 to 32  2553.23       .753      .774189

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file cjp_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3547    z-score:  1.096 p-value: .863437
            Successes: 3534    z-score:   .502 p-value: .692266
            Successes: 3529    z-score:   .274 p-value: .607947
            Successes: 3521    z-score:  -.091 p-value: .463618
            Successes: 3526    z-score:   .137 p-value: .554479
            Successes: 3528    z-score:   .228 p-value: .590298
            Successes: 3552    z-score:  1.324 p-value: .907282
            Successes: 3546    z-score:  1.050 p-value: .853193
            Successes: 3539    z-score:   .731 p-value: .767486
            Successes: 3526    z-score:   .137 p-value: .554479
 
           square size   avg. no.  parked   sample sigma
             100.            3534.800       10.048
            KSTEST for the above 10: p=  .957308

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file cjp_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5    2.7836   1.3024     .939041
          10     .9997    .8793     .633866
          15     .8923    .9798     .592134
          20    2.0987    .9277     .878669
          25    2.0174    .9831     .868342
          30     .9545   1.0869     .616849
          35     .0640    .9644     .062341
          40     .0404   1.0122     .039811
          45    1.4253   1.0780     .761289
          50     .6553   1.0307     .482441
          55     .5571   1.0089     .428740
          60     .3201   1.0083     .275095
          65     .7323    .9822     .520959
          70    1.1120    .9493     .672947
          75     .0118    .9847     .011817
          80    2.1047   1.0068     .879396
          85    1.2435    .9901     .713410
          90     .3592   1.0112     .303036
          95     .1826   1.0290     .167701
         100     .6414   1.0086     .475146
     MINIMUM DISTANCE TEST for cjp_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .135737

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file cjp_10mb.txt   
 sample no:  1     r^3=  15.539     p-value= .40426
 sample no:  2     r^3=  19.859     p-value= .48417
 sample no:  3     r^3=   5.954     p-value= .18001
 sample no:  4     r^3=  23.164     p-value= .53797
 sample no:  5     r^3=  23.962     p-value= .55011
 sample no:  6     r^3=  11.971     p-value= .32903
 sample no:  7     r^3=   4.818     p-value= .14837
 sample no:  8     r^3=    .849     p-value= .02792
 sample no:  9     r^3=  65.946     p-value= .88900
 sample no: 10     r^3=  43.653     p-value= .76662
 sample no: 11     r^3=  28.899     p-value= .61837
 sample no: 12     r^3=  50.152     p-value= .81208
 sample no: 13     r^3=  10.530     p-value= .29601
 sample no: 14     r^3=   8.724     p-value= .25233
 sample no: 15     r^3=  33.228     p-value= .66965
 sample no: 16     r^3=   2.665     p-value= .08500
 sample no: 17     r^3=   9.825     p-value= .27927
 sample no: 18     r^3=   4.897     p-value= .15061
 sample no: 19     r^3=   8.597     p-value= .24916
 sample no: 20     r^3=   2.266     p-value= .07277
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file cjp_10mb.txt         p-value= .843213
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR cjp_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
      .6      .1      .8     -.3     -.4    -1.0
      .9      .0      .4      .6     -.2    -1.4
     -.4    -1.4     -.5      .3      .8     -.2
      .9     1.5    -1.0      .6      .7     -.8
      .2     1.3      .6    -1.4    -1.4     -.3
      .5      .3    -1.6    -1.4      .2     -.5
      .3      .2     -.8     -.7     -.6    -1.0
     1.8
           Chi-square with 42 degrees of freedom: 31.290
              z-score= -1.169  p-value= .112734
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .628455
                Test no.  2      p-value  .413076
                Test no.  3      p-value  .988712
                Test no.  4      p-value  .647521
                Test no.  5      p-value  .379896
                Test no.  6      p-value  .664952
                Test no.  7      p-value  .909766
                Test no.  8      p-value  .806663
                Test no.  9      p-value  .988028
                Test no. 10      p-value  .809542
   Results of the OSUM test for cjp_10mb.txt   
        KSTEST on the above 10 p-values:  .983482

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file cjp_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for cjp_10mb.txt   :
       runs up; ks test for 10 p's: .590702
     runs down; ks test for 10 p's: .912027
                 Run test for cjp_10mb.txt   :
       runs up; ks test for 10 p's: .353114
     runs down; ks test for 10 p's: .893157

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for cjp_10mb.txt   
  No. of wins:  Observed Expected
                                98680    98585.86
                  98680= No. of wins, z-score=  .421 pvalue= .66314
   Analysis of Throws-per-Game:
 Chisq=  12.77 for 20 degrees of freedom, p=  .11277
               Throws Observed Expected  Chisq     Sum
                  1    66857    66666.7    .543     .543
                  2    37503    37654.3    .608    1.152
                  3    26748    26954.7   1.586    2.737
                  4    19436    19313.5    .777    3.515
                  5    13757    13851.4    .644    4.158
                  6     9968     9943.5    .060    4.218
                  7     7179     7145.0    .162    4.380
                  8     5230     5139.1   1.609    5.989
                  9     3774     3699.9   1.485    7.474
                 10     2627     2666.3    .579    8.053
                 11     1901     1923.3    .259    8.313
                 12     1365     1388.7    .406    8.718
                 13     1025     1003.7    .451    9.170
                 14      748      726.1    .658    9.828
                 15      506      525.8    .748   10.576
                 16      390      381.2    .205   10.782
                 17      266      276.5    .402   11.183
                 18      198      200.8    .040   11.223
                 19      147      146.0    .007   11.230
                 20       94      106.2   1.405   12.635
                 21      281      287.1    .130   12.765
            SUMMARY  FOR cjp_10mb.txt   
                p-value for no. of wins: .663141
                p-value for throws/game: .112772

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file cjp10.txt      
