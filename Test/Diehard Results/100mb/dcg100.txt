       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. NextUInt32, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for dcg_100mb.txt  
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  1 to 24   2.018
  duplicate       number       number 
  spacings       observed     expected
        0          60.       67.668
        1         142.      135.335
        2         138.      135.335
        3          84.       90.224
        4          50.       45.112
        5          17.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     2.33 p-value=  .113146
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  2 to 25   1.944
  duplicate       number       number 
  spacings       observed     expected
        0          64.       67.668
        1         171.      135.335
        2         117.      135.335
        3          72.       90.224
        4          43.       45.112
        5          22.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =    17.62 p-value=  .992746
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  3 to 26   1.930
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         141.      135.335
        2         141.      135.335
        3          81.       90.224
        4          46.       45.112
        5          17.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     2.82 p-value=  .169144
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  4 to 27   2.000
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         128.      135.335
        2         150.      135.335
        3          85.       90.224
        4          38.       45.112
        5          19.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     3.90 p-value=  .309472
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  5 to 28   2.010
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         132.      135.335
        2         131.      135.335
        3         101.       90.224
        4          40.       45.112
        5          16.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =     3.24 p-value=  .221503
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  6 to 29   1.988
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         140.      135.335
        2         140.      135.335
        3          92.       90.224
        4          43.       45.112
        5          14.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     1.69 p-value=  .054384
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  7 to 30   1.984
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         153.      135.335
        2         121.      135.335
        3          92.       90.224
        4          46.       45.112
        5          17.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     4.27 p-value=  .359630
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  8 to 31   1.960
  duplicate       number       number 
  spacings       observed     expected
        0          74.       67.668
        1         124.      135.335
        2         145.      135.335
        3          94.       90.224
        4          43.       45.112
        5          10.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     6.43 p-value=  .623433
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           dcg_100mb.txt   using bits  9 to 32   1.976
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         130.      135.335
        2         136.      135.335
        3         104.       90.224
        4          43.       45.112
        5          13.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     4.46 p-value=  .384874
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .113146   .992746   .169144   .309472   .221503
        .054384   .359630   .623433   .384874
  A KSTEST for the 9 p-values yields  .835605

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file dcg_100mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 95.275; p-value= .412644
           OPERM5 test for file dcg_100mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 78.054; p-value= .059314
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for dcg_100mb.txt  
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       195     211.4  1.274968    1.275
        29      5096    5134.0   .281413    1.556
        30     23161   23103.0   .145373    1.702
        31     11548   11551.5   .001075    1.703
  chisquare= 1.703 for 3 d. of f.; p-value= .459655
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for dcg_100mb.txt  
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       223     211.4   .634489     .634
        30      5147    5134.0   .032866     .667
        31     22969   23103.0   .777757    1.445
        32     11661   11551.5  1.037517    2.483
  chisquare= 2.483 for 3 d. of f.; p-value= .579117
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for dcg_100mb.txt  
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          957       944.3        .171        .171
          r =5        21939     21743.9       1.751       1.921
          r =6        77104     77311.8        .559       2.480
                        p=1-exp(-SUM/2)= .71060
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1020       944.3       6.068       6.068
          r =5        21831     21743.9        .349       6.417
          r =6        77149     77311.8        .343       6.760
                        p=1-exp(-SUM/2)= .96595
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          905       944.3       1.636       1.636
          r =5        21846     21743.9        .479       2.115
          r =6        77249     77311.8        .051       2.166
                        p=1-exp(-SUM/2)= .66144
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          993       944.3       2.511       2.511
          r =5        21750     21743.9        .002       2.513
          r =6        77257     77311.8        .039       2.552
                        p=1-exp(-SUM/2)= .72085
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          923       944.3        .481        .481
          r =5        21707     21743.9        .063        .543
          r =6        77370     77311.8        .044        .587
                        p=1-exp(-SUM/2)= .25433
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          932       944.3        .160        .160
          r =5        21767     21743.9        .025        .185
          r =6        77301     77311.8        .002        .186
                        p=1-exp(-SUM/2)= .08894
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          924       944.3        .436        .436
          r =5        21659     21743.9        .331        .768
          r =6        77417     77311.8        .143        .911
                        p=1-exp(-SUM/2)= .36590
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          987       944.3       1.931       1.931
          r =5        21709     21743.9        .056       1.987
          r =6        77304     77311.8        .001       1.988
                        p=1-exp(-SUM/2)= .62982
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          995       944.3       2.722       2.722
          r =5        21713     21743.9        .044       2.766
          r =6        77292     77311.8        .005       2.771
                        p=1-exp(-SUM/2)= .74980
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        22003     21743.9       3.087       3.160
          r =6        77061     77311.8        .814       3.974
                        p=1-exp(-SUM/2)= .86290
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          930       944.3        .217        .217
          r =5        21743     21743.9        .000        .217
          r =6        77327     77311.8        .003        .220
                        p=1-exp(-SUM/2)= .10399
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          869       944.3       6.005       6.005
          r =5        21624     21743.9        .661       6.666
          r =6        77507     77311.8        .493       7.159
                        p=1-exp(-SUM/2)= .97211
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21475     21743.9       3.325       3.382
          r =6        77588     77311.8        .987       4.369
                        p=1-exp(-SUM/2)= .88744
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21859     21743.9        .609        .964
          r =6        77215     77311.8        .121       1.085
                        p=1-exp(-SUM/2)= .41876
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          965       944.3        .454        .454
          r =5        21551     21743.9       1.711       2.165
          r =6        77484     77311.8        .384       2.549
                        p=1-exp(-SUM/2)= .72037
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          946       944.3        .003        .003
          r =5        21790     21743.9        .098        .101
          r =6        77264     77311.8        .030        .130
                        p=1-exp(-SUM/2)= .06310
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          940       944.3        .020        .020
          r =5        21668     21743.9        .265        .285
          r =6        77392     77311.8        .083        .368
                        p=1-exp(-SUM/2)= .16795
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          902       944.3       1.895       1.895
          r =5        21602     21743.9        .926       2.821
          r =6        77496     77311.8        .439       3.260
                        p=1-exp(-SUM/2)= .80405
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          915       944.3        .909        .909
          r =5        21746     21743.9        .000        .909
          r =6        77339     77311.8        .010        .919
                        p=1-exp(-SUM/2)= .36839
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          983       944.3       1.586       1.586
          r =5        21682     21743.9        .176       1.762
          r =6        77335     77311.8        .007       1.769
                        p=1-exp(-SUM/2)= .58710
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          975       944.3        .998        .998
          r =5        21625     21743.9        .650       1.648
          r =6        77400     77311.8        .101       1.749
                        p=1-exp(-SUM/2)= .58288
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21760     21743.9        .012        .539
          r =6        77318     77311.8        .000        .539
                        p=1-exp(-SUM/2)= .23628
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          919       944.3        .678        .678
          r =5        21690     21743.9        .134        .812
          r =6        77391     77311.8        .081        .893
                        p=1-exp(-SUM/2)= .36002
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21719     21743.9        .029        .227
          r =6        77323     77311.8        .002        .229
                        p=1-exp(-SUM/2)= .10813
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG dcg_100mb.txt  
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21867     21743.9        .697       1.052
          r =6        77207     77311.8        .142       1.194
                        p=1-exp(-SUM/2)= .44945
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .710598     .965953     .661444     .720850     .254327
     .088942     .365896     .629819     .749796     .862896
     .103993     .972106     .887442     .418758     .720366
     .063097     .167948     .804054     .368393     .587101
     .582884     .236277     .360024     .108126     .449450
   brank test summary for dcg_100mb.txt  
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .016685

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  142612 missing words,    1.64 sigmas from mean, p-value= .94968
 tst no  2:  142633 missing words,    1.69 sigmas from mean, p-value= .95456
 tst no  3:  141660 missing words,    -.58 sigmas from mean, p-value= .28010
 tst no  4:  141732 missing words,    -.41 sigmas from mean, p-value= .33932
 tst no  5:  141940 missing words,     .07 sigmas from mean, p-value= .52857
 tst no  6:  141764 missing words,    -.34 sigmas from mean, p-value= .36710
 tst no  7:  141886 missing words,    -.05 sigmas from mean, p-value= .47827
 tst no  8:  142534 missing words,    1.46 sigmas from mean, p-value= .92779
 tst no  9:  141535 missing words,    -.87 sigmas from mean, p-value= .19090
 tst no 10:  142006 missing words,     .23 sigmas from mean, p-value= .58935
 tst no 11:  142261 missing words,     .82 sigmas from mean, p-value= .79437
 tst no 12:  142041 missing words,     .31 sigmas from mean, p-value= .62082
 tst no 13:  141623 missing words,    -.67 sigmas from mean, p-value= .25175
 tst no 14:  141859 missing words,    -.12 sigmas from mean, p-value= .45320
 tst no 15:  142258 missing words,     .81 sigmas from mean, p-value= .79236
 tst no 16:  142161 missing words,     .59 sigmas from mean, p-value= .72174
 tst no 17:  142075 missing words,     .39 sigmas from mean, p-value= .65065
 tst no 18:  141744 missing words,    -.39 sigmas from mean, p-value= .34964
 tst no 19:  141668 missing words,    -.56 sigmas from mean, p-value= .28643
 tst no 20:  141866 missing words,    -.10 sigmas from mean, p-value= .45968

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator dcg_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for dcg_100mb.txt   using bits 23 to 32        142107   .682  .7523
    OPSO for dcg_100mb.txt   using bits 22 to 31        141999   .309  .6214
    OPSO for dcg_100mb.txt   using bits 21 to 30        141873  -.125  .4502
    OPSO for dcg_100mb.txt   using bits 20 to 29        142101   .661  .7457
    OPSO for dcg_100mb.txt   using bits 19 to 28        141725  -.636  .2625
    OPSO for dcg_100mb.txt   using bits 18 to 27        141770  -.480  .3155
    OPSO for dcg_100mb.txt   using bits 17 to 26        141550 -1.239  .1077
    OPSO for dcg_100mb.txt   using bits 16 to 25        142072   .561  .7126
    OPSO for dcg_100mb.txt   using bits 15 to 24        141967   .199  .5788
    OPSO for dcg_100mb.txt   using bits 14 to 23        141741  -.580  .2808
    OPSO for dcg_100mb.txt   using bits 13 to 22        142042   .457  .6763
    OPSO for dcg_100mb.txt   using bits 12 to 21        141936   .092  .5366
    OPSO for dcg_100mb.txt   using bits 11 to 20        141952   .147  .5585
    OPSO for dcg_100mb.txt   using bits 10 to 19        141840  -.239  .4055
    OPSO for dcg_100mb.txt   using bits  9 to 18        141560 -1.205  .1142
    OPSO for dcg_100mb.txt   using bits  8 to 17        142487  1.992  .9768
    OPSO for dcg_100mb.txt   using bits  7 to 16        142087   .613  .7299
    OPSO for dcg_100mb.txt   using bits  6 to 15        142306  1.368  .9143
    OPSO for dcg_100mb.txt   using bits  5 to 14        142389  1.654  .9509
    OPSO for dcg_100mb.txt   using bits  4 to 13        142259  1.206  .8860
    OPSO for dcg_100mb.txt   using bits  3 to 12        141849  -.208  .4176
    OPSO for dcg_100mb.txt   using bits  2 to 11        142201  1.006  .8427
    OPSO for dcg_100mb.txt   using bits  1 to 10        141982   .251  .5989
 OQSO test for generator dcg_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for dcg_100mb.txt   using bits 28 to 32        142109   .677  .7508
    OQSO for dcg_100mb.txt   using bits 27 to 31        141699  -.713  .2379
    OQSO for dcg_100mb.txt   using bits 26 to 30        141891  -.062  .4752
    OQSO for dcg_100mb.txt   using bits 25 to 29        142151   .819  .7937
    OQSO for dcg_100mb.txt   using bits 24 to 28        141641  -.910  .1815
    OQSO for dcg_100mb.txt   using bits 23 to 27        142242  1.128  .8703
    OQSO for dcg_100mb.txt   using bits 22 to 26        142000   .307  .6207
    OQSO for dcg_100mb.txt   using bits 21 to 25        141443 -1.581  .0570
    OQSO for dcg_100mb.txt   using bits 20 to 24        141830  -.269  .3940
    OQSO for dcg_100mb.txt   using bits 19 to 23        141668  -.818  .2067
    OQSO for dcg_100mb.txt   using bits 18 to 22        142091   .616  .7310
    OQSO for dcg_100mb.txt   using bits 17 to 21        141846  -.215  .4150
    OQSO for dcg_100mb.txt   using bits 16 to 20        141925   .053  .5212
    OQSO for dcg_100mb.txt   using bits 15 to 19        141959   .168  .5669
    OQSO for dcg_100mb.txt   using bits 14 to 18        141503 -1.377  .0842
    OQSO for dcg_100mb.txt   using bits 13 to 17        141720  -.642  .2605
    OQSO for dcg_100mb.txt   using bits 12 to 16        141396 -1.740  .0409
    OQSO for dcg_100mb.txt   using bits 11 to 15        141993   .284  .6117
    OQSO for dcg_100mb.txt   using bits 10 to 14        141786  -.418  .3380
    OQSO for dcg_100mb.txt   using bits  9 to 13        141885  -.082  .4671
    OQSO for dcg_100mb.txt   using bits  8 to 12        141648  -.886  .1878
    OQSO for dcg_100mb.txt   using bits  7 to 11        142072   .551  .7093
    OQSO for dcg_100mb.txt   using bits  6 to 10        141558 -1.191  .1168
    OQSO for dcg_100mb.txt   using bits  5 to  9        141931   .073  .5293
    OQSO for dcg_100mb.txt   using bits  4 to  8        142143   .792  .7859
    OQSO for dcg_100mb.txt   using bits  3 to  7        142206  1.006  .8427
    OQSO for dcg_100mb.txt   using bits  2 to  6        141913   .012  .5050
    OQSO for dcg_100mb.txt   using bits  1 to  5        141514 -1.340  .0901
  DNA test for generator dcg_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for dcg_100mb.txt   using bits 31 to 32        142092   .539  .7050
     DNA for dcg_100mb.txt   using bits 30 to 31        142378  1.383  .9166
     DNA for dcg_100mb.txt   using bits 29 to 30        141646  -.777  .2186
     DNA for dcg_100mb.txt   using bits 28 to 29        141653  -.756  .2248
     DNA for dcg_100mb.txt   using bits 27 to 28        142269  1.061  .8557
     DNA for dcg_100mb.txt   using bits 26 to 27        142357  1.321  .9067
     DNA for dcg_100mb.txt   using bits 25 to 26        141813  -.284  .3881
     DNA for dcg_100mb.txt   using bits 24 to 25        141636  -.806  .2100
     DNA for dcg_100mb.txt   using bits 23 to 24        141658  -.741  .2292
     DNA for dcg_100mb.txt   using bits 22 to 23        142165   .754  .7746
     DNA for dcg_100mb.txt   using bits 21 to 22        141973   .188  .5745
     DNA for dcg_100mb.txt   using bits 20 to 21        142037   .377  .6468
     DNA for dcg_100mb.txt   using bits 19 to 20        142126   .639  .7386
     DNA for dcg_100mb.txt   using bits 18 to 19        142048   .409  .6588
     DNA for dcg_100mb.txt   using bits 17 to 18        141635  -.809  .2092
     DNA for dcg_100mb.txt   using bits 16 to 17        141818  -.269  .3938
     DNA for dcg_100mb.txt   using bits 15 to 16        142085   .518  .6978
     DNA for dcg_100mb.txt   using bits 14 to 15        141829  -.237  .4063
     DNA for dcg_100mb.txt   using bits 13 to 14        141746  -.482  .3150
     DNA for dcg_100mb.txt   using bits 12 to 13        141792  -.346  .3646
     DNA for dcg_100mb.txt   using bits 11 to 12        142133   .660  .7453
     DNA for dcg_100mb.txt   using bits 10 to 11        142171   .772  .7799
     DNA for dcg_100mb.txt   using bits  9 to 10        141874  -.104  .4585
     DNA for dcg_100mb.txt   using bits  8 to  9        142306  1.170  .8790
     DNA for dcg_100mb.txt   using bits  7 to  8        142270  1.064  .8563
     DNA for dcg_100mb.txt   using bits  6 to  7        141559 -1.033  .1507
     DNA for dcg_100mb.txt   using bits  5 to  6        141280 -1.856  .0317
     DNA for dcg_100mb.txt   using bits  4 to  5        142047   .406  .6577
     DNA for dcg_100mb.txt   using bits  3 to  4        141729  -.532  .2974
     DNA for dcg_100mb.txt   using bits  2 to  3        141437 -1.393  .0818
     DNA for dcg_100mb.txt   using bits  1 to  2        142630  2.126  .9832

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for dcg_100mb.txt  
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for dcg_100mb.txt    2430.52      -.983      .162897
 byte stream for dcg_100mb.txt    2461.72      -.541      .294122

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2465.45      -.489      .312549
           bits  2 to  9  2613.07      1.599      .945092
           bits  3 to 10  2466.20      -.478      .316327
           bits  4 to 11  2523.81       .337      .631813
           bits  5 to 12  2491.01      -.127      .449395
           bits  6 to 13  2466.73      -.471      .318989
           bits  7 to 14  2595.66      1.353      .911951
           bits  8 to 15  2427.39     -1.027      .152245
           bits  9 to 16  2578.39      1.109      .866195
           bits 10 to 17  2451.72      -.683      .247391
           bits 11 to 18  2549.68       .703      .758851
           bits 12 to 19  2458.42      -.588      .278268
           bits 13 to 20  2599.82      1.412      .920977
           bits 14 to 21  2524.00       .339      .632866
           bits 15 to 22  2373.03     -1.796      .036274
           bits 16 to 23  2436.70      -.895      .185332
           bits 17 to 24  2529.18       .413      .660100
           bits 18 to 25  2468.99      -.439      .330476
           bits 19 to 26  2554.68       .773      .780327
           bits 20 to 27  2477.49      -.318      .375135
           bits 21 to 28  2612.45      1.590      .944114
           bits 22 to 29  2480.49      -.276      .391293
           bits 23 to 30  2574.87      1.059      .855152
           bits 24 to 31  2447.60      -.741      .229349
           bits 25 to 32  2529.93       .423      .663953

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file dcg_100mb.txt  
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3512    z-score:  -.502 p-value: .307734
            Successes: 3551    z-score:  1.279 p-value: .899470
            Successes: 3514    z-score:  -.411 p-value: .340551
            Successes: 3539    z-score:   .731 p-value: .767486
            Successes: 3540    z-score:   .776 p-value: .781201
            Successes: 3547    z-score:  1.096 p-value: .863437
            Successes: 3503    z-score:  -.913 p-value: .180558
            Successes: 3531    z-score:   .365 p-value: .642555
            Successes: 3529    z-score:   .274 p-value: .607947
            Successes: 3539    z-score:   .731 p-value: .767486
 
           square size   avg. no.  parked   sample sigma
             100.            3530.500       15.158
            KSTEST for the above 10: p=  .718498

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file dcg_100mb.txt  
     Sample no.    d^2     avg     equiv uni            
           5    1.1785    .4790     .694089
          10    2.1090    .7944     .879915
          15    1.1720    .7244     .692076
          20    1.5946    .7363     .798630
          25     .3066    .7534     .265192
          30    1.0606    .6915     .655591
          35     .6715    .8293     .490794
          40    2.2325    .9457     .893933
          45     .3923    .9076     .325860
          50     .6767    .9257     .493437
          55     .7715    .9356     .539482
          60     .5574   1.0278     .428924
          65     .3331    .9981     .284467
          70     .7314   1.0180     .520541
          75    2.0700   1.0192     .875118
          80     .2708    .9876     .238292
          85    1.2558   1.0214     .716934
          90    4.1356   1.0322     .984336
          95     .0717   1.0179     .069516
         100     .0601   1.0206     .058597
     MINIMUM DISTANCE TEST for dcg_100mb.txt  
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .044527

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file dcg_100mb.txt  
 sample no:  1     r^3=  11.417     p-value= .31653
 sample no:  2     r^3=  16.120     p-value= .41569
 sample no:  3     r^3=  18.892     p-value= .46727
 sample no:  4     r^3=  16.946     p-value= .43156
 sample no:  5     r^3=    .829     p-value= .02724
 sample no:  6     r^3=  47.944     p-value= .79773
 sample no:  7     r^3=  22.134     p-value= .52184
 sample no:  8     r^3=  15.726     p-value= .40796
 sample no:  9     r^3=   8.245     p-value= .24030
 sample no: 10     r^3=  20.374     p-value= .49295
 sample no: 11     r^3=  17.466     p-value= .44132
 sample no: 12     r^3=   9.579     p-value= .27334
 sample no: 13     r^3=  35.302     p-value= .69171
 sample no: 14     r^3=   1.283     p-value= .04185
 sample no: 15     r^3=  13.279     p-value= .35766
 sample no: 16     r^3=   4.240     p-value= .13180
 sample no: 17     r^3=  79.785     p-value= .93002
 sample no: 18     r^3=  31.337     p-value= .64816
 sample no: 19     r^3=  41.512     p-value= .74935
 sample no: 20     r^3=  13.611     p-value= .36473
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file dcg_100mb.txt        p-value= .682022
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR dcg_100mb.txt  
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.8      .1     1.8     -.1     -.7     1.1
      .8     1.1     1.3      .7     -.5    -1.7
     -.2     -.8      .8     -.8      .1      .2
     1.4     -.8     1.5     -.4    -1.1      .8
      .5     -.5     -.8      .4     -.2      .4
     -.5    -1.0    -1.1    -1.4    -1.0     -.5
      .7     -.7     1.3     1.0     2.4     1.0
     -.1
           Chi-square with 42 degrees of freedom: 39.460
              z-score=  -.277  p-value= .416752
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .124969
                Test no.  2      p-value  .850052
                Test no.  3      p-value  .153023
                Test no.  4      p-value  .365431
                Test no.  5      p-value  .950305
                Test no.  6      p-value  .217128
                Test no.  7      p-value  .825714
                Test no.  8      p-value  .371495
                Test no.  9      p-value  .808156
                Test no. 10      p-value  .858651
   Results of the OSUM test for dcg_100mb.txt  
        KSTEST on the above 10 p-values:  .491992

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file dcg_100mb.txt  
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for dcg_100mb.txt  :
       runs up; ks test for 10 p's: .399819
     runs down; ks test for 10 p's: .905373
                 Run test for dcg_100mb.txt  :
       runs up; ks test for 10 p's: .748394
     runs down; ks test for 10 p's: .679852

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for dcg_100mb.txt  
  No. of wins:  Observed Expected
                                98356    98585.86
                  98356= No. of wins, z-score=-1.028 pvalue= .15196
   Analysis of Throws-per-Game:
 Chisq=  17.78 for 20 degrees of freedom, p=  .39834
               Throws Observed Expected  Chisq     Sum
                  1    66651    66666.7    .004     .004
                  2    37803    37654.3    .587     .591
                  3    26802    26954.7    .865    1.456
                  4    19468    19313.5   1.237    2.693
                  5    13921    13851.4    .350    3.042
                  6     9899     9943.5    .200    3.242
                  7     7059     7145.0   1.036    4.277
                  8     5087     5139.1    .528    4.805
                  9     3714     3699.9    .054    4.859
                 10     2670     2666.3    .005    4.864
                 11     1938     1923.3    .112    4.976
                 12     1343     1388.7   1.507    6.483
                 13      981     1003.7    .514    6.997
                 14      710      726.1    .359    7.355
                 15      582      525.8   5.999   13.354
                 16      353      381.2   2.079   15.433
                 17      281      276.5    .072   15.505
                 18      186      200.8   1.095   16.600
                 19      152      146.0    .248   16.848
                 20      116      106.2    .901   17.750
                 21      284      287.1    .034   17.784
            SUMMARY  FOR dcg_100mb.txt  
                p-value for no. of wins: .151960
                p-value for throws/game: .398337

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file dcg100.txt     
