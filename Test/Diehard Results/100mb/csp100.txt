       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. NextUInt32, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for csp_100mb.txt  
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  1 to 24   1.998
  duplicate       number       number 
  spacings       observed     expected
        0          66.       67.668
        1         135.      135.335
        2         133.      135.335
        3         103.       90.224
        4          41.       45.112
        5          12.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     4.65 p-value=  .410264
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  2 to 25   1.998
  duplicate       number       number 
  spacings       observed     expected
        0          74.       67.668
        1         130.      135.335
        2         138.      135.335
        3          77.       90.224
        4          54.       45.112
        5          17.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     4.96 p-value=  .451259
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  3 to 26   2.054
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         113.      135.335
        2         131.      135.335
        3         106.       90.224
        4          40.       45.112
        5          22.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     9.96 p-value=  .873825
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  4 to 27   1.992
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         126.      135.335
        2         141.      135.335
        3          95.       90.224
        4          45.       45.112
        5          16.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     1.64 p-value=  .050687
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  5 to 28   1.962
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         134.      135.335
        2         133.      135.335
        3         104.       90.224
        4          35.       45.112
        5          17.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     4.76 p-value=  .425430
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  6 to 29   1.974
  duplicate       number       number 
  spacings       observed     expected
        0          61.       67.668
        1         147.      135.335
        2         135.      135.335
        3          83.       90.224
        4          55.       45.112
        5          14.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     6.62 p-value=  .642187
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  7 to 30   2.026
  duplicate       number       number 
  spacings       observed     expected
        0          58.       67.668
        1         129.      135.335
        2         158.      135.335
        3          84.       90.224
        4          48.       45.112
        5          16.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     6.52 p-value=  .632247
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  8 to 31   1.984
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         123.      135.335
        2         149.      135.335
        3         106.       90.224
        4          34.       45.112
        5          12.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =    10.09 p-value=  .879229
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_100mb.txt   using bits  9 to 32   1.912
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         140.      135.335
        2         140.      135.335
        3          89.       90.224
        4          42.       45.112
        5           9.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     5.31 p-value=  .495629
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .410264   .451259   .873825   .050687   .425430
        .642187   .632247   .879229   .495629
  A KSTEST for the 9 p-values yields  .316004

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file csp_100mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 74.879; p-value= .033730
           OPERM5 test for file csp_100mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 92.501; p-value= .335422
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csp_100mb.txt  
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       194     211.4  1.435011    1.435
        29      5077    5134.0   .633066    2.068
        30     23190   23103.0   .327266    2.395
        31     11539   11551.5   .013579    2.409
  chisquare= 2.409 for 3 d. of f.; p-value= .568347
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csp_100mb.txt  
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       196     211.4  1.124385    1.124
        30      5100    5134.0   .225301    1.350
        31     23128   23103.0   .026951    1.377
        32     11576   11551.5   .051859    1.428
  chisquare= 1.428 for 3 d. of f.; p-value= .417137
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for csp_100mb.txt  
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21755     21743.9        .006        .062
          r =6        77308     77311.8        .000        .062
                        p=1-exp(-SUM/2)= .03067
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          921       944.3        .575        .575
          r =5        21796     21743.9        .125        .700
          r =6        77283     77311.8        .011        .711
                        p=1-exp(-SUM/2)= .29902
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          896       944.3       2.471       2.471
          r =5        21914     21743.9       1.331       3.801
          r =6        77190     77311.8        .192       3.993
                        p=1-exp(-SUM/2)= .86420
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          918       944.3        .733        .733
          r =5        21705     21743.9        .070        .802
          r =6        77377     77311.8        .055        .857
                        p=1-exp(-SUM/2)= .34856
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          933       944.3        .135        .135
          r =5        21597     21743.9        .992       1.128
          r =6        77470     77311.8        .324       1.451
                        p=1-exp(-SUM/2)= .51601
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          904       944.3       1.720       1.720
          r =5        21619     21743.9        .717       2.437
          r =6        77477     77311.8        .353       2.790
                        p=1-exp(-SUM/2)= .75222
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          977       944.3       1.132       1.132
          r =5        21842     21743.9        .443       1.575
          r =6        77181     77311.8        .221       1.796
                        p=1-exp(-SUM/2)= .59265
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21678     21743.9        .200        .280
          r =6        77369     77311.8        .042        .322
                        p=1-exp(-SUM/2)= .14878
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21687     21743.9        .149        .294
          r =6        77357     77311.8        .026        .320
                        p=1-exp(-SUM/2)= .14796
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21850     21743.9        .518        .547
          r =6        77211     77311.8        .131        .679
                        p=1-exp(-SUM/2)= .28784
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          952       944.3        .063        .063
          r =5        21861     21743.9        .631        .693
          r =6        77187     77311.8        .201        .895
                        p=1-exp(-SUM/2)= .36073
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          902       944.3       1.895       1.895
          r =5        21891     21743.9        .995       2.890
          r =6        77207     77311.8        .142       3.032
                        p=1-exp(-SUM/2)= .78043
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          882       944.3       4.110       4.110
          r =5        21849     21743.9        .508       4.618
          r =6        77269     77311.8        .024       4.642
                        p=1-exp(-SUM/2)= .90183
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          960       944.3        .261        .261
          r =5        21884     21743.9        .903       1.164
          r =6        77156     77311.8        .314       1.478
                        p=1-exp(-SUM/2)= .52233
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          962       944.3        .332        .332
          r =5        21863     21743.9        .652        .984
          r =6        77175     77311.8        .242       1.226
                        p=1-exp(-SUM/2)= .45832
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21846     21743.9        .479        .775
          r =6        77193     77311.8        .183        .957
                        p=1-exp(-SUM/2)= .38037
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          946       944.3        .003        .003
          r =5        21749     21743.9        .001        .004
          r =6        77305     77311.8        .001        .005
                        p=1-exp(-SUM/2)= .00242
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          934       944.3        .112        .112
          r =5        21800     21743.9        .145        .257
          r =6        77266     77311.8        .027        .284
                        p=1-exp(-SUM/2)= .13249
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21821     21743.9        .273        .354
          r =6        77226     77311.8        .095        .449
                        p=1-exp(-SUM/2)= .20098
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          979       944.3       1.275       1.275
          r =5        21602     21743.9        .926       2.201
          r =6        77419     77311.8        .149       2.350
                        p=1-exp(-SUM/2)= .69113
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1001       944.3       3.404       3.404
          r =5        21642     21743.9        .478       3.882
          r =6        77357     77311.8        .026       3.908
                        p=1-exp(-SUM/2)= .85832
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          933       944.3        .135        .135
          r =5        21723     21743.9        .020        .155
          r =6        77344     77311.8        .013        .169
                        p=1-exp(-SUM/2)= .08091
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          914       944.3        .972        .972
          r =5        21781     21743.9        .063       1.036
          r =6        77305     77311.8        .001       1.036
                        p=1-exp(-SUM/2)= .40436
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21698     21743.9        .097        .284
          r =6        77371     77311.8        .045        .330
                        p=1-exp(-SUM/2)= .15193
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_100mb.txt  
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          985       944.3       1.754       1.754
          r =5        21655     21743.9        .363       2.118
          r =6        77360     77311.8        .030       2.148
                        p=1-exp(-SUM/2)= .65829
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .030673     .299016     .864203     .348557     .516015
     .752219     .592651     .148781     .147964     .287842
     .360733     .780429     .901829     .522328     .458318
     .380373     .002422     .132488     .200981     .691133
     .858317     .080913     .404356     .151927     .658293
   brank test summary for csp_100mb.txt  
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .679119

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141924 missing words,     .03 sigmas from mean, p-value= .51367
 tst no  2:  142031 missing words,     .28 sigmas from mean, p-value= .61190
 tst no  3:  141901 missing words,    -.02 sigmas from mean, p-value= .49224
 tst no  4:  141720 missing words,    -.44 sigmas from mean, p-value= .32912
 tst no  5:  142167 missing words,     .60 sigmas from mean, p-value= .72643
 tst no  6:  141109 missing words,   -1.87 sigmas from mean, p-value= .03075
 tst no  7:  141611 missing words,    -.70 sigmas from mean, p-value= .24289
 tst no  8:  141372 missing words,   -1.26 sigmas from mean, p-value= .10466
 tst no  9:  142000 missing words,     .21 sigmas from mean, p-value= .58389
 tst no 10:  141776 missing words,    -.31 sigmas from mean, p-value= .37770
 tst no 11:  142156 missing words,     .58 sigmas from mean, p-value= .71781
 tst no 12:  142356 missing words,    1.04 sigmas from mean, p-value= .85167
 tst no 13:  141493 missing words,    -.97 sigmas from mean, p-value= .16534
 tst no 14:  142236 missing words,     .76 sigmas from mean, p-value= .77734
 tst no 15:  141367 missing words,   -1.27 sigmas from mean, p-value= .10256
 tst no 16:  141425 missing words,   -1.13 sigmas from mean, p-value= .12890
 tst no 17:  142310 missing words,     .94 sigmas from mean, p-value= .82540
 tst no 18:  141411 missing words,   -1.16 sigmas from mean, p-value= .12215
 tst no 19:  141649 missing words,    -.61 sigmas from mean, p-value= .27151
 tst no 20:  141525 missing words,    -.90 sigmas from mean, p-value= .18460

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator csp_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for csp_100mb.txt   using bits 23 to 32        142510  2.071  .9808
    OPSO for csp_100mb.txt   using bits 22 to 31        142377  1.613  .9466
    OPSO for csp_100mb.txt   using bits 21 to 30        141779  -.449  .3266
    OPSO for csp_100mb.txt   using bits 20 to 29        142145   .813  .7918
    OPSO for csp_100mb.txt   using bits 19 to 28        141870  -.136  .4461
    OPSO for csp_100mb.txt   using bits 18 to 27        141644  -.915  .1801
    OPSO for csp_100mb.txt   using bits 17 to 26        141837  -.249  .4015
    OPSO for csp_100mb.txt   using bits 16 to 25        142234  1.120  .8685
    OPSO for csp_100mb.txt   using bits 15 to 24        141885  -.084  .4666
    OPSO for csp_100mb.txt   using bits 14 to 23        141922   .044  .5174
    OPSO for csp_100mb.txt   using bits 13 to 22        141566 -1.184  .1182
    OPSO for csp_100mb.txt   using bits 12 to 21        141632  -.956  .1695
    OPSO for csp_100mb.txt   using bits 11 to 20        141841  -.236  .4069
    OPSO for csp_100mb.txt   using bits 10 to 19        141803  -.367  .3569
    OPSO for csp_100mb.txt   using bits  9 to 18        142115   .709  .7609
    OPSO for csp_100mb.txt   using bits  8 to 17        141599 -1.070  .1423
    OPSO for csp_100mb.txt   using bits  7 to 16        142171   .902  .8166
    OPSO for csp_100mb.txt   using bits  6 to 15        142353  1.530  .9370
    OPSO for csp_100mb.txt   using bits  5 to 14        141916   .023  .5092
    OPSO for csp_100mb.txt   using bits  4 to 13        142167   .889  .8129
    OPSO for csp_100mb.txt   using bits  3 to 12        142102   .664  .7468
    OPSO for csp_100mb.txt   using bits  2 to 11        141552 -1.232  .1089
    OPSO for csp_100mb.txt   using bits  1 to 10        141833  -.263  .3962
 OQSO test for generator csp_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for csp_100mb.txt   using bits 28 to 32        142093   .623  .7332
    OQSO for csp_100mb.txt   using bits 27 to 31        142046   .463  .6784
    OQSO for csp_100mb.txt   using bits 26 to 30        141763  -.496  .3099
    OQSO for csp_100mb.txt   using bits 25 to 29        142076   .565  .7140
    OQSO for csp_100mb.txt   using bits 24 to 28        141736  -.588  .2784
    OQSO for csp_100mb.txt   using bits 23 to 27        141537 -1.262  .1035
    OQSO for csp_100mb.txt   using bits 22 to 26        142035   .426  .6649
    OQSO for csp_100mb.txt   using bits 21 to 25        141816  -.316  .3759
    OQSO for csp_100mb.txt   using bits 20 to 24        141761  -.503  .3075
    OQSO for csp_100mb.txt   using bits 19 to 23        141613 -1.005  .1576
    OQSO for csp_100mb.txt   using bits 18 to 22        142046   .463  .6784
    OQSO for csp_100mb.txt   using bits 17 to 21        141685  -.760  .2235
    OQSO for csp_100mb.txt   using bits 16 to 20        142022   .382  .6487
    OQSO for csp_100mb.txt   using bits 15 to 19        141836  -.249  .4018
    OQSO for csp_100mb.txt   using bits 14 to 18        142019   .372  .6450
    OQSO for csp_100mb.txt   using bits 13 to 17        141662  -.838  .2009
    OQSO for csp_100mb.txt   using bits 12 to 16        142198   .979  .8361
    OQSO for csp_100mb.txt   using bits 11 to 15        141760  -.506  .3064
    OQSO for csp_100mb.txt   using bits 10 to 14        141661  -.842  .2000
    OQSO for csp_100mb.txt   using bits  9 to 13        142097   .636  .7377
    OQSO for csp_100mb.txt   using bits  8 to 12        141985   .257  .6012
    OQSO for csp_100mb.txt   using bits  7 to 11        141887  -.076  .4698
    OQSO for csp_100mb.txt   using bits  6 to 10        141459 -1.527  .0634
    OQSO for csp_100mb.txt   using bits  5 to  9        142264  1.202  .8854
    OQSO for csp_100mb.txt   using bits  4 to  8        142226  1.073  .8585
    OQSO for csp_100mb.txt   using bits  3 to  7        141811  -.333  .3694
    OQSO for csp_100mb.txt   using bits  2 to  6        142048   .470  .6808
    OQSO for csp_100mb.txt   using bits  1 to  5        141488 -1.428  .0766
  DNA test for generator csp_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for csp_100mb.txt   using bits 31 to 32        141332 -1.703  .0443
     DNA for csp_100mb.txt   using bits 30 to 31        141913   .011  .5043
     DNA for csp_100mb.txt   using bits 29 to 30        142027   .347  .6357
     DNA for csp_100mb.txt   using bits 28 to 29        141454 -1.343  .0896
     DNA for csp_100mb.txt   using bits 27 to 28        141795  -.337  .3680
     DNA for csp_100mb.txt   using bits 26 to 27        142026   .344  .6346
     DNA for csp_100mb.txt   using bits 25 to 26        141552 -1.054  .1459
     DNA for csp_100mb.txt   using bits 24 to 25        142101   .565  .7141
     DNA for csp_100mb.txt   using bits 23 to 24        141949   .117  .5466
     DNA for csp_100mb.txt   using bits 22 to 23        142384  1.400  .9193
     DNA for csp_100mb.txt   using bits 21 to 22        141365 -1.606  .0542
     DNA for csp_100mb.txt   using bits 20 to 21        142058   .439  .6695
     DNA for csp_100mb.txt   using bits 19 to 20        141450 -1.355  .0877
     DNA for csp_100mb.txt   using bits 18 to 19        141439 -1.387  .0827
     DNA for csp_100mb.txt   using bits 17 to 18        141251 -1.942  .0261
     DNA for csp_100mb.txt   using bits 16 to 17        141382 -1.556  .0599
     DNA for csp_100mb.txt   using bits 15 to 16        141762  -.435  .3319
     DNA for csp_100mb.txt   using bits 14 to 15        141726  -.541  .2943
     DNA for csp_100mb.txt   using bits 13 to 14        141321 -1.735  .0413
     DNA for csp_100mb.txt   using bits 12 to 13        141591  -.939  .1739
     DNA for csp_100mb.txt   using bits 11 to 12        142103   .571  .7161
     DNA for csp_100mb.txt   using bits 10 to 11        141947   .111  .5442
     DNA for csp_100mb.txt   using bits  9 to 10        141869  -.119  .4527
     DNA for csp_100mb.txt   using bits  8 to  9        142006   .285  .6122
     DNA for csp_100mb.txt   using bits  7 to  8        142242   .981  .8368
     DNA for csp_100mb.txt   using bits  6 to  7        141167 -2.190  .0143
     DNA for csp_100mb.txt   using bits  5 to  6        141615  -.868  .1926
     DNA for csp_100mb.txt   using bits  4 to  5        142265  1.049  .8530
     DNA for csp_100mb.txt   using bits  3 to  4        142022   .332  .6302
     DNA for csp_100mb.txt   using bits  2 to  3        142145   .695  .7565
     DNA for csp_100mb.txt   using bits  1 to  2        142296  1.141  .8730

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for csp_100mb.txt  
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for csp_100mb.txt    2470.71      -.414      .339377
 byte stream for csp_100mb.txt    2639.99      1.980      .976135

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2597.72      1.382      .916509
           bits  2 to  9  2355.23     -2.047      .020313
           bits  3 to 10  2498.71      -.018      .492737
           bits  4 to 11  2470.45      -.418      .337986
           bits  5 to 12  2564.25       .909      .818236
           bits  6 to 13  2572.18      1.021      .846315
           bits  7 to 14  2549.19       .696      .756691
           bits  8 to 15  2511.11       .157      .562453
           bits  9 to 16  2606.83      1.511      .934588
           bits 10 to 17  2557.87       .818      .793434
           bits 11 to 18  2552.14       .737      .769561
           bits 12 to 19  2582.27      1.163      .877679
           bits 13 to 20  2584.50      1.195      .883971
           bits 14 to 21  2485.51      -.205      .418836
           bits 15 to 22  2566.23       .937      .825528
           bits 16 to 23  2473.20      -.379      .352340
           bits 17 to 24  2609.84      1.553      .939825
           bits 18 to 25  2526.12       .369      .644069
           bits 19 to 26  2465.67      -.485      .313663
           bits 20 to 27  2423.87     -1.077      .140810
           bits 21 to 28  2461.04      -.551      .290812
           bits 22 to 29  2638.04      1.952      .974539
           bits 23 to 30  2502.71       .038      .515290
           bits 24 to 31  2481.60      -.260      .397357
           bits 25 to 32  2477.22      -.322      .373658

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file csp_100mb.txt  
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3535    z-score:   .548 p-value: .708135
            Successes: 3488    z-score: -1.598 p-value: .055002
            Successes: 3513    z-score:  -.457 p-value: .323972
            Successes: 3549    z-score:  1.187 p-value: .882429
            Successes: 3499    z-score: -1.096 p-value: .136563
            Successes: 3490    z-score: -1.507 p-value: .065925
            Successes: 3535    z-score:   .548 p-value: .708135
            Successes: 3519    z-score:  -.183 p-value: .427537
            Successes: 3534    z-score:   .502 p-value: .692266
            Successes: 3516    z-score:  -.320 p-value: .374623
 
           square size   avg. no.  parked   sample sigma
             100.            3517.800       19.636
            KSTEST for the above 10: p=  .277573

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file csp_100mb.txt  
     Sample no.    d^2     avg     equiv uni            
           5     .1315    .6108     .123842
          10     .2447   1.0995     .217996
          15    1.2688    .8988     .720622
          20    1.0909    .8082     .665937
          25     .0022    .8984     .002232
          30     .7037    .9505     .506974
          35     .5075    .9902     .399523
          40    3.1766   1.0634     .958932
          45     .4681   1.0948     .375288
          50    1.4850   1.0889     .775184
          55     .4112   1.0907     .338502
          60    1.8621   1.1068     .846107
          65     .1508   1.0565     .140674
          70    1.5768   1.0424     .794995
          75     .3198   1.0156     .274882
          80    1.9704   1.0745     .861976
          85     .6233   1.0723     .465506
          90     .4269   1.0473     .348884
          95     .4370   1.0119     .355419
         100     .8172    .9945     .560152
     MINIMUM DISTANCE TEST for csp_100mb.txt  
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .201669

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file csp_100mb.txt  
 sample no:  1     r^3=   8.268     p-value= .24089
 sample no:  2     r^3= 250.731     p-value= .99977
 sample no:  3     r^3=  43.181     p-value= .76293
 sample no:  4     r^3=  11.043     p-value= .30794
 sample no:  5     r^3=  21.218     p-value= .50701
 sample no:  6     r^3=  64.004     p-value= .88157
 sample no:  7     r^3= 106.361     p-value= .97114
 sample no:  8     r^3=   3.719     p-value= .11659
 sample no:  9     r^3=  14.774     p-value= .38888
 sample no: 10     r^3=  92.787     p-value= .95463
 sample no: 11     r^3=  78.384     p-value= .92667
 sample no: 12     r^3=    .876     p-value= .02879
 sample no: 13     r^3=  32.045     p-value= .65636
 sample no: 14     r^3=  28.961     p-value= .61916
 sample no: 15     r^3=  49.141     p-value= .80564
 sample no: 16     r^3=  53.334     p-value= .83099
 sample no: 17     r^3=  15.156     p-value= .39662
 sample no: 18     r^3=  16.150     p-value= .41628
 sample no: 19     r^3=  34.592     p-value= .68433
 sample no: 20     r^3=    .798     p-value= .02624
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file csp_100mb.txt        p-value= .761970
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR csp_100mb.txt  
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.8     -.7      .6      .5     -.5      .0
      .8      .0    -1.1     1.0      .1     1.7
     -.7    -1.8      .4    -1.5      .9    -1.0
     -.3      .0      .4     1.4    -1.6      .9
     1.1     -.3      .5     -.4     1.7      .7
      .6      .1     -.1     -.4      .9     -.3
      .0     -.1     -.8    -1.3     -.6      .0
      .8
           Chi-square with 42 degrees of freedom: 30.401
              z-score= -1.266  p-value= .091546
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .120851
                Test no.  2      p-value  .605135
                Test no.  3      p-value  .582297
                Test no.  4      p-value  .697281
                Test no.  5      p-value  .175203
                Test no.  6      p-value  .162312
                Test no.  7      p-value  .898796
                Test no.  8      p-value  .216385
                Test no.  9      p-value  .965008
                Test no. 10      p-value  .839390
   Results of the OSUM test for csp_100mb.txt  
        KSTEST on the above 10 p-values:  .192138

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file csp_100mb.txt  
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for csp_100mb.txt  :
       runs up; ks test for 10 p's: .820361
     runs down; ks test for 10 p's: .495104
                 Run test for csp_100mb.txt  :
       runs up; ks test for 10 p's: .717607
     runs down; ks test for 10 p's: .258103

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for csp_100mb.txt  
  No. of wins:  Observed Expected
                                98830    98585.86
                  98830= No. of wins, z-score= 1.092 pvalue= .86257
   Analysis of Throws-per-Game:
 Chisq=  28.05 for 20 degrees of freedom, p=  .89177
               Throws Observed Expected  Chisq     Sum
                  1    66439    66666.7    .778     .778
                  2    37999    37654.3   3.155    3.933
                  3    26768    26954.7   1.294    5.226
                  4    19481    19313.5   1.453    6.680
                  5    13637    13851.4   3.319    9.999
                  6    10008     9943.5    .418   10.417
                  7     7243     7145.0   1.343   11.760
                  8     5085     5139.1    .569   12.329
                  9     3700     3699.9    .000   12.329
                 10     2665     2666.3    .001   12.330
                 11     1912     1923.3    .067   12.396
                 12     1457     1388.7   3.355   15.751
                 13      973     1003.7    .940   16.691
                 14      676      726.1   3.462   20.154
                 15      528      525.8    .009   20.162
                 16      398      381.2    .745   20.907
                 17      274      276.5    .023   20.931
                 18      189      200.8    .697   21.628
                 19      175      146.0   5.767   27.395
                 20       99      106.2    .490   27.885
                 21      294      287.1    .165   28.050
            SUMMARY  FOR csp_100mb.txt  
                p-value for no. of wins: .862570
                p-value for throws/game: .891775

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file csp100.txt     
