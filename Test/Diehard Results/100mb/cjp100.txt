       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. NextUInt32, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for cjp_100mb.txt  
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  1 to 24   1.890
  duplicate       number       number 
  spacings       observed     expected
        0          74.       67.668
        1         140.      135.335
        2         141.      135.335
        3          79.       90.224
        4          50.       45.112
        5          12.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     7.15 p-value=  .693246
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  2 to 25   2.060
  duplicate       number       number 
  spacings       observed     expected
        0          56.       67.668
        1         135.      135.335
        2         139.      135.335
        3          96.       90.224
        4          47.       45.112
        5          22.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     4.73 p-value=  .420883
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  3 to 26   2.030
  duplicate       number       number 
  spacings       observed     expected
        0          64.       67.668
        1         121.      135.335
        2         146.      135.335
        3         104.       90.224
        4          43.       45.112
        5          15.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     5.47 p-value=  .515177
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  4 to 27   1.922
  duplicate       number       number 
  spacings       observed     expected
        0          72.       67.668
        1         142.      135.335
        2         133.      135.335
        3          91.       90.224
        4          39.       45.112
        5          17.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     2.17 p-value=  .096557
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  5 to 28   2.040
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         135.      135.335
        2         130.      135.335
        3          85.       90.224
        4          47.       45.112
        5          21.       18.045
  6 to INF         12.        8.282
 Chisquare with  6 d.o.f. =     2.83 p-value=  .169692
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  6 to 29   2.114
  duplicate       number       number 
  spacings       observed     expected
        0          66.       67.668
        1         113.      135.335
        2         144.      135.335
        3          84.       90.224
        4          65.       45.112
        5          25.       18.045
  6 to INF          3.        8.282
 Chisquare with  6 d.o.f. =    19.53 p-value=  .996642
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  7 to 30   2.120
  duplicate       number       number 
  spacings       observed     expected
        0          50.       67.668
        1         138.      135.335
        2         132.      135.335
        3         103.       90.224
        4          50.       45.112
        5          18.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     7.15 p-value=  .692706
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  8 to 31   2.048
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         131.      135.335
        2         140.      135.335
        3          90.       90.224
        4          42.       45.112
        5          22.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     1.84 p-value=  .066483
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           cjp_100mb.txt   using bits  9 to 32   2.086
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         128.      135.335
        2         142.      135.335
        3          85.       90.224
        4          53.       45.112
        5          22.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     3.76 p-value=  .290724
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .693246   .420883   .515177   .096557   .169692
        .996642   .692706   .066483   .290724
  A KSTEST for the 9 p-values yields  .379390

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file cjp_100mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 79.855; p-value= .079008
           OPERM5 test for file cjp_100mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 84.823; p-value= .155664
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for cjp_100mb.txt  
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       183     211.4  3.819843    3.820
        29      5190    5134.0   .610605    4.430
        30     23096   23103.0   .002149    4.433
        31     11531   11551.5   .036467    4.469
  chisquare= 4.469 for 3 d. of f.; p-value= .802191
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for cjp_100mb.txt  
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       225     211.4   .872538     .873
        30      5167    5134.0   .211983    1.085
        31     23164   23103.0   .160814    1.245
        32     11444   11551.5  1.000864    2.246
  chisquare= 2.246 for 3 d. of f.; p-value= .544066
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for cjp_100mb.txt  
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          927       944.3        .317        .317
          r =5        21579     21743.9       1.251       1.568
          r =6        77494     77311.8        .429       1.997
                        p=1-exp(-SUM/2)= .63155
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21660     21743.9        .324        .572
          r =6        77411     77311.8        .127        .699
                        p=1-exp(-SUM/2)= .29494
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          943       944.3        .002        .002
          r =5        21588     21743.9       1.118       1.120
          r =6        77469     77311.8        .320       1.439
                        p=1-exp(-SUM/2)= .51305
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          923       944.3        .481        .481
          r =5        21641     21743.9        .487        .967
          r =6        77436     77311.8        .200       1.167
                        p=1-exp(-SUM/2)= .44205
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          913       944.3       1.038       1.038
          r =5        21741     21743.9        .000       1.038
          r =6        77346     77311.8        .015       1.053
                        p=1-exp(-SUM/2)= .40935
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21690     21743.9        .134        .660
          r =6        77388     77311.8        .075        .735
                        p=1-exp(-SUM/2)= .30767
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          895       944.3       2.574       2.574
          r =5        21815     21743.9        .232       2.806
          r =6        77290     77311.8        .006       2.813
                        p=1-exp(-SUM/2)= .75495
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          884       944.3       3.851       3.851
          r =5        21951     21743.9       1.973       5.823
          r =6        77165     77311.8        .279       6.102
                        p=1-exp(-SUM/2)= .95269
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          940       944.3        .020        .020
          r =5        21942     21743.9       1.805       1.824
          r =6        77118     77311.8        .486       2.310
                        p=1-exp(-SUM/2)= .68498
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21939     21743.9       1.751       1.831
          r =6        77108     77311.8        .537       2.368
                        p=1-exp(-SUM/2)= .69394
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          995       944.3       2.722       2.722
          r =5        21676     21743.9        .212       2.934
          r =6        77329     77311.8        .004       2.938
                        p=1-exp(-SUM/2)= .76983
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          847       944.3      10.026      10.026
          r =5        21813     21743.9        .220      10.246
          r =6        77340     77311.8        .010      10.256
                        p=1-exp(-SUM/2)= .99407
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          904       944.3       1.720       1.720
          r =5        21658     21743.9        .339       2.059
          r =6        77438     77311.8        .206       2.265
                        p=1-exp(-SUM/2)= .67783
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          968       944.3        .595        .595
          r =5        21842     21743.9        .443       1.037
          r =6        77190     77311.8        .192       1.229
                        p=1-exp(-SUM/2)= .45916
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          978       944.3       1.203       1.203
          r =5        21658     21743.9        .339       1.542
          r =6        77364     77311.8        .035       1.577
                        p=1-exp(-SUM/2)= .54551
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          998       944.3       3.054       3.054
          r =5        21892     21743.9       1.009       4.062
          r =6        77110     77311.8        .527       4.589
                        p=1-exp(-SUM/2)= .89919
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1014       944.3       5.144       5.144
          r =5        21789     21743.9        .094       5.238
          r =6        77197     77311.8        .170       5.408
                        p=1-exp(-SUM/2)= .93308
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          983       944.3       1.586       1.586
          r =5        21791     21743.9        .102       1.688
          r =6        77226     77311.8        .095       1.783
                        p=1-exp(-SUM/2)= .59000
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          973       944.3        .872        .872
          r =5        21808     21743.9        .189       1.061
          r =6        77219     77311.8        .111       1.173
                        p=1-exp(-SUM/2)= .44361
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          959       944.3        .229        .229
          r =5        21735     21743.9        .004        .232
          r =6        77306     77311.8        .000        .233
                        p=1-exp(-SUM/2)= .10991
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21726     21743.9        .015        .026
          r =6        77333     77311.8        .006        .032
                        p=1-exp(-SUM/2)= .01592
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          951       944.3        .048        .048
          r =5        21554     21743.9       1.658       1.706
          r =6        77495     77311.8        .434       2.140
                        p=1-exp(-SUM/2)= .65701
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          918       944.3        .733        .733
          r =5        21765     21743.9        .020        .753
          r =6        77317     77311.8        .000        .753
                        p=1-exp(-SUM/2)= .31387
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          964       944.3        .411        .411
          r =5        21709     21743.9        .056        .467
          r =6        77327     77311.8        .003        .470
                        p=1-exp(-SUM/2)= .20940
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG cjp_100mb.txt  
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          976       944.3       1.064       1.064
          r =5        21631     21743.9        .586       1.650
          r =6        77393     77311.8        .085       1.736
                        p=1-exp(-SUM/2)= .58012
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .631554     .294941     .513052     .442053     .409352
     .307671     .754954     .952689     .684978     .693939
     .769825     .994071     .677827     .459155     .545515
     .899194     .933079     .589997     .443607     .109914
     .015916     .657010     .313872     .209402     .580118
   brank test summary for cjp_100mb.txt  
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .567278

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141889 missing words,    -.05 sigmas from mean, p-value= .48106
 tst no  2:  141363 missing words,   -1.28 sigmas from mean, p-value= .10090
 tst no  3:  142060 missing words,     .35 sigmas from mean, p-value= .63759
 tst no  4:  142160 missing words,     .59 sigmas from mean, p-value= .72096
 tst no  5:  140979 missing words,   -2.17 sigmas from mean, p-value= .01487
 tst no  6:  141751 missing words,    -.37 sigmas from mean, p-value= .35572
 tst no  7:  142060 missing words,     .35 sigmas from mean, p-value= .63759
 tst no  8:  142251 missing words,     .80 sigmas from mean, p-value= .78765
 tst no  9:  142452 missing words,    1.27 sigmas from mean, p-value= .89759
 tst no 10:  141686 missing words,    -.52 sigmas from mean, p-value= .30091
 tst no 11:  142522 missing words,    1.43 sigmas from mean, p-value= .92385
 tst no 12:  141351 missing words,   -1.30 sigmas from mean, p-value= .09603
 tst no 13:  141784 missing words,    -.29 sigmas from mean, p-value= .38483
 tst no 14:  141894 missing words,    -.04 sigmas from mean, p-value= .48572
 tst no 15:  141970 missing words,     .14 sigmas from mean, p-value= .55636
 tst no 16:  141302 missing words,   -1.42 sigmas from mean, p-value= .07795
 tst no 17:  142217 missing words,     .72 sigmas from mean, p-value= .76389
 tst no 18:  141750 missing words,    -.37 sigmas from mean, p-value= .35485
 tst no 19:  142299 missing words,     .91 sigmas from mean, p-value= .81871
 tst no 20:  141455 missing words,   -1.06 sigmas from mean, p-value= .14423

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator cjp_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for cjp_100mb.txt   using bits 23 to 32        142048   .478  .6837
    OPSO for cjp_100mb.txt   using bits 22 to 31        141874  -.122  .4515
    OPSO for cjp_100mb.txt   using bits 21 to 30        142050   .485  .6862
    OPSO for cjp_100mb.txt   using bits 20 to 29        141534 -1.294  .0978
    OPSO for cjp_100mb.txt   using bits 19 to 28        141987   .268  .6056
    OPSO for cjp_100mb.txt   using bits 18 to 27        141816  -.322  .3738
    OPSO for cjp_100mb.txt   using bits 17 to 26        141502 -1.405  .0801
    OPSO for cjp_100mb.txt   using bits 16 to 25        141840  -.239  .4055
    OPSO for cjp_100mb.txt   using bits 15 to 24        142316  1.402  .9196
    OPSO for cjp_100mb.txt   using bits 14 to 23        141912   .009  .5037
    OPSO for cjp_100mb.txt   using bits 13 to 22        141980   .244  .5963
    OPSO for cjp_100mb.txt   using bits 12 to 21        141951   .144  .5571
    OPSO for cjp_100mb.txt   using bits 11 to 20        142564  2.257  .9880
    OPSO for cjp_100mb.txt   using bits 10 to 19        142100   .657  .7446
    OPSO for cjp_100mb.txt   using bits  9 to 18        142021   .385  .6499
    OPSO for cjp_100mb.txt   using bits  8 to 17        141900  -.032  .4872
    OPSO for cjp_100mb.txt   using bits  7 to 16        142370  1.589  .9439
    OPSO for cjp_100mb.txt   using bits  6 to 15        141620  -.998  .1592
    OPSO for cjp_100mb.txt   using bits  5 to 14        141939   .102  .5407
    OPSO for cjp_100mb.txt   using bits  4 to 13        142103   .668  .7479
    OPSO for cjp_100mb.txt   using bits  3 to 12        142190   .968  .8334
    OPSO for cjp_100mb.txt   using bits  2 to 11        141977   .233  .5923
    OPSO for cjp_100mb.txt   using bits  1 to 10        141845  -.222  .4122
 OQSO test for generator cjp_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for cjp_100mb.txt   using bits 28 to 32        142256  1.175  .8800
    OQSO for cjp_100mb.txt   using bits 27 to 31        141458 -1.530  .0630
    OQSO for cjp_100mb.txt   using bits 26 to 30        142010   .341  .6335
    OQSO for cjp_100mb.txt   using bits 25 to 29        141982   .246  .5973
    OQSO for cjp_100mb.txt   using bits 24 to 28        141944   .118  .5468
    OQSO for cjp_100mb.txt   using bits 23 to 27        141652  -.872  .1915
    OQSO for cjp_100mb.txt   using bits 22 to 26        142253  1.165  .8780
    OQSO for cjp_100mb.txt   using bits 21 to 25        142179   .914  .8197
    OQSO for cjp_100mb.txt   using bits 20 to 24        142057   .501  .6917
    OQSO for cjp_100mb.txt   using bits 19 to 23        141889  -.069  .4725
    OQSO for cjp_100mb.txt   using bits 18 to 22        141950   .138  .5548
    OQSO for cjp_100mb.txt   using bits 17 to 21        141517 -1.330  .0918
    OQSO for cjp_100mb.txt   using bits 16 to 20        141669  -.815  .2076
    OQSO for cjp_100mb.txt   using bits 15 to 19        142010   .341  .6335
    OQSO for cjp_100mb.txt   using bits 14 to 18        142226  1.073  .8585
    OQSO for cjp_100mb.txt   using bits 13 to 17        142063   .521  .6988
    OQSO for cjp_100mb.txt   using bits 12 to 16        142282  1.263  .8968
    OQSO for cjp_100mb.txt   using bits 11 to 15        141355 -1.879  .0301
    OQSO for cjp_100mb.txt   using bits 10 to 14        141603 -1.038  .1495
    OQSO for cjp_100mb.txt   using bits  9 to 13        141735  -.591  .2773
    OQSO for cjp_100mb.txt   using bits  8 to 12        141559 -1.188  .1175
    OQSO for cjp_100mb.txt   using bits  7 to 11        142009   .338  .6323
    OQSO for cjp_100mb.txt   using bits  6 to 10        141815  -.320  .3746
    OQSO for cjp_100mb.txt   using bits  5 to  9        141722  -.635  .2627
    OQSO for cjp_100mb.txt   using bits  4 to  8        141963   .182  .5722
    OQSO for cjp_100mb.txt   using bits  3 to  7        142095   .629  .7355
    OQSO for cjp_100mb.txt   using bits  2 to  6        141640  -.913  .1806
    OQSO for cjp_100mb.txt   using bits  1 to  5        141799  -.374  .3542
  DNA test for generator cjp_100mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for cjp_100mb.txt   using bits 31 to 32        141719  -.561  .2872
     DNA for cjp_100mb.txt   using bits 30 to 31        142075   .489  .6875
     DNA for cjp_100mb.txt   using bits 29 to 30        141911   .005  .5020
     DNA for cjp_100mb.txt   using bits 28 to 29        141661  -.733  .2319
     DNA for cjp_100mb.txt   using bits 27 to 28        142013   .306  .6201
     DNA for cjp_100mb.txt   using bits 26 to 27        141714  -.576  .2822
     DNA for cjp_100mb.txt   using bits 25 to 26        142195   .843  .8003
     DNA for cjp_100mb.txt   using bits 24 to 25        141833  -.225  .4109
     DNA for cjp_100mb.txt   using bits 23 to 24        142205   .872  .8084
     DNA for cjp_100mb.txt   using bits 22 to 23        142004   .279  .6100
     DNA for cjp_100mb.txt   using bits 21 to 22        141917   .023  .5090
     DNA for cjp_100mb.txt   using bits 20 to 21        142025   .341  .6335
     DNA for cjp_100mb.txt   using bits 19 to 20        141850  -.175  .4305
     DNA for cjp_100mb.txt   using bits 18 to 19        141839  -.207  .4178
     DNA for cjp_100mb.txt   using bits 17 to 18        142341  1.273  .8986
     DNA for cjp_100mb.txt   using bits 16 to 17        141993   .247  .5975
     DNA for cjp_100mb.txt   using bits 15 to 16        141713  -.579  .2812
     DNA for cjp_100mb.txt   using bits 14 to 15        141441 -1.381  .0836
     DNA for cjp_100mb.txt   using bits 13 to 14        142266  1.052  .8536
     DNA for cjp_100mb.txt   using bits 12 to 13        142219   .913  .8195
     DNA for cjp_100mb.txt   using bits 11 to 12        141442 -1.379  .0840
     DNA for cjp_100mb.txt   using bits 10 to 11        141859  -.148  .4410
     DNA for cjp_100mb.txt   using bits  9 to 10        142382  1.394  .9184
     DNA for cjp_100mb.txt   using bits  8 to  9        141705  -.603  .2733
     DNA for cjp_100mb.txt   using bits  7 to  8        142175   .784  .7834
     DNA for cjp_100mb.txt   using bits  6 to  7        141822  -.258  .3984
     DNA for cjp_100mb.txt   using bits  5 to  6        142027   .347  .6357
     DNA for cjp_100mb.txt   using bits  4 to  5        141483 -1.258  .1043
     DNA for cjp_100mb.txt   using bits  3 to  4        141955   .135  .5536
     DNA for cjp_100mb.txt   using bits  2 to  3        141794  -.340  .3669
     DNA for cjp_100mb.txt   using bits  1 to  2        141707  -.597  .2753

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for cjp_100mb.txt  
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for cjp_100mb.txt    2547.51       .672      .749183
 byte stream for cjp_100mb.txt    2420.86     -1.119      .131523

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2454.64      -.642      .260591
           bits  2 to  9  2376.44     -1.747      .040278
           bits  3 to 10  2408.45     -1.295      .097717
           bits  4 to 11  2467.13      -.465      .321008
           bits  5 to 12  2532.08       .454      .674968
           bits  6 to 13  2564.43       .911      .818886
           bits  7 to 14  2645.10      2.052      .979918
           bits  8 to 15  2457.73      -.598      .274994
           bits  9 to 16  2472.74      -.385      .349946
           bits 10 to 17  2590.60      1.281      .899950
           bits 11 to 18  2406.03     -1.329      .091928
           bits 12 to 19  2368.63     -1.858      .031594
           bits 13 to 20  2485.27      -.208      .417515
           bits 14 to 21  2546.58       .659      .744979
           bits 15 to 22  2410.76     -1.262      .103476
           bits 16 to 23  2599.67      1.410      .920673
           bits 17 to 24  2474.92      -.355      .361393
           bits 18 to 25  2477.11      -.324      .373087
           bits 19 to 26  2346.93     -2.165      .015201
           bits 20 to 27  2499.47      -.008      .497006
           bits 21 to 28  2606.74      1.510      .934415
           bits 22 to 29  2562.36       .882      .811068
           bits 23 to 30  2577.58      1.097      .863721
           bits 24 to 31  2313.57     -2.637      .004187
           bits 25 to 32  2441.02      -.834      .202129

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file cjp_100mb.txt  
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3556    z-score:  1.507 p-value: .934075
            Successes: 3501    z-score: -1.005 p-value: .157553
            Successes: 3531    z-score:   .365 p-value: .642555
            Successes: 3536    z-score:   .594 p-value: .723613
            Successes: 3529    z-score:   .274 p-value: .607947
            Successes: 3533    z-score:   .457 p-value: .676028
            Successes: 3530    z-score:   .320 p-value: .625377
            Successes: 3503    z-score:  -.913 p-value: .180558
            Successes: 3505    z-score:  -.822 p-value: .205562
            Successes: 3569    z-score:  2.100 p-value: .982156
 
           square size   avg. no.  parked   sample sigma
             100.            3529.300       21.050
            KSTEST for the above 10: p=  .499914

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file cjp_100mb.txt  
     Sample no.    d^2     avg     equiv uni            
           5     .8227    .9599     .562561
          10     .5956    .8750     .450430
          15     .1423    .7441     .133225
          20    1.4142    .8421     .758609
          25     .7546    .7686     .531558
          30    3.0139    .8087     .951636
          35     .7794    .7876     .543132
          40     .3955    .7424     .327991
          45    1.4330    .8044     .763127
          50     .3041    .8934     .263364
          55     .0482    .8824     .047298
          60     .1141    .8716     .108324
          65     .7210    .8799     .515486
          70     .0453    .8565     .044497
          75    7.1225    .9222     .999222
          80     .3727    .9369     .312383
          85    1.8913    .9267     .850557
          90     .1264    .8968     .119337
          95    1.2687    .8954     .720588
         100     .4421    .9067     .358711
     MINIMUM DISTANCE TEST for cjp_100mb.txt  
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .675568

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file cjp_100mb.txt  
 sample no:  1     r^3=  28.262     p-value= .61018
 sample no:  2     r^3=  33.622     p-value= .67396
 sample no:  3     r^3=  34.525     p-value= .68362
 sample no:  4     r^3=  26.206     p-value= .58252
 sample no:  5     r^3=  21.969     p-value= .51920
 sample no:  6     r^3=  15.979     p-value= .41294
 sample no:  7     r^3=  40.580     p-value= .74145
 sample no:  8     r^3=  15.611     p-value= .40569
 sample no:  9     r^3=  15.847     p-value= .41035
 sample no: 10     r^3=  36.249     p-value= .70129
 sample no: 11     r^3=   4.921     p-value= .15127
 sample no: 12     r^3=   7.795     p-value= .22882
 sample no: 13     r^3=   2.782     p-value= .08855
 sample no: 14     r^3=  15.225     p-value= .39800
 sample no: 15     r^3=  43.582     p-value= .76607
 sample no: 16     r^3=  40.836     p-value= .74365
 sample no: 17     r^3=  41.861     p-value= .75226
 sample no: 18     r^3=  15.266     p-value= .39883
 sample no: 19     r^3=  29.838     p-value= .63013
 sample no: 20     r^3=  38.911     p-value= .72665
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file cjp_100mb.txt        p-value= .840207
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR cjp_100mb.txt  
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
      .6    -1.2     -.8    -1.7     -.6    -1.1
      .7     1.0      .3     -.3    -1.1      .0
     1.6    -1.3     -.6      .5     1.1     -.1
      .1    -1.6     -.3     -.9     3.1      .3
     -.9      .4     1.6     -.7    -1.8      .9
     -.6      .6    -1.2    -1.1      .6      .1
      .0    -2.0     1.3     -.7     1.6      .0
      .8
           Chi-square with 42 degrees of freedom: 50.834
              z-score=   .964  p-value= .835452
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .412991
                Test no.  2      p-value  .941666
                Test no.  3      p-value  .624626
                Test no.  4      p-value  .745919
                Test no.  5      p-value  .737881
                Test no.  6      p-value  .447368
                Test no.  7      p-value  .675298
                Test no.  8      p-value  .718439
                Test no.  9      p-value  .406029
                Test no. 10      p-value  .178810
   Results of the OSUM test for cjp_100mb.txt  
        KSTEST on the above 10 p-values:  .628596

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file cjp_100mb.txt  
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for cjp_100mb.txt  :
       runs up; ks test for 10 p's: .420234
     runs down; ks test for 10 p's: .771958
                 Run test for cjp_100mb.txt  :
       runs up; ks test for 10 p's: .888399
     runs down; ks test for 10 p's: .421487

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for cjp_100mb.txt  
  No. of wins:  Observed Expected
                                98930    98585.86
                  98930= No. of wins, z-score= 1.539 pvalue= .93812
   Analysis of Throws-per-Game:
 Chisq=   7.64 for 20 degrees of freedom, p=  .00601
               Throws Observed Expected  Chisq     Sum
                  1    66767    66666.7    .151     .151
                  2    37752    37654.3    .253     .404
                  3    26983    26954.7    .030     .434
                  4    19110    19313.5   2.143    2.577
                  5    13838    13851.4    .013    2.590
                  6     9938     9943.5    .003    2.593
                  7     7233     7145.0   1.083    3.677
                  8     5145     5139.1    .007    3.684
                  9     3633     3699.9   1.208    4.892
                 10     2634     2666.3    .391    5.283
                 11     1938     1923.3    .112    5.395
                 12     1399     1388.7    .076    5.471
                 13      975     1003.7    .821    6.292
                 14      734      726.1    .085    6.377
                 15      525      525.8    .001    6.379
                 16      389      381.2    .162    6.540
                 17      272      276.5    .075    6.615
                 18      203      200.8    .023    6.638
                 19      147      146.0    .007    6.645
                 20       96      106.2    .982    7.628
                 21      289      287.1    .012    7.640
            SUMMARY  FOR cjp_100mb.txt  
                p-value for no. of wins: .938122
                p-value for throws/game: .006007

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file cjp100.txt     
